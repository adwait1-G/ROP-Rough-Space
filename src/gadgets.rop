Gadgets information
============================================================
0x00000000004bf715 : adc al, 0 ; add byte ptr [rax + 0x2e], bl ; cmc ; call qword ptr [rax]
0x00000000004296af : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429719 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049c1b5 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004c1f88 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp al, 0 ; add byte ptr [rax], dh ; retf 0xfff7
0x000000000046aeea : adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000423d28 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042fc95 : adc al, 0x13 ; jmp rdx
0x000000000042e285 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000043fdca : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000409274 : adc al, 0x24 ; call 0x405d64
0x000000000049beaa : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040ead8 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000418bb7 : adc al, 0x41 ; pop rsp ; ret
0x000000000043ba90 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000004c3ff4 : adc al, 0x5d ; add byte ptr [rax], al ; sbb ch, bl ; clc ; call qword ptr [rdx]
0x000000000041fd2a : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000043f536 : adc al, 0x89 ; ret 0xdaf7
0x0000000000464e2e : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042ab40 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042926e : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042fc91 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000421577 : adc al, 0xa ; jmp r10
0x000000000042e3f3 : adc al, 0xa ; sub eax, edx ; ret
0x000000000046aee8 : adc al, 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000043f318 : adc al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000043f378 : adc al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000043f3d8 : adc al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000046ad58 : adc al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000441d88 : adc al, 0xc2 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004be1d4 : adc al, 0xd8 ; std ; jmp rsp
0x00000000004016b9 : adc al, 0xdd ; fcomp dword ptr [rsi - 0x7cb7ff94] ; ret
0x0000000000422a51 : adc al, 0xe ; sub eax, edx ; ret
0x000000000049c28a : adc al, 0xf7 ; add rsp, 8 ; ret
0x00000000004a3909 : adc al, 0xf9 ; call rax
0x00000000004a3989 : adc al, 0xf9 ; jmp qword ptr [rdx + 0x22fff913]
0x00000000004a3985 : adc al, 0xf9 ; jmp qword ptr [rdx]
0x00000000004a3b05 : adc al, 0xf9 ; jmp rax
0x0000000000476a42 : adc al, 3 ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004be5f4 : adc al, 3 ; add byte ptr [rax], al ; test al, 0x3a ; hlt ; call qword ptr [rdx]
0x00000000004917ce : adc al, 9 ; ret 0xa074
0x00000000004a0876 : adc al, al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000429857 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004298c1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000492cbe : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049668f : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000476c0c : adc al, ch ; out dx, al ; jae 0x476c19 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040d857 : adc al, ch ; push rbx ; ret
0x000000000041c47f : adc al, ch ; retf
0x00000000004c2e10 : adc al, dl ; std ; jmp qword ptr [rdx]
0x00000000004a35e0 : adc bh, ah ; clc ; jmp rax
0x000000000047fc6e : adc bh, byte ptr [rcx] ; ret 0x850f
0x0000000000468522 : adc bh, byte ptr [rsi - 0x3a] ; add byte ptr [r8 - 0x77], cl ; ret
0x00000000004a3919 : adc bh, cl ; call rax
0x00000000004a3999 : adc bh, cl ; jmp qword ptr [rdx + 0x22fff911]
0x00000000004a3995 : adc bh, cl ; jmp qword ptr [rdx]
0x00000000004a3b15 : adc bh, cl ; jmp rax
0x0000000000426d15 : adc bl, ch ; call 0xffffffffc412f66a
0x00000000004237e5 : adc bl, ch ; call 0xffffffffc43ac13a
0x0000000000478df2 : adc bl, ch ; jno 0x478e48 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000483894 : adc bl, ch ; ret 0x8348
0x0000000000426704 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043b3c6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b437 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b397 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b3c5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000474770 : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000413026 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000044fbfd : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045075b : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000044fbf6 : adc byte ptr [r8 + 0x39], r9b ; ret
0x000000000047856f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000046a9e9 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46a9bd
0x0000000000416a2c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000004717c4 : adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041811e : adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x00000000004408a2 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004105e3 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000043f94c : adc byte ptr [rax + 0x101], bh ; syscall
0x00000000004789ec : adc byte ptr [rax + 0x29], cl ; ret
0x000000000045a49e : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x000000000043b1ea : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x000000000044fbf7 : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000418773 : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x000000000041d4bd : adc byte ptr [rax + 0x39], cl ; retf 0x1373
0x0000000000418d05 : adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x00000000004190f7 : adc byte ptr [rax + 0x39], cl ; retf 0x2173
0x000000000041d776 : adc byte ptr [rax + 0x39], cl ; retf 0x2273
0x0000000000478570 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000412547 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000048833a : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000047948e : adc byte ptr [rax + 1], cl ; ret
0x000000000046a9b8 : adc byte ptr [rax + 1], cl ; retf 0x8348
0x000000000046a9b7 : adc byte ptr [rax + 1], r9b ; retf 0x8348
0x000000000043f9ce : adc byte ptr [rax + 3], bh ; syscall
0x000000000040043d : adc byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000474ae4 : adc byte ptr [rax - 0x6df0fe06], al ; ret 0x8348
0x0000000000470cf1 : adc byte ptr [rax - 0x73], cl ; int1 ; or byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000042c284 : adc byte ptr [rax - 0x73], cl ; jg 0x42c2a1 ; jne 0x42c278 ; ret
0x000000000046b005 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000004708dc : adc byte ptr [rax - 0x73], cl ; push rsp ; retf 0xeb08
0x000000000046b004 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000440512 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000447478 : adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000447ddb : adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000042c69a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000409a67 : adc byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405d67
0x0000000000409310 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405d68
0x0000000000463bb7 : adc byte ptr [rax - 0x77], cl ; jo 0x463bd5 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464eec : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x000000000046a9ea : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46a9bc
0x0000000000463b77 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040e473 : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000416a2d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000485bbf : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000048a264 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x000000000041c769 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000048aa0d : adc byte ptr [rax - 0x77], cl ; retf
0x000000000047d4b9 : adc byte ptr [rax - 0x77], cl ; retf 0x8b48
0x000000000043297f : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000046e395 : adc byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 1], cl ; retf
0x0000000000438137 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000438173 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000400ada : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000420c33 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041fc0b : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004799c9 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041811f : adc byte ptr [rax - 0x7d], cl ; retf 0x4d01
0x000000000046d01c : adc byte ptr [rax], al ; add byte ptr [rax + 0x9e], bh ; syscall
0x0000000000429302 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x0000000000422aa0 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000422c40 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000042ae18 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000042b10c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429a61 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e46a : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004241a8 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000436288 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000418b4a : adc byte ptr [rbp + 0x39], cl ; ret
0x000000000045044c : adc byte ptr [rbp + 0x39], cl ; retf
0x0000000000478995 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x0000000000426828 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x000000000042c288 : adc byte ptr [rbp - 0x1b], dh ; ret
0x0000000000440387 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000400bb6 : adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x000000000049cdac : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041eb6b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040fcd3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c089a : adc byte ptr [rbx + 0xa], cl ; ret
0x0000000000413027 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x00000000004164e2 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047a697 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x47a6b1 ; ret
0x000000000043e11a : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x000000000040729e : adc byte ptr [rbx - 0x7bf0fd06], al ; retf
0x000000000043ed4d : adc byte ptr [rbx], al ; add cl, ch ; retf 0xfffe
0x00000000004105e4 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000044c6a4 : adc byte ptr [rcx + 0x39], cl ; ret
0x00000000004799cd : adc byte ptr [rcx + 0x39], cl ; retf
0x00000000004505f7 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x000000000041fa53 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000462280 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049ec58 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040d45c : adc byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000418af7 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000422ad3 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000494377 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000046997f : adc byte ptr [rcx], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000400dfd : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e894 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004164e5 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000420439 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000043e97f : adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004bfd70 : adc byte ptr [rdi - 0xb], cl ; jmp qword ptr [rcx]
0x00000000004a3c10 : adc byte ptr [rdi - 7], dh ; jmp qword ptr [rax]
0x00000000004a3268 : adc byte ptr [rdi - 8], dh ; jmp rax
0x000000000043bca3 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004977eb : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004962ef : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004974ef : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496bef : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496eef : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004965e7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496894 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497494 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497794 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496e94 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496b94 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000049658c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049561d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049543d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495e15 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494d35 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495c35 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044fbfe : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045075c : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045017c : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004c70f8 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rbx + rcx + 2], al ; retf 0xe0a
0x0000000000430189 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000485e9a : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x0000000000492cbd : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a315c : adc byte ptr [rdx], al ; clc ; jmp rax
0x000000000042f0eb : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000040127d : adc byte ptr [rdx], cl ; mov eax, 2 ; syscall
0x000000000046a42c : adc byte ptr [rip + 0x39480026], ah ; retf
0x0000000000417fef : adc byte ptr [rip + 0x7cbe004a], ah ; retf
0x000000000042ef9a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042e595 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e995 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42e969
0x000000000042ea13 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42e9e7
0x000000000042eea5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42ee79
0x000000000042ef23 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42eef7
0x000000000042e990 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42e96e
0x000000000042ea0e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42e9ec
0x000000000042eea0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ee7e
0x000000000042ef1e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eefc
0x00000000004216c5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000042717b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000049879d : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c8920 : adc byte ptr [rsi], dh ; std ; call rsp
0x00000000004917ff : adc byte ptr [rsp - 4], al ; ret
0x0000000000491845 : adc byte ptr [rsp - 8], al ; ret
0x000000000046997e : adc byte ptr cs:[rcx], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000496897 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3ae5 : adc cl, bh ; call rax
0x00000000004a3929 : adc cl, bh ; jmp qword ptr [rax + 0x16fff90f]
0x00000000004a3a65 : adc cl, bh ; jmp rsp
0x00000000004527ff : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00000000004237d5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000452802 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00000000004750ca : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049b48c : adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x00000000004799c1 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000464794 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x00000000004a3698 : adc dh, 0xf8 ; call rax
0x00000000004a355c : adc dh, ah ; clc ; push rax ; out 0xf8, eax ; call rax
0x0000000000426790 : adc dh, bh ; ret
0x000000000041b141 : adc dh, dh ; ret 0xf0f
0x000000000048cfb3 : adc dword ptr [rax + 0x39], ecx ; retf 0x840f
0x0000000000479333 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000411b82 : adc dword ptr [rax - 0x39], ecx ; ret 0xffd0
0x000000000044f655 : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004105d5 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000479a0c : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000044f72c : adc dword ptr [rax - 0x75], ecx ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000417cfe : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000041648c : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x00000000004632b5 : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000047617a : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000000000042b10b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x00000000004299f7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b00f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000424028 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004211eb : adc dword ptr [rbp - 0x76b70001], esi ; ret 0xc6eb
0x0000000000435b07 : adc dword ptr [rcx + 7], edi ; ret
0x00000000004357a2 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000435766 : adc dword ptr [rcx - 1], edi ; ret
0x0000000000403034 : adc dword ptr [rdi + 0x6cbfe0], edi ; call rax
0x0000000000435c69 : adc dword ptr [rdi - 8], edi ; ret
0x000000000043dd6c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043de9f : adc dword ptr [rsi + 3], edx ; ret
0x000000000043df3c : adc dword ptr [rsi + 7], edx ; ret
0x000000000043dd3e : adc dword ptr [rsi - 1], edx ; ret
0x00000000004299f6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3981 : adc eax, 0x14a2fff9 ; stc ; jmp qword ptr [rdx]
0x00000000004a38fd : adc eax, 0x1550fff9 ; stc ; call rax
0x00000000004a3af9 : adc eax, 0x1560fff9 ; stc ; jmp rax
0x000000000044f636 : adc eax, 0x27c3fd ; je 0x44f648 ; ret
0x00000000004442b7 : adc eax, 0x285cdc ; pop rbx ; ret
0x00000000004b9664 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x000000000047139d : adc eax, 0x4000003 ; add rsp, 8 ; ret
0x00000000004712d9 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x000000000043f3bb : adc eax, 0x50 ; add byte ptr [rax], al ; ret
0x0000000000429581 : adc eax, 0x83480000 ; ret 0xe910
0x000000000046e5a9 : adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000496390 : adc eax, 0x894d0000 ; retf
0x000000000046679a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042ae6e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494b59 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423ea8 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049658f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a2f9 : adc eax, eax ; ret
0x000000000047a436 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004b9305 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000046b00c : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000049baf2 : adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x00000000004420ef : adc ecx, dword ptr [rax - 0x39] ; ret 0xffd0
0x00000000004154fa : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000447411 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044c974 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x00000000004a399d : adc ecx, edi ; jmp qword ptr [rdx]
0x00000000004a3b1d : adc ecx, edi ; jmp rax
0x00000000004a3a61 : adc ecx, edi ; push qword ptr [rax + rdx - 7] ; jmp rsp
0x00000000004a3911 : adc edi, ecx ; call rax
0x00000000004a3991 : adc edi, ecx ; jmp qword ptr [rdx + 0x22fff912]
0x00000000004a398d : adc edi, ecx ; jmp qword ptr [rdx]
0x00000000004a3b0d : adc edi, ecx ; jmp rax
0x00000000004ba81e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000049cdec : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000496772 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000435b06 : adc qword ptr [rcx + 7], rdi ; ret
0x00000000004357a1 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000435765 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000435c68 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000043de9e : adc qword ptr [rsi + 3], rdx ; ret
0x000000000043df3b : adc qword ptr [rsi + 7], rdx ; ret
0x000000000043dd3d : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000426703 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000476c0b : adc r8b, bpl ; out dx, al ; jae 0x476c1a ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000494cc0 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a435 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000042678f : adc sil, r15b ; ret
0x00000000004c4ac3 : add ah, ah ; add byte ptr [eax], al ; sub dh, ch ; stc ; call qword ptr [rsi]
0x00000000004a3578 : add ah, ah ; clc ; jmp rax
0x00000000004c3fc3 : add ah, ah ; pop rsp ; add byte ptr [rax], al ; sbb ch, bl ; clc ; call qword ptr [rbx]
0x00000000004c68c3 : add ah, ah ; test dword ptr [rax], eax ; add byte ptr [rax - 0x22], bl ; cli ; call rsi
0x00000000004c16c3 : add ah, ah ; xor eax, dword ptr [rax] ; add byte ptr [rax + 0x40], bh ; idiv bh ; ret
0x00000000004c50a3 : add ah, al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; or byte ptr [rdx], al ; cli ; call rsi
0x00000000004c13a3 : add ah, al ; xor byte ptr [rax], al ; add byte ptr [rax - 0xc], ch ; cmc ; call qword ptr [rdx]
0x000000000043e3ce : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e3ee : add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000043e47d : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e3ad : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c3fdb : add ah, bh ; pop rsp ; add byte ptr [rax], al ; and ch, bl ; clc ; call qword ptr [rax]
0x00000000004c0cdb : add ah, bh ; sub dword ptr [rax], eax ; add byte ptr [rax - 0x41], dh ; cmc ; call qword ptr [rcx]
0x00000000004ba847 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x00000000004bf907 : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004bf9e0 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x000000000043de9a : add ah, byte ptr [rdx - 0xf] ; jl 0x43deef ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004bedcb : add ah, ch ; or al, byte ptr [rax] ; add al, dl ; push rsp ; call qword ptr [rdx]
0x00000000004c7fcb : add ah, ch ; pushfq ; add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x00000000004c67cb : add ah, ch ; test byte ptr [rax], al ; add byte ptr [rax - 0x26], dh ; cli ; jmp rdi
0x00000000004c6cab : add ah, cl ; mov dword ptr [rax], eax ; add byte ptr [rax], dh ; or edi, ebx ; jmp rsi
0x00000000004be7d3 : add ah, dh ; add al, 0 ; add byte ptr [rax], cl ; hlt ; call qword ptr [rax]
0x00000000004c1fd3 : add ah, dh ; cmp al, 0 ; add byte ptr [rax], ch ; retf
0x00000000004c60d3 : add ah, dh ; jge 0x4c60df ; add byte ptr [rax - 0x7f], bh ; cli ; jmp rdi
0x00000000004c25b3 : add ah, dl ; add byte ptr [rax], al ; clc ; add al, bh ; call qword ptr [rcx]
0x00000000004c21b3 : add ah, dl ; add byte ptr ds:[rax], al ; clc ; fcomi st(7) ; jmp qword ptr [rbx]
0x00000000004bedb3 : add ah, dl ; or al, byte ptr [rax] ; add al, bl ; push rsp ; call qword ptr [rax]
0x00000000004c7fb3 : add ah, dl ; pushfq ; add byte ptr [rax], al ; cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x0000000000449ab1 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000449ae9 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000041bdcb : add al, 0 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xffff
0x000000000042320d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bd2f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423231 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049caf1 : add al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000440d72 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000426da8 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000043f27f : add al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004be795 : add al, 0 ; add byte ptr [rax], bh ; add edi, esi ; call rdi
0x00000000004be7d5 : add al, 0 ; add byte ptr [rax], cl ; hlt ; call qword ptr [rax]
0x000000000048f5e1 : add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x0000000000424da8 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000449e11 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x000000000041823d : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000402d35 : add al, 0 ; add byte ptr [rdi + 0x6cc720], bh ; call rbx
0x0000000000418d66 : add al, 0 ; add dh, dh ; ret
0x000000000040f4e4 : add al, 0 ; add rsp, 0xd8 ; ret
0x000000000046b00b : add al, 0x11 ; ret
0x00000000004a3a60 : add al, 0x11 ; stc ; push qword ptr [rax + rdx - 7] ; jmp rsp
0x000000000043e41d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000474719 : add al, 0x16 ; jae 0x4746c7 ; xor eax, eax ; ret
0x000000000042e281 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000042290a : add al, 0x17 ; sub eax, ecx ; ret
0x000000000043f25d : add al, 0x24 ; add rsp, 0x18 ; ret
0x0000000000409a6a : add al, 0x24 ; call 0x405d64
0x00000000004717cc : add al, 0x24 ; call rax
0x000000000046fad3 : add al, 0x24 ; lea rdi, qword ptr [rax + 0x6cb1e0] ; call rdx
0x000000000043f398 : add al, 0x24 ; mov eax, 0 ; syscall
0x000000000046af08 : add al, 0x24 ; mov eax, 0x14 ; syscall
0x000000000043f3f8 : add al, 0x24 ; mov eax, 1 ; syscall
0x000000000043f338 : add al, 0x24 ; mov eax, 2 ; syscall
0x000000000046ad78 : add al, 0x24 ; mov eax, 3 ; syscall
0x000000000044aa3a : add al, 0x24 ; mov r12, rsi ; jmp 0x44aa12
0x000000000044216c : add al, 0x24 ; mov rdx, rax ; mov eax, r12d ; syscall
0x000000000044f69a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000047c875 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000040eb20 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000044d0cd : add al, 0x29 ; ret 0x8941
0x0000000000465b1e : add al, 0x31 ; ret
0x0000000000465a1a : add al, 0x37 ; ret
0x0000000000415bdf : add al, 0x3a ; ret
0x00000000004b8926 : add al, 0x3d ; retf
0x00000000004668e6 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000004713a1 : add al, 0x48 ; add esp, 8 ; ret
0x000000000043b8fb : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000043ae09 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000043ae1b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x00000000004640a3 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000463fe3 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004351ea : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000463ec4 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000439649 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000465714 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000474716 : add al, 0x4c ; cmp eax, dword ptr [rsi + rdx] ; jae 0x4746ca ; xor eax, eax ; ret
0x0000000000474006 : add al, 0x4c ; cmp edx, eax ; jne 0x473fb4 ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000043f388 : add al, 0x51 ; add byte ptr [rax], al ; ret
0x00000000004c34e4 : add al, 0x52 ; add byte ptr [rax], al ; call 0x124c2d6d
0x00000000004c3be4 : add al, 0x59 ; add byte ptr [rax], al ; call 0x184c34a8
0x000000000043ae17 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000439657 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000044c972 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000041bd84 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000004668e4 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000041ff0a : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000004bf99f : add al, 0x79 ; ret
0x0000000000475351 : add al, 0x80 ; cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x0000000000499e83 : add al, 0x81 ; je 0x499e65 ; ret
0x000000000042926b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000499e7f : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x499e69 ; ret
0x000000000042ab43 : add al, 0x81 ; sub eax, edx ; ret
0x000000000043e518 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43e508 ; ret
0x0000000000428fc7 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000044947d : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000046b260 : add al, 0x85 ; leave ; jne 0x46b218 ; xor eax, eax ; ret
0x0000000000466fc9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000049b99b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000043ae06 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000439646 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x0000000000499eeb : add al, 0x88 ; add r8, rax ; jmp r8
0x000000000040e34a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000444169 : add al, 0x89 ; retf 0xeac0
0x000000000043e51b : add al, 0x8a ; je 0x43e505 ; ret
0x000000000045c580 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000041b784 : add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x0000000000489f33 : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000004c1d68 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c52a6 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000049b413 : add al, 0x98 ; add rax, r8 ; jmp rax
0x00000000004c7fe4 : add al, 0x9d ; add byte ptr [rax], al ; cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x000000000047ad05 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000422a4d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000435553 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f2db : add al, 0xf3 ; ret
0x00000000004267e9 : add al, 0xf6 ; ret 0x7408
0x00000000004be231 : add al, 0xfe ; jmp rax
0x0000000000481228 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004bfa17 : add al, 2 ; hlt ; ret
0x000000000042f7f7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c7b38 : add al, 3 ; mov dword ptr [rcx], eax ; ret
0x00000000004212ed : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000042ce18 : add al, 7 ; ret
0x000000000042e3ef : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004c190f : add al, ah ; jbe 0x4c190d ; call qword ptr [rax]
0x00000000004c5dff : add al, al ; push rbx ; cli ; jmp rsp
0x00000000004ae3a7 : add al, al ; sldt word ptr [rax] ; ret
0x00000000004c25b7 : add al, bh ; add al, bh ; call qword ptr [rcx]
0x00000000004c25b9 : add al, bh ; call qword ptr [rcx]
0x00000000004c21b7 : add al, bh ; fcomi st(7) ; jmp qword ptr [rbx]
0x00000000004a3155 : add al, bh ; inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x00000000004c8617 : add al, bl ; cld ; call qword ptr [rax]
0x00000000004c6747 : add al, bl ; fdivr st(2) ; jmp rsi
0x00000000004bedb7 : add al, bl ; push rsp ; call qword ptr [rax]
0x000000000041ac65 : add al, bpl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041adc6 : add al, bpl ; ret 0xffff
0x000000000049ecbe : add al, bpl ; retf
0x000000000040f6bf : add al, bpl ; retf 0xff21
0x0000000000497672 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004237d1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x00000000004191cd : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000425dc3 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004106b5 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000040049f : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x0000000000469ef6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004176f0 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041f846 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000445e4d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000451e1d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004233ad : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047db1c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000042a901 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004233d1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049cb01 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043ff62 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000004411e2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440f55 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440e21 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440d99 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000466803 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000400430 : add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000046a60a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000403935 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; syscall
0x0000000000478218 : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x0000000000424f28 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043d2a4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004752bd : add al, byte ptr [rax] ; add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x0000000000400463 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, ebp ; syscall
0x0000000000482f7e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x0000000000418818 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041d027 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a61c : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000447cfc : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x000000000044737c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044cb04 : add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x00000000004c92ed : add al, byte ptr [rax] ; ret
0x0000000000467487 : add al, byte ptr [rbp + 0x29] ; in eax, 0x29 ; retf 0x8d41
0x000000000044281e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004bf538 : add al, byte ptr [rdi + 0xa] ; ret
0x00000000004c4ec5 : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000004c4c9d : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000004c0285 : add al, byte ptr [rdx] ; ret
0x00000000004bf448 : add al, byte ptr [rdx] ; retf
0x000000000047a8c5 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000004c1d6c : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x0000000000445bf9 : add al, ch ; int1 ; retf
0x0000000000481109 : add al, ch ; int1 ; retf 0xfff9
0x00000000004c34e7 : add al, ch ; jns 0x4c34e7 ; call qword ptr [rcx]
0x00000000004c3be7 : add al, ch ; mov ah, 0xf8 ; call qword ptr [rdi]
0x000000000041ac66 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041ce5a : add al, ch ; push rax ; retf
0x0000000000419ef7 : add al, ch ; ret
0x000000000041d128 : add al, ch ; ret 0x350
0x0000000000419628 : add al, ch ; ret 0x38b
0x0000000000402628 : add al, ch ; ret 0x401
0x000000000048b9c8 : add al, ch ; ret 0xf75e
0x000000000046f6c8 : add al, ch ; ret 0xf921
0x000000000045efc8 : add al, ch ; ret 0xfa28
0x0000000000473928 : add al, ch ; ret 0xfde8
0x000000000041adc7 : add al, ch ; ret 0xffff
0x00000000004024bf : add al, ch ; retf
0x0000000000420bf0 : add al, ch ; retf 0x21b
0x000000000045a990 : add al, ch ; retf 0x8d
0x0000000000476ac0 : add al, ch ; retf 0xf8ad
0x000000000044f4f0 : add al, ch ; retf 0xfefd
0x000000000040f6c0 : add al, ch ; retf 0xff21
0x00000000004655d1 : add al, ch ; stc ; ret 0xfff9
0x00000000004c3c27 : add al, cl ; leave ; std ; call qword ptr [rbx]
0x00000000004c2eb7 : add al, cl ; xor bh, al ; jmp rsp
0x00000000004c47ff : add al, dh ; in eax, 0xf9 ; jmp rax
0x00000000004c6a5f : add al, dl ; in eax, 0xfa ; jmp qword ptr [rdx]
0x00000000004bedcf : add al, dl ; push rsp ; call qword ptr [rdx]
0x00000000004c0def : add al, dl ; retf
0x00000000004c727f : add al, dl ; sub bh, bl ; call rsp
0x00000000004c6bea : add bh, ah ; ret
0x0000000000444b4f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004c2739 : add bh, al ; call rsp
0x00000000004a315d : add bh, al ; jmp rax
0x000000000045f8ae : add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000410276 : add bh, bh ; dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000041340a : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000400ad7 : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047e17f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000402d3c : add bh, bh ; sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x000000000047a4a0 : add bh, byte ptr [rax + 1] ; ret
0x0000000000412372 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000040dd3b : add bh, byte ptr [rax - 1] ; ret
0x00000000004bf13b : add bh, byte ptr [rcx + 0x41380e0a] ; ret
0x000000000043d672 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000044321f : add bh, dh ; ret 0
0x00000000004703c6 : add bh, dh ; ret 0x804
0x00000000004c50a9 : add bh, dl ; call rsi
0x00000000004a35f8 : add bl, ah ; clc ; jmp rax
0x00000000004260a6 : add bl, al ; lea rax, qword ptr [rip + 0x15e71] ; ret
0x0000000000466fa1 : add bl, al ; mov eax, 2 ; ret
0x0000000000421154 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x000000000044427a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004c5a2f : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000004a37a0 : add bl, byte ptr [rbx] ; stc ; call qword ptr [rdx + 0x22fff91a]
0x00000000004c4c6f : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000004c5aed : add bl, byte ptr [rdx + 0xa] ; ret
0x000000000046a0fa : add bl, ch ; ret 0x1f0f
0x000000000046bcee : add bl, ch ; retf
0x000000000047f35f : add bl, ch ; retf 0x1f0f
0x0000000000486dd8 : add bl, ch ; retf 0x8945
0x00000000004bcc17 : add bl, cl ; or ecx, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000406417 : add bl, dh ; ret
0x00000000004c47fb : add byte ptr [0xffffffffe5f00000], bl ; stc ; jmp rax
0x00000000004c4ac5 : add byte ptr [eax], al ; sub dh, ch ; stc ; call qword ptr [rsi]
0x000000000047055a : add byte ptr [r11 + r9*4 + 0x40], cl ; xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x0000000000467424 : add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x00000000004655f8 : add byte ptr [r15 + 0x4b279c], dil ; call 0x4018d9
0x000000000047aa70 : add byte ptr [r15 + 0x6cc9c0], r15b ; call rax
0x000000000047ab9b : add byte ptr [r15 + 0x6cc9c4], r15b ; call rdx
0x000000000045b833 : add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x000000000045a81f : add byte ptr [r15 + r9 + 0x45], cl ; ret 0xf4c
0x0000000000474751 : add byte ptr [r8 + 0x39], r9b ; ret
0x0000000000425d1f : add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x0000000000468fae : add byte ptr [r8 + 0xf], cl ; ret 0x8d48
0x0000000000488b61 : add byte ptr [r8 + 1], cl ; retf 0x8b48
0x000000000049d4bf : add byte ptr [r8 + 1], r9b ; ret
0x0000000000468525 : add byte ptr [r8 - 0x77], cl ; ret
0x00000000004436b1 : add byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000446f15 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00000000004c2e0d : add byte ptr [r8], al ; adc al, dl ; std ; jmp qword ptr [rdx]
0x00000000004c2615 : add byte ptr [r8], al ; sub byte ptr [rcx], al ; clc ; call qword ptr [rdi]
0x00000000004c29fd : add byte ptr [r8], r8b ; nop ; sbb bh, al ; call qword ptr [rax]
0x000000000043fcd0 : add byte ptr [r8], r8b ; ret
0x000000000042114f : add byte ptr [rax + 0x16], bh ; ret
0x00000000004c6e1f : add byte ptr [rax + 0x16], dl ; sti ; jmp qword ptr [rdx]
0x00000000004c7027 : add byte ptr [rax + 0x18], bh ; sti ; call qword ptr [rax]
0x000000000043f21f : add byte ptr [rax + 0x18], bh ; syscall
0x00000000004c554f : add byte ptr [rax + 0x1a], ah ; cli ; jmp qword ptr [rax]
0x00000000004c2a47 : add byte ptr [rax + 0x1f], ch ; clc ; call qword ptr [rax]
0x0000000000499e9f : add byte ptr [rax + 0x26], bh ; syscall
0x000000000043dc3f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x0000000000405547 : add byte ptr [rax + 0x29], cl ; ret
0x000000000044c328 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000418d25 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000044b4a0 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00000000004202d0 : add byte ptr [rax + 0x29], cl ; retf
0x000000000041e045 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000041d6cf : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x00000000004be36f : add byte ptr [rax + 0x29], dh ; hlt ; call rdi
0x00000000004bf717 : add byte ptr [rax + 0x2e], bl ; cmc ; call qword ptr [rax]
0x00000000004172bb : add byte ptr [rax + 0x39], cl ; ret
0x0000000000483b6b : add byte ptr [rax + 0x39], cl ; ret 0x820f
0x0000000000417706 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044eb0b : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000004176c7 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x000000000046ded9 : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000447350 : add byte ptr [rax + 0x39], cl ; retf
0x0000000000430076 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000434493 : add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000432c2e : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000043ddc8 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000042fba1 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000004c2f47 : add byte ptr [rax + 0x3d], bh ; clc ; call qword ptr [rax]
0x000000000046ac1f : add byte ptr [rax + 0x3f], bh ; syscall
0x00000000004c16c7 : add byte ptr [rax + 0x40], bh ; idiv bh ; ret
0x000000000047a746 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000004c90ef : add byte ptr [rax + 0x50], dl ; std ; jmp qword ptr [rbx]
0x00000000004bff3f : add byte ptr [rax + 0x55], dh ; cmc ; call qword ptr [rcx]
0x0000000000411c38 : add byte ptr [rax + 0x5b004a1b], ah ; ret
0x0000000000462f77 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000043fcbf : add byte ptr [rax + 0x61], bh ; syscall
0x000000000044275f : add byte ptr [rax + 0x63], bh ; syscall
0x0000000000412358 : add byte ptr [rax + 0x63], cl ; jnp 0x4123d2 ; syscall
0x000000000045d02e : add byte ptr [rax + 0x63], cl ; ret
0x0000000000464c6f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000048aff4 : add byte ptr [rax + 0x63], cl ; retf 0x8348
0x000000000045c655 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000040ef91 : add byte ptr [rax + 0x63], cl ; retf 0x894c
0x000000000040dd02 : add byte ptr [rax + 0x63], cl ; stc ; syscall
0x000000000043f580 : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 0x48 ; syscall
0x000000000044cc08 : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 3 ; syscall
0x000000000046ac5f : add byte ptr [rax + 0x68], bh ; syscall
0x000000000046ac4f : add byte ptr [rax + 0x6b], bh ; syscall
0x000000000046ac6f : add byte ptr [rax + 0x6c], bh ; syscall
0x0000000000417c62 : add byte ptr [rax + 0x6ca800], bh ; ret
0x00000000004237cf : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000476974 : add byte ptr [rax + 0x75], al ; cmp bl, dh ; ret
0x000000000043b89f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004c44c7 : add byte ptr [rax + 0x7f], bh ; stc ; call rdi
0x000000000040f9ba : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x000000000046d01e : add byte ptr [rax + 0x9e], bh ; syscall
0x000000000043fe9f : add byte ptr [rax + 0xb], bh ; syscall
0x00000000004672ff : add byte ptr [rax + 0xc9], bh ; syscall
0x0000000000442801 : add byte ptr [rax + 0xca], bh ; syscall
0x000000000043ec06 : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000041d605 : add byte ptr [rax + 0xf48006c], ch ; retf 0x894c
0x0000000000465985 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000443b6b : add byte ptr [rax + 0xf], cl ; ret
0x00000000004126e7 : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000425d20 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000040fb59 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000468faf : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000426643 : add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000448bea : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x000000000044843d : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044affa : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x000000000041c9f5 : add byte ptr [rax + 0xf], cl ; retf 0x8348
0x0000000000469638 : add byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000041d608 : add byte ptr [rax + 0xf], cl ; retf 0x894c
0x0000000000401590 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000000000474a87 : add byte ptr [rax + 1], bh ; ret
0x0000000000425dc5 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004106b7 : add byte ptr [rax + 1], cl ; ret
0x0000000000488abf : add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000047b4dc : add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000047f147 : add byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000469d7c : add byte ptr [rax + 1], cl ; retf
0x000000000047f257 : add byte ptr [rax + 1], cl ; retf 0x42f6
0x0000000000434551 : add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000425dcf : add byte ptr [rax + 1], cl ; retf 0x8348
0x0000000000402b4f : add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000488b62 : add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000479930 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x000000000040042e : add byte ptr [rax + 2], bh ; syscall
0x000000000040042d : add byte ptr [rax + 2], dil ; syscall
0x000000000044edc4 : add byte ptr [rax + 3], bh ; syscall
0x000000000049ac0f : add byte ptr [rax + 5], bh ; ret
0x00000000004c51df : add byte ptr [rax + 7], dl ; cli ; jmp rdx
0x000000000043e43e : add byte ptr [rax + 8], bh ; pop rbx ; ret
0x000000000044271f : add byte ptr [rax + 8], bh ; syscall
0x000000000043e43d : add byte ptr [rax + 8], dil ; pop rbx ; ret
0x00000000004be36b : add byte ptr [rax + rax + 0x29700000], cl ; hlt ; call rdi
0x00000000004ad34b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x000000000041bfa8 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041c8b9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004713a0 : add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x00000000004c6b03 : add byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; or cl, dh ; cli ; jmp qword ptr [rdx]
0x00000000004ae4f7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000049c14f : add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000462787 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x0000000000403396 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000004c68c7 : add byte ptr [rax - 0x22], bl ; cli ; call rsi
0x00000000004c67cf : add byte ptr [rax - 0x26], dh ; cli ; jmp rdi
0x000000000041f1da : add byte ptr [rax - 0x36], ah ; add r9b, bpl ; retf 0xfffd
0x000000000043fd21 : add byte ptr [rax - 0x39], cl ; ret
0x00000000004527ef : add byte ptr [rax - 0x39], cl ; ret 0xffb0
0x000000000040dd2f : add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000042102b : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000044f72f : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x00000000004587df : add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000041043c : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000046680f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004667ef : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000046684f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004667ff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000046683f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000044f80f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000004a336f : add byte ptr [rax - 0x3f000763], ah ; sahf ; clc ; jmp rax
0x00000000004591d8 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000044cb1d : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000004788d5 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000041da5c : add byte ptr [rax - 0x418aff94], ch ; ret
0x00000000004c0cdf : add byte ptr [rax - 0x41], dh ; cmc ; call qword ptr [rcx]
0x00000000004894d2 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000048d607 : add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x00000000004c3967 : add byte ptr [rax - 0x64], bl ; clc ; jmp rbx
0x00000000004c6f37 : add byte ptr [rax - 0x67], cl ; std ; call rcx
0x000000000044fbf3 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000418d01 : add byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x0000000000449acf : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000449ab3 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000449aeb : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000047b7da : add byte ptr [rax - 0x73], cl ; jl 0x47b80a ; js 0x47b829 ; call rsp
0x000000000047baef : add byte ptr [rax - 0x73], cl ; jl 0x47bb1f ; js 0x47bb3e ; call rsp
0x000000000047beb6 : add byte ptr [rax - 0x73], cl ; jl 0x47bee6 ; js 0x47bf05 ; call rsp
0x000000000049ab6f : add byte ptr [rax - 0x73], cl ; jl 0x49aba0 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000041b13d : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004c61ef : add byte ptr [rax - 0x73], dh ; cli ; call rsi
0x00000000004750c7 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049baef : add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x000000000044cb4f : add byte ptr [rax - 0x75], cl ; add eax, 0x27fba9 ; ret
0x00000000004457df : add byte ptr [rax - 0x75], cl ; add eax, 0x287ae1 ; ret
0x00000000004167bf : add byte ptr [rax - 0x75], cl ; add eax, 0x2b38f9 ; ret
0x0000000000419b8b : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x000000000044fc0f : add byte ptr [rax - 0x75], cl ; jl 0x44fc40 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045ac98 : add byte ptr [rax - 0x75], cl ; jl 0x45acc9 ; and byte ptr [rax - 0x77], cl ; retf 0x30be
0x0000000000415196 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464f26 : add byte ptr [rax - 0x75], cl ; jp 0x464f71 ; jmp 0x464ef6
0x0000000000464f5f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047d5dd : add byte ptr [rax - 0x75], cl ; or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000416d67 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000004315bf : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000041e387 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x0000000000478c9f : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x45f8
0x0000000000445302 : add byte ptr [rax - 0x75], cl ; ret
0x000000000041d063 : add byte ptr [rax - 0x76b7ff94], ch ; retf 0xf4c
0x000000000049c287 : add byte ptr [rax - 0x77], cl ; adc al, 0xf7 ; add rsp, 8 ; ret
0x00000000004167ef : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000040fc52 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041df93 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004004a1 : add byte ptr [rax - 0x77], cl ; fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x00000000004003d1 : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rax + 1] ; syscall
0x0000000000414d02 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414e72 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004540c7 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x8948
0x0000000000455e12 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x894c
0x0000000000469939 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000441635 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000441535 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000044112d : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf 0xffed
0x000000000041bdcd : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xffff
0x000000000047a7dc : add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x000000000040faa1 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000401502 : add byte ptr [rax - 0x77], cl ; mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x00000000004411f1 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000041e640 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000004034cc : add byte ptr [rax - 0x77], cl ; ret
0x00000000004176f2 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041db6c : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000047a863 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000046a1cf : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x000000000043ed1a : add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x0000000000402b3e : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046c79f : add byte ptr [rax - 0x77], cl ; ret 0x8349
0x0000000000419a7f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000459b59 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000044ee64 : add byte ptr [rax - 0x77], cl ; ret 0x8840
0x0000000000455621 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043eb83 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000044f237 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000470ea7 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000425ccb : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045aaff : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000485b94 : add byte ptr [rax - 0x77], cl ; ret 0xe3e8
0x000000000045a264 : add byte ptr [rax - 0x77], cl ; ret 0xf0e9
0x0000000000413410 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004738d6 : add byte ptr [rax - 0x77], cl ; retf
0x0000000000429304 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000041ca07 : add byte ptr [rax - 0x77], cl ; retf 0x2948
0x00000000004100b7 : add byte ptr [rax - 0x77], cl ; retf 0x294c
0x000000000046a16e : add byte ptr [rax - 0x77], cl ; retf 0x2d75
0x0000000000422aa2 : add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000443974 : add byte ptr [rax - 0x77], cl ; retf 0x348
0x0000000000404eb2 : add byte ptr [rax - 0x77], cl ; retf 0x44f6
0x0000000000422c42 : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x00000000004535ff : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048b540 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000422a00 : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000041d066 : add byte ptr [rax - 0x77], cl ; retf 0xf4c
0x0000000000429186 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000042acfc : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000047217f : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000049e02d : add byte ptr [rax - 0x77], cl ; sub bl, r14b ; ret
0x0000000000470e43 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000043e9df : add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x0000000000404ab3 : add byte ptr [rax - 0x7af0a707], al ; retf 0xfffb
0x000000000046570f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000046814f : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x0000000000464a4a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000004436b2 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000411587 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x000000000045eddc : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 3
0x000000000041e558 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042126d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401828 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000455108 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000045672f : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041e682 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004016be : add byte ptr [rax - 0x7d], cl ; ret
0x000000000041bd2f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000043d76f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000041c709 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000469d2f : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000040eeaf : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047605f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a095f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045310f : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000040141f : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x0000000000446f16 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000044bf00 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000422acf : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000464967 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000425fbf : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000425f4f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000047db1e : add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000044730f : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000462757 : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000004848df : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000425560 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004293e3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422af3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000046767f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000041a05f : add byte ptr [rax - 0x7d], cl ; retf
0x000000000040dac8 : add byte ptr [rax - 0x7d], cl ; retf 0x4803
0x000000000040da78 : add byte ptr [rax - 0x7d], cl ; retf 0x4804
0x000000000040d92c : add byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040daa0 : add byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040daf0 : add byte ptr [rax - 0x7d], cl ; retf 0x4807
0x000000000040da05 : add byte ptr [rax - 0x7d], cl ; retf 0x4808
0x000000000040d990 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000040db90 : add byte ptr [rax - 0x7d], cl ; retf 0x480a
0x000000000040db64 : add byte ptr [rax - 0x7d], cl ; retf 0x480b
0x000000000040d9d2 : add byte ptr [rax - 0x7d], cl ; retf 0x480c
0x000000000040d960 : add byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000042e32f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000046584f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000044c684 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000044e10f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000004a3280 : add byte ptr [rax - 0x7e2f0008], 0xf8 ; jmp qword ptr [rax]
0x00000000004c60d7 : add byte ptr [rax - 0x7f], bh ; cli ; jmp rdi
0x0000000000419ef0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000402621 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x401
0x000000000049eae3 : add byte ptr [rax - 0x7f], cl ; jmp rax
0x0000000000446bfc : add byte ptr [rax - 0x7f], cl ; ret 0x5900
0x0000000000432d3b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004c13a7 : add byte ptr [rax - 0xc], ch ; cmc ; call qword ptr [rdx]
0x0000000000463fd2 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000410202 : add byte ptr [rax - 1], bh ; ret
0x000000000041691e : add byte ptr [rax - 1], dil ; ret
0x00000000004becff : add byte ptr [rax - 2], al ; hlt ; call qword ptr [rbx]
0x00000000004a3c44 : add byte ptr [rax - 7], bh ; jmp qword ptr [rax]
0x0000000000445bf6 : add byte ptr [rax], 0 ; add al, ch ; int1 ; retf
0x0000000000419ef4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000402625 : add byte ptr [rax], 0 ; add al, ch ; ret 0x401
0x0000000000420bed : add byte ptr [rax], 0 ; add al, ch ; retf 0x21b
0x00000000004143d9 : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000417c5f : add byte ptr [rax], 0 ; add byte ptr [rax + 0x6ca800], bh ; ret
0x000000000043454e : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000410439 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000047a7d9 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x000000000048b600 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041340d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047dfdb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call rax
0x000000000043555b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047834b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004662bb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044eaa3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000041ca53 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000417c6b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cdbb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000047c485 : add byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret
0x000000000042e811 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000447102 : add byte ptr [rax], 0 ; add dh, dh ; ret 0x4801
0x000000000040f9bb : add byte ptr [rax], 0 ; je 0x40f9d0 ; mov eax, edx ; pop rbx ; ret
0x000000000047a747 : add byte ptr [rax], 0 ; je 0x47a758 ; mov eax, edx ; pop rbx ; ret
0x00000000004a36b4 : add byte ptr [rax], ah ; stc ; call qword ptr [rax + 0x20fff91f]
0x00000000004c3ff2 : add byte ptr [rax], al ; adc al, 0x5d ; add byte ptr [rax], al ; sbb ch, bl ; clc ; call qword ptr [rdx]
0x00000000004be5f2 : add byte ptr [rax], al ; adc al, 3 ; add byte ptr [rax], al ; test al, 0x3a ; hlt ; call qword ptr [rdx]
0x00000000004c2e0e : add byte ptr [rax], al ; adc al, dl ; std ; jmp qword ptr [rdx]
0x00000000004bfd6e : add byte ptr [rax], al ; adc byte ptr [rdi - 0xb], cl ; jmp qword ptr [rcx]
0x00000000004c891e : add byte ptr [rax], al ; adc byte ptr [rsi], dh ; std ; call rsp
0x00000000004c1fd1 : add byte ptr [rax], al ; add ah, dh ; cmp al, 0 ; add byte ptr [rax], ch ; retf
0x000000000047139f : add byte ptr [rax], al ; add al, 0x48 ; add esp, 8 ; ret
0x00000000004c34e2 : add byte ptr [rax], al ; add al, 0x52 ; add byte ptr [rax], al ; call 0x124c2d6f
0x00000000004c3be2 : add byte ptr [rax], al ; add al, 0x59 ; add byte ptr [rax], al ; call 0x184c34aa
0x00000000004c7fe2 : add byte ptr [rax], al ; add al, 0x9d ; add byte ptr [rax], al ; cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x0000000000445bf7 : add byte ptr [rax], al ; add al, ch ; int1 ; retf
0x000000000041ce58 : add byte ptr [rax], al ; add al, ch ; push rax ; retf
0x0000000000419ef5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000402626 : add byte ptr [rax], al ; add al, ch ; ret 0x401
0x0000000000473926 : add byte ptr [rax], al ; add al, ch ; ret 0xfde8
0x0000000000420b0d : add byte ptr [rax], al ; add al, ch ; retf
0x0000000000420bee : add byte ptr [rax], al ; add al, ch ; retf 0x21b
0x000000000044f4ee : add byte ptr [rax], al ; add al, ch ; retf 0xfefd
0x0000000000460526 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000044321d : add byte ptr [rax], al ; add bh, dh ; ret 0
0x0000000000466f9f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x000000000046a0f8 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000046bcec : add byte ptr [rax], al ; add bl, ch ; retf
0x0000000000486dd6 : add byte ptr [rax], al ; add bl, ch ; retf 0x8945
0x00000000004143da : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042114d : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x000000000043f21d : add byte ptr [rax], al ; add byte ptr [rax + 0x18], bh ; syscall
0x000000000045c80b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004be36d : add byte ptr [rax], al ; add byte ptr [rax + 0x29], dh ; hlt ; call rdi
0x0000000000483b69 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044eb09 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000430074 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000434491 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000044275d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], bh ; syscall
0x0000000000412356 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; jnp 0x4123d4 ; syscall
0x0000000000464c6d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000040dd00 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; stc ; syscall
0x000000000046ac5d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x000000000046ac4d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x000000000046ac6d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x0000000000417c60 : add byte ptr [rax], al ; add byte ptr [rax + 0x6ca800], bh ; ret
0x000000000043b89d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000043fe9d : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x00000000004427ff : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000043ec04 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x0000000000448be8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x000000000044843b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044aff8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x000000000041c9f3 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; retf 0x8348
0x000000000040158e : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000047a4d3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000488be4 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000488abd : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000043454f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000044edc2 : add byte ptr [rax], al ; add byte ptr [rax + 3], bh ; syscall
0x000000000049ac0d : add byte ptr [rax], al ; add byte ptr [rax + 5], bh ; ret
0x000000000044271d : add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; syscall
0x000000000049c14d : add byte ptr [rax], al ; add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000462785 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000043fd1f : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004132bd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x00000000004587dd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000041043a : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000044cb1b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000004788d3 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000047b7d8 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47b80c ; js 0x47b82b ; call rsp
0x000000000047baed : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47bb21 ; js 0x47bb40 ; call rsp
0x000000000047beb4 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47bee8 ; js 0x47bf07 ; call rsp
0x0000000000419b89 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x0000000000415194 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464f24 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x464f73 ; jmp 0x464ef8
0x00000000004167ed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004540c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x8948
0x0000000000455e10 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x894c
0x0000000000469937 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000441633 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000441533 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000044112b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf 0xffed
0x000000000047a7da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x00000000004411ef : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000040fae1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041db6a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000046c79d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000047d604 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043eb81 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000425cc9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045aafd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000485b92 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe3e8
0x000000000041340e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004738d4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x00000000004100b5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x294c
0x00000000004535fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048b53e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000004229fe : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000429184 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000042acfa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000047217d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000043e9dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x0000000000404ab1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7af0a707], al ; retf 0xfffb
0x000000000045edda : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 3
0x0000000000442b8c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d76d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000444b53 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047605d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a095d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045310d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000044befe : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000042aa37 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000425fbd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000425f4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000044730d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000004849bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000042aaa1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046767d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042e32d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000044e10d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000049eae1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; jmp rax
0x0000000000434548 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000410200 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000420b0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000044321b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret 0
0x00000000004167ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000047473b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000464c6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x0000000000462eab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004132bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x00000000004587db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000049ac7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004167eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041db68 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000045ea0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000485b90 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe3e8
0x00000000004581cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d76b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000047605b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a095b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045310b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000425fbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000425f4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000044730b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000004849bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000049a5eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004155eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004af1d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004af6c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004ae882 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004af212 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004af702 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004ae87a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000004a3363 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf 0x42
0x00000000004a3353 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf 0x42
0x0000000000416fcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043d9ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049b2cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x0000000000422aab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042167b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000411dbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000442d09 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000049e26b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000004667cc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000047812f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000047dfdc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004b11fc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b03ac : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000045f934 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000043becc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043bedc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043beec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043befc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043bf0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043be4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043be5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043be6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043be7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043be8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043be9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043beac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043bebc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043be3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000043b89c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043b27c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000042114c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000043f21c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x000000000044275c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x63 ; syscall
0x000000000046ac5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000046ac4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000046ac6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000043fe9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000041507c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000047a4d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049ac0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 5 ; ret
0x000000000044271c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 8 ; syscall
0x000000000043555c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047834c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004167dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004167ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044ed13 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x000000000043e9dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x0000000000411dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004356ac : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000442d0a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004008ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415460 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414c61 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004155ed : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b01cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0964 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004af1d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004af6c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004b386c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x461a
0x00000000004a4574 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b0204 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004b09a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000004af214 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004af704 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004bdb65 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x00000000004a4654 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x43ec
0x00000000004b31dc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x456e
0x00000000004bc39c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4bb9
0x00000000004ae87c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000043f37a : add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004009a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x4009a1 ; call rax
0x000000000041ca54 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000400c4c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x000000000042cdbc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004a3365 : add byte ptr [rax], al ; add byte ptr [rax], dh ; retf 0x42
0x00000000004a3355 : add byte ptr [rax], al ; add byte ptr [rax], dl ; retf 0x42
0x0000000000476139 : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000045c5dc : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000432c9c : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; retf 0x70e
0x00000000004426b8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000046217d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00000000004480a2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000043e09a : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000043e3e9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000047bb1f : add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x000000000044294c : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000434e3d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000411573 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000415461 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000412f20 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004631dc : add byte ptr [rax], al ; add byte ptr [rbx + 0x7501046a], al ; retf 0xc748
0x000000000046a654 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x00000000004606a6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000045de4c : add byte ptr [rax], al ; add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x0000000000462fd6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004165ec : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000045d452 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d3d5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x0000000000403e13 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x000000000043d9ad : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049b2cd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x0000000000420718 : add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000440e31 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000440f65 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000440d9a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000004422f6 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0x40eda8
0x0000000000440da9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000004258c1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000458b3c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000422aad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042167d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041ebb7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x000000000041d0d5 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000004260d0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x00000000004260f6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000047c486 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000045b8da : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000040ed2a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049bf67 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000049bf8f : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000043e345 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043563d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004356ad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000448c9c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462bf5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x0000000000411dbd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000425ffd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000467315 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044d6d6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000000004434f4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x000000000046bca7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000042e812 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425f12 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440d73 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x000000000049e675 : add byte ptr [rax], al ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c9046 : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x0000000000442d0b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000004c2f42 : add byte ptr [rax], al ; add byte ptr fs:[rax], r8b ; js 0x4c2f90 ; clc ; call qword ptr [rax]
0x000000000045882d : add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x0000000000449b35 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000472562 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000049ae26 : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000048b878 : add byte ptr [rax], al ; add cl, ch ; retf 0xfff2
0x000000000045394e : add byte ptr [rax], al ; add cl, ch ; retf 0xfffa
0x000000000043ef4d : add byte ptr [rax], al ; add cl, ch ; retf 0xfffc
0x0000000000465620 : add byte ptr [rax], al ; add dh, al ; and al, 0x14 ; add al, ch ; ret
0x00000000004174c8 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000447103 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000043d101 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000485a60 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x000000000049adb5 : add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004788a7 : add byte ptr [rax], al ; add rax, -8 ; ret
0x00000000004667ce : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000425dc4 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000043e5be : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000043e907 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000049c1b8 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040125c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044f9f6 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x000000000040f575 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000445847 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000478131 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004c6b02 : add byte ptr [rax], al ; and al, 0x88 ; add byte ptr [rax], al ; or cl, dh ; cli ; jmp qword ptr [rdx]
0x00000000004c3fde : add byte ptr [rax], al ; and ch, bl ; clc ; call qword ptr [rax]
0x0000000000425ffe : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000004238c0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000465984 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004c8586 : add byte ptr [rax], al ; call 0x114c824b
0x00000000004c34e6 : add byte ptr [rax], al ; call 0x124c2d6b
0x00000000004c3be6 : add byte ptr [rax], al ; call 0x184c34a6
0x0000000000481108 : add byte ptr [rax], al ; call 0x41dc04
0x0000000000415d18 : add byte ptr [rax], al ; call 0x4427c4
0x0000000000415daf : add byte ptr [rax], al ; call 0x4427f4
0x0000000000403d3c : add byte ptr [rax], al ; call 4
0x000000000044c82b : add byte ptr [rax], al ; call r12
0x000000000047b994 : add byte ptr [rax], al ; call r14
0x000000000044c905 : add byte ptr [rax], al ; call r15
0x000000000040177a : add byte ptr [rax], al ; call rax
0x0000000000440d79 : add byte ptr [rax], al ; call rbx
0x00000000004b11fe : add byte ptr [rax], al ; call rdi
0x000000000040eadc : add byte ptr [rax], al ; call rdx
0x00000000004b03ae : add byte ptr [rax], al ; call rsp
0x00000000004c25b6 : add byte ptr [rax], al ; clc ; add al, bh ; call qword ptr [rcx]
0x00000000004c21b6 : add byte ptr [rax], al ; clc ; fcomi st(7) ; jmp qword ptr [rbx]
0x00000000004c3fda : add byte ptr [rax], al ; cld ; pop rsp ; add byte ptr [rax], al ; and ch, bl ; clc ; call qword ptr [rax]
0x00000000004c0cda : add byte ptr [rax], al ; cld ; sub dword ptr [rax], eax ; add byte ptr [rax - 0x41], dh ; cmc ; call qword ptr [rcx]
0x00000000004c891a : add byte ptr [rax], al ; cmp al, 0xa6 ; add byte ptr [rax], al ; adc byte ptr [rsi], dh ; std ; call rsp
0x00000000004c7fb6 : add byte ptr [rax], al ; cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x00000000004c5446 : add byte ptr [rax], al ; cmp byte ptr [rsi], dl ; cli ; jmp rdx
0x0000000000410bf7 : add byte ptr [rax], al ; cmp eax, -1 ; jne 0x410c08 ; pop rbx ; ret
0x00000000004649e5 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x4649f9 ; ret
0x00000000004c6f36 : add byte ptr [rax], al ; cqo ; std ; call rcx
0x00000000004c5726 : add byte ptr [rax], al ; cwde ; and edi, edx ; jmp rdi
0x00000000004bf0b6 : add byte ptr [rax], al ; enter -0xaf5, -1 ; retf 0
0x00000000004ad35a : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000004b13ae : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x00000000004ae506 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000004add06 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x00000000004ae106 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004b15ae : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000004b17ae : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000004b19ae : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000004b1bae : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000004b1dae : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004b1fae : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000004b21ae : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000004b23ae : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000004b25ae : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004c6746 : add byte ptr [rax], al ; fcomp st(0) ; cli ; jmp rsi
0x00000000004c8616 : add byte ptr [rax], al ; fdiv st(2) ; cld ; call qword ptr [rax]
0x00000000004bedb6 : add byte ptr [rax], al ; fdivr st(7) ; hlt ; call qword ptr [rax]
0x00000000004be7d2 : add byte ptr [rax], al ; hlt ; add al, 0 ; add byte ptr [rax], cl ; hlt ; call qword ptr [rax]
0x00000000004c1fd2 : add byte ptr [rax], al ; hlt ; cmp al, 0 ; add byte ptr [rax], ch ; retf
0x00000000004c60d2 : add byte ptr [rax], al ; hlt ; jge 0x4c60e0 ; add byte ptr [rax - 0x7f], bh ; cli ; jmp rdi
0x00000000004c3fc2 : add byte ptr [rax], al ; in al, 0x5c ; add byte ptr [rax], al ; sbb ch, bl ; clc ; call qword ptr [rbx]
0x00000000004c44c2 : add byte ptr [rax], al ; in al, 0x61 ; add byte ptr [rax], al ; js 0x4c4552 ; stc ; call rdi
0x00000000004c45c2 : add byte ptr [rax], al ; in al, 0x62 ; add byte ptr [rax], al ; test al, 0x81 ; stc ; call rdx
0x00000000004c4ac2 : add byte ptr [rax], al ; in al, 0x67 ; add byte ptr [rax], al ; sub dh, ch ; stc ; call qword ptr [rsi]
0x00000000004c68c2 : add byte ptr [rax], al ; in al, 0x85 ; add byte ptr [rax], al ; pop rax ; fdivp st(2) ; call rsi
0x00000000004bedca : add byte ptr [rax], al ; in al, dx ; or al, byte ptr [rax] ; add al, dl ; push rsp ; call qword ptr [rdx]
0x00000000004c7fca : add byte ptr [rax], al ; in al, dx ; pushfq ; add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x00000000004c67ca : add byte ptr [rax], al ; in al, dx ; test byte ptr [rax], al ; add byte ptr [rax - 0x26], dh ; cli ; jmp rdi
0x00000000004c554a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jb 0x4c5558 ; add byte ptr [rax + 0x1a], ah ; cli ; jmp qword ptr [rax]
0x000000000040f9bc : add byte ptr [rax], al ; je 0x40f9cf ; mov eax, edx ; pop rbx ; ret
0x0000000000420fb7 : add byte ptr [rax], al ; je 0x420fc4 ; ret
0x000000000047a748 : add byte ptr [rax], al ; je 0x47a757 ; mov eax, edx ; pop rbx ; ret
0x000000000049c14e : add byte ptr [rax], al ; je 0x49c10a ; add rsp, 0x18 ; ret
0x000000000049e676 : add byte ptr [rax], al ; je 0x49e685 ; ret
0x00000000004c6a5a : add byte ptr [rax], al ; jl 0x4c69ee ; add byte ptr [rax], al ; shl ch, 1 ; cli ; jmp qword ptr [rdx]
0x000000000046bced : add byte ptr [rax], al ; jmp 0x46bcbf
0x000000000047956f : add byte ptr [rax], al ; jmp 0x479541
0x0000000000479c4f : add byte ptr [rax], al ; jmp 0x479c21
0x000000000049abcc : add byte ptr [rax], al ; jmp 0x49ab9e
0x000000000043ff64 : add byte ptr [rax], al ; jmp rax
0x000000000043f315 : add byte ptr [rax], al ; jne 0x43f336 ; mov eax, 2 ; syscall
0x000000000043f375 : add byte ptr [rax], al ; jne 0x43f396 ; mov eax, 0 ; syscall
0x000000000043f3d5 : add byte ptr [rax], al ; jne 0x43f3f6 ; mov eax, 1 ; syscall
0x000000000046ad55 : add byte ptr [rax], al ; jne 0x46ad76 ; mov eax, 3 ; syscall
0x000000000046aee5 : add byte ptr [rax], al ; jne 0x46af06 ; mov eax, 0x14 ; syscall
0x00000000004be36e : add byte ptr [rax], al ; jo 0x4be3a0 ; hlt ; call rdi
0x00000000004bff3e : add byte ptr [rax], al ; jo 0x4bff9c ; cmc ; call qword ptr [rcx]
0x00000000004c0cde : add byte ptr [rax], al ; jo 0x4c0ca6 ; cmc ; call qword ptr [rcx]
0x00000000004c61ee : add byte ptr [rax], al ; jo 0x4c6184 ; cli ; call rsi
0x00000000004c67ce : add byte ptr [rax], al ; jo 0x4c67b1 ; cli ; jmp rdi
0x00000000004c16c6 : add byte ptr [rax], al ; js 0x4c1710 ; idiv bh ; ret
0x00000000004c2f46 : add byte ptr [rax], al ; js 0x4c2f8c ; clc ; call qword ptr [rax]
0x00000000004c44c6 : add byte ptr [rax], al ; js 0x4c454e ; stc ; call rdi
0x00000000004c60d6 : add byte ptr [rax], al ; js 0x4c6060 ; cli ; jmp rdi
0x00000000004c7026 : add byte ptr [rax], al ; js 0x4c7047 ; sti ; call qword ptr [rax]
0x00000000004c7022 : add byte ptr [rax], al ; lea r8d, dword ptr [rax] ; add byte ptr [rax + 0x18], bh ; sti ; call qword ptr [rax]
0x000000000043bece : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043bede : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043beee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043befe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043bf0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043be2d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043be4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043be5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043be6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043be7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043be8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043be9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043bdda : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043beae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043bebe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043be3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000047b7d9 : add byte ptr [rax], al ; lea rdi, qword ptr [rsp + 0x78] ; call r12
0x00000000004c1f8a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp al, 0 ; add byte ptr [rax], dh ; retf 0xfff7
0x000000000043adae : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000004395fe : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000043b89e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043b27e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004c2736 : add byte ptr [rax], al ; mov byte ptr [rdx], al ; clc ; call rsp
0x00000000004c85b6 : add byte ptr [rax], al ; mov cl, bl ; cld ; call qword ptr [rax]
0x0000000000464abb : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043b28e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004009bf : add byte ptr [rax], al ; mov eax, 0 ; pop rbp ; ret
0x000000000042114e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000043f21e : add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x000000000046ac1e : add byte ptr [rax], al ; mov eax, 0x3f ; syscall
0x000000000044275e : add byte ptr [rax], al ; mov eax, 0x63 ; syscall
0x000000000046ac5e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000046ac4e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000046ac6e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x0000000000417c61 : add byte ptr [rax], al ; mov eax, 0x6ca800 ; ret
0x000000000046d01d : add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x000000000043fe9e : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x0000000000442800 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000043ec05 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x0000000000463fd1 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000410201 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000474a86 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044edc3 : add byte ptr [rax], al ; mov eax, 3 ; syscall
0x000000000049ac0e : add byte ptr [rax], al ; mov eax, 5 ; ret
0x000000000044271e : add byte ptr [rax], al ; mov eax, 8 ; syscall
0x00000000004164ae : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000049e05e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e079 ; ret
0x000000000049e27e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e299 ; ret
0x000000000048855e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x244cfa] ; ret
0x000000000040f7d1 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004736c6 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000046ae83 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000040fa05 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000444af3 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000046ae7e : add byte ptr [rax], al ; mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000043b2be : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000481103 : add byte ptr [rax], al ; mov edi, 0x190 ; call 0x41dc09
0x00000000004655cb : add byte ptr [rax], al ; mov edi, 0x4b279c ; call 0x4018d9
0x0000000000402d36 : add byte ptr [rax], al ; mov edi, 0x6cc720 ; call rbx
0x000000000049bf68 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000049bf90 : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000434e3e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043555e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004428b6 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000440d74 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000046a655 : add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x00000000004c1c9a : add byte ptr [rax], al ; mov esp, 0xa0000039 ; ret 0xfff7
0x000000000047af08 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000455085 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000487e72 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000487ef6 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000470e14 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042ca4e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000049c2ce : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000047a4c0 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000044f73f : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000041675e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000044f80e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x00000000004667ee : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000004667fe : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000046680e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000046681e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000046682e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000046683e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000046684e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000414c99 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410c10 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000415195 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000047834e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000471c5e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x0000000000464f5e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004167de : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c29e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c2de : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c33e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c32e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c2ee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x00000000004457de : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x287ae1] ; ret
0x00000000004167be : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2b38f9] ; ret
0x00000000004748ef : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c447 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000040fc51 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041df92 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000041bfab : add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000004167ee : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041e63f : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047a889 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x000000000044ed15 : add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x0000000000464f25 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464ef7
0x0000000000440f66 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440e32 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000004422f7 : add byte ptr [rax], al ; mov rdi, r14 ; call 0x40eda7
0x0000000000440daa : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440d9b : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000400464 : add byte ptr [rax], al ; mov rdi, r8 ; mov eax, ebp ; syscall
0x00000000004411f0 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000041bdcc : add byte ptr [rax], al ; mov rdi, rbx ; call 0x418027
0x0000000000462926 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000046223b : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004004a0 : add byte ptr [rax], al ; mov rdi, rbx ; mov eax, r10d ; syscall
0x000000000043e9de : add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x000000000043539e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000049c8ae : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004005d4 : add byte ptr [rax], al ; mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e7 ; ret
0x0000000000474818 : add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004be36a : add byte ptr [rax], al ; mov word ptr [rax], es ; add byte ptr [rax], al ; jo 0x4be3a4 ; hlt ; call rdi
0x00000000004bfd6a : add byte ptr [rax], al ; mov word ptr [rdx], ds ; add byte ptr [rax], al ; adc byte ptr [rdi - 0xb], cl ; jmp qword ptr [rcx]
0x000000000043fe56 : add byte ptr [rax], al ; movsxd r10, r10d ; syscall
0x000000000049a10f : add byte ptr [rax], al ; movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x0000000000412357 : add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x000000000040dd01 : add byte ptr [rax], al ; movsxd rdi, ecx ; syscall
0x000000000044f904 : add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x0000000000411dbe : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000434fce : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004356ae : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043563e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004c8b3e : add byte ptr [rax], al ; nop ; cmp bh, ch ; call rcx
0x000000000046ad2c : add byte ptr [rax], al ; nop ; mov eax, 0x15 ; syscall
0x000000000043fedc : add byte ptr [rax], al ; nop ; mov eax, 0x1c ; syscall
0x000000000046ac3c : add byte ptr [rax], al ; nop ; mov eax, 0x66 ; syscall
0x000000000043febc : add byte ptr [rax], al ; nop ; mov eax, 0xa ; syscall
0x00000000004c752e : add byte ptr [rax], al ; nop ; nop ; jmp qword ptr [rsi]
0x0000000000442d0c : add byte ptr [rax], al ; nop ; ret
0x00000000004c29fe : add byte ptr [rax], al ; nop ; sbb bh, al ; call qword ptr [rax]
0x00000000004c61ea : add byte ptr [rax], al ; or al, 0x7f ; add byte ptr [rax], al ; jo 0x4c6188 ; cli ; call rsi
0x00000000004c90ea : add byte ptr [rax], al ; or al, 0xae ; add byte ptr [rax], al ; push rax ; push rax ; std ; jmp qword ptr [rbx]
0x00000000004c50a6 : add byte ptr [rax], al ; or byte ptr [rdx], al ; cli ; call rsi
0x00000000004be7d6 : add byte ptr [rax], al ; or byte ptr [rsi - 0xc], ah ; call qword ptr [rax]
0x0000000000476a44 : add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004c6b06 : add byte ptr [rax], al ; or cl, dh ; cli ; jmp qword ptr [rdx]
0x00000000004bf716 : add byte ptr [rax], al ; pop rax ; cmc ; call qword ptr [rax]
0x00000000004c68c6 : add byte ptr [rax], al ; pop rax ; fdivp st(2) ; call rsi
0x00000000004c3966 : add byte ptr [rax], al ; pop rax ; pushfq ; clc ; jmp rbx
0x000000000045c50d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045c5dd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004008ee : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043e3ea : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000462fd7 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a5dc : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000044294d : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000411574 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400606 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004ce : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411b5b : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c3d22 : add byte ptr [rax], al ; pop rdx ; add byte ptr [rax], al ; test al, 0xba ; clc ; jmp qword ptr [rsi]
0x00000000004bff3a : add byte ptr [rax], al ; pop rsp ; sbb al, 0 ; add byte ptr [rax + 0x55], dh ; cmc ; call qword ptr [rcx]
0x00000000004c802a : add byte ptr [rax], al ; popfq ; add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x00000000004c90ee : add byte ptr [rax], al ; push rax ; push rax ; std ; jmp qword ptr [rbx]
0x00000000004c2732 : add byte ptr [rax], al ; push rsp ; add byte ptr [rax], r8b ; mov byte ptr [rdx], al ; clc ; call rsp
0x00000000004c6f32 : add byte ptr [rax], al ; push rsp ; mov word ptr [rax], es ; add byte ptr [rax - 0x67], cl ; std ; call rcx
0x00000000004c0f32 : add byte ptr [rax], al ; push rsp ; sub al, 0 ; add byte ptr [rax], ch ; sal ch, cl ; call rdx
0x00000000004c727a : add byte ptr [rax], al ; pushfq ; pop qword ptr [rax] ; add al, dl ; sub bh, bl ; call rsp
0x0000000000401263 : add byte ptr [rax], al ; ret
0x00000000004a7586 : add byte ptr [rax], al ; ret 0
0x00000000004ae4fe : add byte ptr [rax], al ; ret 0x10
0x00000000004b01ce : add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0966 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004af1d6 : add byte ptr [rax], al ; ret 0x24
0x00000000004af6c6 : add byte ptr [rax], al ; ret 0x33
0x00000000004b386e : add byte ptr [rax], al ; ret 0x461a
0x00000000004adcfe : add byte ptr [rax], al ; ret 0xa
0x00000000004ae0fe : add byte ptr [rax], al ; ret 0xd
0x00000000004b15a2 : add byte ptr [rax], al ; ret 1
0x00000000004b17a2 : add byte ptr [rax], al ; ret 2
0x00000000004b19a2 : add byte ptr [rax], al ; ret 3
0x00000000004b1ba2 : add byte ptr [rax], al ; ret 4
0x00000000004b1da2 : add byte ptr [rax], al ; ret 5
0x00000000004ad8a6 : add byte ptr [rax], al ; ret 6
0x00000000004b21a2 : add byte ptr [rax], al ; ret 7
0x00000000004b23a2 : add byte ptr [rax], al ; ret 8
0x00000000004b25a2 : add byte ptr [rax], al ; ret 9
0x00000000004a4576 : add byte ptr [rax], al ; retf
0x00000000004a75a6 : add byte ptr [rax], al ; retf 0
0x00000000004ae65e : add byte ptr [rax], al ; retf 0x11
0x00000000004b0206 : add byte ptr [rax], al ; retf 0x1d4
0x00000000004b09a6 : add byte ptr [rax], al ; retf 0x1d5
0x00000000004af216 : add byte ptr [rax], al ; retf 0x24
0x00000000004af706 : add byte ptr [rax], al ; retf 0x33
0x00000000004bdb67 : add byte ptr [rax], al ; retf 0x3b9a
0x00000000004a4656 : add byte ptr [rax], al ; retf 0x43ec
0x00000000004b31de : add byte ptr [rax], al ; retf 0x456e
0x0000000000442b99 : add byte ptr [rax], al ; retf 0x4b53
0x00000000004bc39e : add byte ptr [rax], al ; retf 0x4bb9
0x00000000004ade5e : add byte ptr [rax], al ; retf 0xb
0x00000000004ae25e : add byte ptr [rax], al ; retf 0xe
0x00000000004ae87e : add byte ptr [rax], al ; retf 1
0x00000000004b17b2 : add byte ptr [rax], al ; retf 2
0x00000000004b19b2 : add byte ptr [rax], al ; retf 3
0x00000000004ad706 : add byte ptr [rax], al ; retf 4
0x00000000004b1db2 : add byte ptr [rax], al ; retf 5
0x00000000004b1fb2 : add byte ptr [rax], al ; retf 6
0x00000000004b21b2 : add byte ptr [rax], al ; retf 7
0x00000000004b23b2 : add byte ptr [rax], al ; retf 8
0x00000000004b25b2 : add byte ptr [rax], al ; retf 9
0x00000000004b1b9e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004adfa6 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004bedce : add byte ptr [rax], al ; sar bh, 1 ; hlt ; call qword ptr [rdx]
0x00000000004c29fa : add byte ptr [rax], al ; sbb al, 0x47 ; add byte ptr [rax], al ; nop ; sbb bh, al ; call qword ptr [rax]
0x00000000004c7ffa : add byte ptr [rax], al ; sbb al, 0x9d ; add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x00000000004c3fc6 : add byte ptr [rax], al ; sbb ch, bl ; clc ; call qword ptr [rbx]
0x00000000004c3ff6 : add byte ptr [rax], al ; sbb ch, bl ; clc ; call qword ptr [rdx]
0x00000000004c6a5e : add byte ptr [rax], al ; shl ch, 1 ; cli ; jmp qword ptr [rdx]
0x00000000004c727e : add byte ptr [rax], al ; shr byte ptr [rdx], 1 ; sti ; call rsp
0x00000000004c2e0a : add byte ptr [rax], al ; sub al, 0x4b ; add byte ptr [rax], al ; adc al, dl ; std ; jmp qword ptr [rdx]
0x00000000004c7d0a : add byte ptr [rax], al ; sub al, 0x9a ; add byte ptr [rax], al ; xor byte ptr [rcx], al ; cld ; jmp qword ptr [rax]
0x00000000004c2616 : add byte ptr [rax], al ; sub byte ptr [rcx], al ; clc ; call qword ptr [rdi]
0x00000000004c4ac6 : add byte ptr [rax], al ; sub dh, ch ; stc ; call qword ptr [rsi]
0x00000000004c0f36 : add byte ptr [rax], al ; sub dl, dl ; cmc ; call rdx
0x000000000042f25c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000415be6 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000046addf : add byte ptr [rax], al ; sub rsp, 0x30 ; mov rdx, rsp ; syscall
0x00000000004003d8 : add byte ptr [rax], al ; syscall
0x00000000004be5f6 : add byte ptr [rax], al ; test al, 0x3a ; hlt ; call qword ptr [rdx]
0x00000000004c0646 : add byte ptr [rax], al ; test al, 0x69 ; cmc ; call qword ptr [rdx]
0x00000000004c45c6 : add byte ptr [rax], al ; test al, 0x81 ; stc ; call rdx
0x00000000004c3d26 : add byte ptr [rax], al ; test al, 0xba ; clc ; jmp qword ptr [rsi]
0x00000000004c6462 : add byte ptr [rax], al ; test byte ptr [rcx - 0x4fe80000], al ; cli ; call rdx
0x00000000004c3962 : add byte ptr [rax], al ; test byte ptr [rsi], dl ; add byte ptr [rax - 0x64], bl ; clc ; jmp rbx
0x00000000004c6742 : add byte ptr [rax], al ; test byte ptr fs:[rax], al ; add al, bl ; fdivr st(2) ; jmp rsi
0x00000000004426b9 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x00000000004009a3 : add byte ptr [rax], al ; test rax, rax ; je 0x40099f ; call rax
0x00000000004c752a : add byte ptr [rax], al ; xchg rax, rdx ; add byte ptr [rax], al ; nop ; nop ; jmp qword ptr [rsi]
0x00000000004bf712 : add byte ptr [rax], al ; xor al, 0x14 ; add byte ptr [rax], al ; pop rax ; cmc ; call qword ptr [rax]
0x00000000004c2612 : add byte ptr [rax], al ; xor al, 0x43 ; add byte ptr [rax], al ; sub byte ptr [rcx], al ; clc ; call qword ptr [rdi]
0x00000000004c8012 : add byte ptr [rax], al ; xor al, 0x9d ; add byte ptr [rax], al ; cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x00000000004c8612 : add byte ptr [rax], al ; xor al, 0xa3 ; add byte ptr [rax], al ; fdiv st(2) ; cld ; call qword ptr [rax]
0x00000000004c6cae : add byte ptr [rax], al ; xor byte ptr [rbx], cl ; sti ; jmp rsi
0x00000000004c7d0e : add byte ptr [rax], al ; xor byte ptr [rcx], al ; cld ; jmp qword ptr [rax]
0x00000000004c7fce : add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x0000000000451cd7 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000040ed2b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a5f5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041ca56 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411b2e : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004133be : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x4133d9 ; ret
0x0000000000400c4e : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x000000000043eb3a : add byte ptr [rax], al ; xor esi, esi ; mov eax, 2 ; syscall
0x0000000000403937 : add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; syscall
0x0000000000440ce6 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000440d0b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440d2f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440d4f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000425fad : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004be797 : add byte ptr [rax], bh ; add edi, esi ; call rdi
0x00000000004c7fb7 : add byte ptr [rax], bh ; or esp, edi ; call qword ptr [rax]
0x00000000004009c0 : add byte ptr [rax], bh ; pop rbp ; ret
0x00000000004c38d7 : add byte ptr [rax], bh ; pushfq ; clc ; call qword ptr [rdx]
0x00000000004c85e7 : add byte ptr [rax], bh ; xchg eax, ebx ; cld ; call qword ptr [rax]
0x00000000004c6467 : add byte ptr [rax], bl ; mov al, 0xfa ; call rdx
0x00000000004c2617 : add byte ptr [rax], ch ; add eax, edi ; call qword ptr [rdi]
0x00000000004c4ac7 : add byte ptr [rax], ch ; out dx, al ; stc ; call qword ptr [rsi]
0x00000000004c1fd7 : add byte ptr [rax], ch ; retf
0x00000000004c0f37 : add byte ptr [rax], ch ; sal ch, cl ; call rdx
0x00000000004c50a7 : add byte ptr [rax], cl ; add bh, dl ; call rsi
0x000000000044eebd : add byte ptr [rax], cl ; add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, r15d ; syscall
0x00000000004be7d7 : add byte ptr [rax], cl ; hlt ; call qword ptr [rax]
0x00000000004c6b07 : add byte ptr [rax], cl ; int1 ; cli ; jmp qword ptr [rdx]
0x0000000000476a45 : add byte ptr [rax], cl ; je 0x476ab2 ; pop rbx ; ret
0x000000000049a9ee : add byte ptr [rax], cl ; mov byte ptr [rip + 0x232169], 8 ; ret
0x000000000049a9f5 : add byte ptr [rax], cl ; ret
0x00000000004c7d0f : add byte ptr [rax], dh ; add esp, edi ; jmp qword ptr [rax]
0x00000000004c6caf : add byte ptr [rax], dh ; or edi, ebx ; jmp rsi
0x00000000004c7fcf : add byte ptr [rax], dh ; or esp, edi ; call qword ptr [rdx]
0x00000000004a3367 : add byte ptr [rax], dh ; retf 0x42
0x00000000004c1abf : add byte ptr [rax], dh ; retf 0xfff6
0x00000000004c1f8f : add byte ptr [rax], dh ; retf 0xfff7
0x0000000000474816 : add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004bfd6f : add byte ptr [rax], dl ; cmc ; jmp qword ptr [rcx]
0x00000000004a3357 : add byte ptr [rax], dl ; retf 0x42
0x00000000004c2e0f : add byte ptr [rax], dl ; sar ch, 1 ; jmp qword ptr [rdx]
0x00000000004c891f : add byte ptr [rax], dl ; std ; call rsp
0x0000000000470efd : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047831d : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000047e17d : add byte ptr [rax], r8b ; call rbx
0x00000000004c2f45 : add byte ptr [rax], r8b ; js 0x4c2f8d ; clc ; call qword ptr [rax]
0x00000000004c2735 : add byte ptr [rax], r8b ; mov byte ptr [rdx], al ; clc ; call rsp
0x000000000046ac1d : add byte ptr [rax], r8b ; mov eax, 0x3f ; syscall
0x0000000000474a85 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000043b2ad : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000042ca4d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000043b2ed : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000047ac85 : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000412bdd : add byte ptr [rax], r8b ; ret
0x000000000049a045 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000041339d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000043f376 : add byte ptr [rbp + 0x14], dh ; mov eax, 0 ; syscall
0x000000000046aee6 : add byte ptr [rbp + 0x14], dh ; mov eax, 0x14 ; syscall
0x000000000043f3d6 : add byte ptr [rbp + 0x14], dh ; mov eax, 1 ; syscall
0x000000000043f316 : add byte ptr [rbp + 0x14], dh ; mov eax, 2 ; syscall
0x000000000046ad56 : add byte ptr [rbp + 0x14], dh ; mov eax, 3 ; syscall
0x0000000000467527 : add byte ptr [rbp + 0x39440750], cl ; ret 0x8d0f
0x0000000000468387 : add byte ptr [rbp + 0x39440753], cl ; retf 0x8d0f
0x000000000041b251 : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x000000000041b3ce : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047613b : add byte ptr [rbp + 0x39], cl ; retf
0x000000000047873c : add byte ptr [rbp + 0x39], dh ; xor eax, eax ; add rsp, 0x68 ; ret
0x000000000045c50e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000045c5de : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000040070a : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000474857 : add byte ptr [rbp + 0x6348ff59], cl ; ret
0x00000000004785c2 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x0000000000478f5f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000478e4f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000478664 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000004c802b : add byte ptr [rbp + rbx*4], cl ; add byte ptr [rax], dh ; or esp, edi ; call qword ptr [rdx]
0x00000000004ae0f7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x0000000000432c9e : add byte ptr [rbp + rcx*4 + 0x1d], cl ; retf 0x70e
0x00000000004650ae : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000047821a : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x000000000049e53e : add byte ptr [rbp + rcx*4 + 5], cl ; retf 0x1fc
0x00000000004c7023 : add byte ptr [rbp + rcx*4], al ; add byte ptr [rax + 0x18], bh ; sti ; call qword ptr [rax]
0x000000000049ebe4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000004426ba : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004ae3a3 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000041da5f : add byte ptr [rbp - 0x42], dh ; ret
0x00000000004a33ac : add byte ptr [rbp - 0x42c00008], bl ; clc ; call qword ptr [rax]
0x0000000000475e2a : add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x0000000000452919 : add byte ptr [rbp - 0x75], cl ; jl 0x45294a ; and byte ptr [rax + 1], cl ; ret
0x000000000045cb99 : add byte ptr [rbp - 0x75], cl ; jl 0x45cbca ; and byte ptr [rax + 1], cl ; ret
0x000000000040dd17 : add byte ptr [rbp - 0x76208037], al ; retf 0xdaf7
0x000000000046217f : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00000000004480a4 : add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x0000000000423acd : add byte ptr [rbp - 0x77], cl ; retf
0x0000000000467425 : add byte ptr [rbp - 0x77], cl ; retf 0x694d
0x000000000043e09c : add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x00000000004805ef : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00000000004bdbf0 : add byte ptr [rbp - 3], bh ; jmp rax
0x0000000000429269 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000474a78 : add byte ptr [rbx + 0x2566f00d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000043e3eb : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000004703c0 : add byte ptr [rbx + 0x25ce3115], cl ; add bh, dh ; ret 0x804
0x0000000000410bf8 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x0000000000416857 : add byte ptr [rbx + 0x2b5d4505], al ; add byte ptr [rcx], al ; ret
0x000000000047bb21 : add byte ptr [rbx + 0x3950245c], cl ; ret
0x000000000044294e : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000045a5dd : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000043b2bf : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000043adef : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x0000000000420217 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x0000000000434e3f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000470ef6 : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000041e747 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x00000000004125f1 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411575 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400607 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004004cf : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004631de : add byte ptr [rbx + 0x7501046a], al ; retf 0xc748
0x000000000049e05f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x0000000000418a45 : add byte ptr [rbx + 0x7cbe02e7], al ; retf
0x0000000000483b65 : add byte ptr [rbx + 0xa880], cl ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044f63a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004c2613 : add byte ptr [rbx + rax*2], dh ; add byte ptr [rax], al ; sub byte ptr [rcx], al ; clc ; call qword ptr [rdi]
0x00000000004be5f3 : add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; test al, 0x3a ; hlt ; call qword ptr [rdx]
0x00000000004c2e0b : add byte ptr [rbx + rcx*2], ch ; add byte ptr [rax], al ; adc al, dl ; std ; jmp qword ptr [rdx]
0x000000000046a656 : add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x000000000047055b : add byte ptr [rbx + rcx*4 + 0x40], cl ; xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x0000000000475282 : add byte ptr [rbx + rcx*4 + 0x45], al ; test byte ptr [rax - 0x77], cl ; ret
0x000000000047a427 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000047ff37 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000042ee6f : add byte ptr [rbx + rcx*4 + 5], cl ; pop rcx ; ret 0x29
0x00000000004606a8 : add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000047c847 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0x47c861 ; ret
0x0000000000467c1a : add byte ptr [rbx - 0x38b7cf18], al ; ret
0x0000000000410b8f : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e466 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000043e45f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000043e458 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000043e451 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000043e44a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000043e443 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x000000000045de4e : add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x000000000043e1b5 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000043e1a0 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x0000000000474ae1 : add byte ptr [rbx - 0x57fef1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x000000000047534e : add byte ptr [rbx - 0x57ffb1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x0000000000419e57 : add byte ptr [rbx - 0x76b3fe1e], al ; retf
0x0000000000462fd8 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004103f4 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000043d2a6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004068d3 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000462c04 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x0000000000407470 : add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x000000000040b3a4 : add byte ptr [rbx - 0x7bf0fe06], al ; retf 0xf
0x000000000040a548 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000442f60 : add byte ptr [rbx - 0x7cbefe39], al ; ret 0x4901
0x00000000004429af : add byte ptr [rbx - 0xc8a0008], al ; xor eax, eax ; leave ; ret
0x00000000004165ee : add byte ptr [rbx - 0xd], bl ; ret
0x00000000004c3ff3 : add byte ptr [rbx*2 - 0x22e80000], dl ; clc ; call qword ptr [rdx]
0x00000000004c7ffb : add byte ptr [rbx*4 + 0x9300000], bl ; cld ; call qword ptr [rdx]
0x00000000004c7fe3 : add byte ptr [rbx*4 + 0x9380000], al ; cld ; call qword ptr [rax]
0x00000000004c8013 : add byte ptr [rbx*4 + 0x9380000], dh ; cld ; call qword ptr [rax]
0x0000000000470e47 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004c8613 : add byte ptr [rbx], dh ; add byte ptr [rax], al ; fdiv st(2) ; cld ; call qword ptr [rax]
0x0000000000494225 : add byte ptr [rcx + 0x29], cl ; retf
0x000000000044efbf : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000046587f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000041b18f : add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x0000000000489a0d : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000426926 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000047e3ce : add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x000000000040f7d2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000004752bf : add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x00000000004154b6 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000470ef3 : add byte ptr [rcx + 0x5d5b006c], dh ; jmp rax
0x0000000000464abc : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042fc8e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000403a33 : add byte ptr [rcx + 0x63], cl ; cld ; mov eax, 3 ; syscall
0x000000000042e50c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043b138 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000049a110 : add byte ptr [rcx + 0x63], cl ; or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x000000000046ae7f : add byte ptr [rcx + 0xc], bh ; mov eax, ecx ; syscall
0x0000000000440585 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000045d454 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d3d7 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000041ae87 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000046f56e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x0000000000403e15 : add byte ptr [rcx + 0xf], cl ; ret
0x000000000041704b : add byte ptr [rcx + 0xf], cl ; retf 0xff31
0x000000000043d9af : add byte ptr [rcx + 1], cl ; ret
0x000000000049b2cf : add byte ptr [rcx + 1], cl ; ret 0xde89
0x000000000042071a : add byte ptr [rcx + 9], al ; ret
0x0000000000412542 : add byte ptr [rcx + r9*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041d2cb : add byte ptr [rcx + r9*4 + 0xc], cl ; and al, 0xe8 ; retf 0xffa1
0x00000000004c6463 : add byte ptr [rcx + rax*4 - 0x4fe80000], al ; cli ; call rdx
0x00000000004c3c93 : add byte ptr [rcx + rbx*2 - 0x46080000], dh ; clc ; call qword ptr [rcx]
0x00000000004c3c7b : add byte ptr [rcx + rbx*2 - 0x46100000], bl ; clc ; call qword ptr [rdi]
0x00000000004c3c23 : add byte ptr [rcx + rbx*2], al ; add al, cl ; leave ; std ; call qword ptr [rbx]
0x00000000004c3be3 : add byte ptr [rcx + rbx*2], al ; add byte ptr [rax], al ; call 0x184c34a9
0x0000000000469db5 : add byte ptr [rcx + rcx*4 + 0x2d], cl ; ret
0x000000000042ca4f : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x0000000000412543 : add byte ptr [rcx + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041d2cc : add byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; retf 0xffa1
0x0000000000440e33 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x000000000044eebf : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, r15d ; syscall
0x000000000047e2cf : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000440f67 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000445472 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000041abb8 : add byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, 3 ; syscall
0x0000000000400465 : add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, ebp ; syscall
0x000000000049c8af : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x0000000000440d9c : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000004422f8 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x40eda6
0x00000000004453cc : add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x0000000000440dab : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000004c1c9b : add byte ptr [rcx + rdi - 0x3d600000], bh ; idiv edi ; retf 2
0x00000000004bc397 : add byte ptr [rcx + rdi*4 + 0x4b], dh ; add byte ptr [rax], al ; retf 0x4bb9
0x000000000048ee6b : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000048bfb3 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x0000000000488db3 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x000000000045b154 : add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x000000000041cfbf : add byte ptr [rcx - 0x43], al ; ret
0x0000000000405654 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000449e13 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000449e30 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449e4d : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000419df0 : add byte ptr [rcx - 0x73], cl ; and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000482f80 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00000000004632af : add byte ptr [rcx - 0x74e3dbac], cl ; adc dword ptr [rax - 0x77], ecx ; retf
0x000000000047fc6b : add byte ptr [rcx - 0x75], al ; adc bh, byte ptr [rcx] ; ret 0x850f
0x000000000044089f : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040ea3f : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000448d9d : add byte ptr [rcx - 0x76ec7738], cl ; retf 0xe083
0x000000000044aa37 : add byte ptr [rcx - 0x77], al ; add al, 0x24 ; mov r12, rsi ; jmp 0x44aa15
0x0000000000442817 : add byte ptr [rcx - 0x77], al ; ret
0x000000000044f1da : add byte ptr [rcx - 0x77], al ; retf 0x894c
0x00000000004258c3 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000004438ba : add byte ptr [rcx - 0x77], cl ; retf
0x00000000004438e7 : add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x0000000000411463 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000458b3e : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000444157 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000445ec7 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000046cacf : add byte ptr [rcx - 0x7d], cl ; ret 0x4b30
0x0000000000422aaf : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000041fd60 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000042167f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041ebb9 : add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x000000000041823f : add byte ptr [rcx - 0xa], al ; ret
0x000000000041a149 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a153 : add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000047cd21 : add byte ptr [rcx - 0xb37b], cl ; inc dword ptr [rcx - 0x77] ; ret
0x000000000047c84a : add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000004a3c64 : add byte ptr [rcx - 7], bh ; jmp qword ptr [rax]
0x00000000004260d2 : add byte ptr [rcx - 9], cl ; ret 1
0x00000000004260f8 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000004434f2 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x0000000000474a7e : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000400969 : add byte ptr [rcx], al ; ret
0x00000000004442ac : add byte ptr [rcx], bh ; ret
0x0000000000400c1c : add byte ptr [rcx], bh ; ret 0x860f
0x0000000000468239 : add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x000000000049c920 : add byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000045b8dc : add byte ptr [rcx], ch ; ret 0xd089
0x000000000041384a : add byte ptr [rcx], cl ; ret 0x8948
0x000000000043eb3b : add byte ptr [rcx], dh ; idiv byte ptr [rax + 2] ; syscall
0x000000000047b447 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ed2c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000046b21f : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46b21a ; ret
0x000000000046ae9a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46aed1 ; ret
0x0000000000488ad7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000004133bf : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4133d8 ; ret
0x000000000047a738 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004880e2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000447cfe : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446ef7 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000044737e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000004442cb : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000046bce7 : add byte ptr [rcx], dh ; sar byte ptr [rdx + 1], 0xeb ; retf
0x0000000000481104 : add byte ptr [rdi + 0x190], bh ; call 0x41dc08
0x000000000041addb : add byte ptr [rdi + 0x4a223c], bh ; call 0x417018
0x000000000041adda : add byte ptr [rdi + 0x4a223c], dil ; call 0x417019
0x000000000041adc2 : add byte ptr [rdi + 0x4a226b], bh ; call 0x417018
0x000000000041adc1 : add byte ptr [rdi + 0x4a226b], dil ; call 0x417019
0x00000000004423a2 : add byte ptr [rdi + 0x4a4b5d], bh ; mov eax, ebx ; syscall
0x00000000004423d1 : add byte ptr [rdi + 0x4a4b68], bh ; mov eax, ebx ; syscall
0x000000000044f4c4 : add byte ptr [rdi + 0x4a6aa0], bh ; mov eax, ecx ; syscall
0x00000000004655cc : add byte ptr [rdi + 0x4b279c], bh ; call 0x4018d8
0x0000000000432c45 : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000445880 : add byte ptr [rdi + 0x6cc6d8], bh ; call rax
0x000000000044587f : add byte ptr [rdi + 0x6cc6d8], r15b ; call rax
0x0000000000402d37 : add byte ptr [rdi + 0x6cc720], bh ; call rbx
0x000000000047aa71 : add byte ptr [rdi + 0x6cc9c0], bh ; call rax
0x000000000047ab9c : add byte ptr [rdi + 0x6cc9c4], bh ; call rdx
0x000000000049bf69 : add byte ptr [rdi + 1], bh ; call r14
0x000000000049bf91 : add byte ptr [rdi + 1], bh ; call rax
0x00000000004c2a43 : add byte ptr [rdi + rax*2], ah ; add byte ptr [rax + 0x1f], ch ; clc ; call qword ptr [rax]
0x00000000004c29fb : add byte ptr [rdi + rax*2], bl ; add byte ptr [rax], al ; nop ; sbb bh, al ; call qword ptr [rax]
0x00000000004c6a5b : add byte ptr [rdi + rax*4], bh ; add al, dl ; in eax, 0xfa ; jmp qword ptr [rdx]
0x000000000045b834 : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x000000000045a820 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000004c727b : add byte ptr [rdi + rcx*4 + 0x2ad00000], bl ; sti ; call rsp
0x00000000004c61eb : add byte ptr [rdi + rdi*2], cl ; add byte ptr [rax], al ; jo 0x4c6187 ; cli ; call rsi
0x00000000004438b7 : add byte ptr [rdi - 0x76b6ff94], bl ; retf
0x00000000004438e4 : add byte ptr [rdi - 0x76b6ff94], bl ; retf 0x34c
0x0000000000443971 : add byte ptr [rdi - 0x76b7ff94], bl ; retf 0x348
0x00000000004a3c0c : add byte ptr [rdi - 7], dh ; call qword ptr [rax]
0x00000000004345da : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000043e347 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043563f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004356af : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000448c9e : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462bf7 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000044810a : add byte ptr [rdi], cl ; mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf 0x8440
0x000000000042291f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000466970 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000411dbf : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042e51f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042617f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042cd7f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042601f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042600f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000425fff : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000467317 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044d6d8 : add byte ptr [rdi], cl ; ret 0x4389
0x00000000004033b3 : add byte ptr [rdi], cl ; ret 0x8d49
0x000000000044954a : add byte ptr [rdi], cl ; test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000420714 : add byte ptr [rdi], cl ; test cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000460c79 : add byte ptr [rdi], cl ; test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x0000000000451e19 : add byte ptr [rdi], cl ; test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047db18 : add byte ptr [rdi], cl ; test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000044a02c : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x76fffff9], ebp ; retf 0x8b49
0x000000000042002a : add byte ptr [rdi], cl ; test edi, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000040eea9 : add byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045e07b : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000467dc9 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000004434f6 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x0000000000467d3d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046bcaa : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000476135 : add byte ptr [rdi], cl ; xchg edx, eax ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000043adaf : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x00000000004395ff : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x0000000000444aef : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x000000000049c106 : add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004bfd6b : add byte ptr [rdx + rbx + 0x4f100000], cl ; cmc ; jmp qword ptr [rcx]
0x00000000004c7d0b : add byte ptr [rdx + rbx*4], ch ; add byte ptr [rax], al ; xor byte ptr [rcx], al ; cld ; jmp qword ptr [rax]
0x00000000004adcf7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004bf573 : add byte ptr [rdx + rdx + 0x25f80000], dl ; cmc ; jmp qword ptr [rsi]
0x00000000004c34e3 : add byte ptr [rdx + rdx*2], al ; add byte ptr [rax], al ; call 0x124c2d6e
0x00000000004c7573 : add byte ptr [rdx + rdx*4 + 0x38b80000], dl ; sti ; jmp qword ptr [rdx]
0x00000000004b31d7 : add byte ptr [rdx + rsi*2 + 0x45], dl ; add byte ptr [rax], al ; retf 0x456e
0x00000000004c554b : add byte ptr [rdx + rsi*2], ch ; add byte ptr [rax + 0x1a], ah ; cli ; jmp qword ptr [rax]
0x00000000004c8583 : add byte ptr [rdx - 0x46180000], ah ; cld ; call qword ptr [rax]
0x00000000004a32c8 : add byte ptr [rdx - 8], cl ; call qword ptr [rax]
0x0000000000488e65 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000044f73d : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000400462 : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov rdi, r8 ; mov eax, ebp ; syscall
0x00000000004a38cc : add byte ptr [rip + 0x1c90fff9], bl ; stc ; jmp qword ptr [rax]
0x00000000004428b7 : add byte ptr [rsi + 0x80], bh ; syscall
0x000000000042e814 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000457f13 : add byte ptr [rsi + 0xf], ah ; ror byte ptr cs:[rdi], 0x8a ; ret 8
0x0000000000425f14 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440d75 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000440f62 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x0000000000440e2e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000440da6 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00000000004411e0 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000440f53 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x0000000000440e1f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000440d97 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x000000000049e677 : add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c90eb : add byte ptr [rsi + rbp*4], cl ; add byte ptr [rax], al ; push rax ; push rax ; std ; jmp qword ptr [rbx]
0x00000000004c9048 : add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x00000000004c3963 : add byte ptr [rsi + rdx*2 - 0x63a80000], al ; clc ; jmp rbx
0x0000000000467421 : add byte ptr [rsi - 0x3a], bh ; add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x00000000004a33c4 : add byte ptr [rsi - 0x410f0008], bh ; clc ; jmp rax
0x000000000046ad2d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x15 ; syscall
0x000000000043fedd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x1c ; syscall
0x000000000046ac3d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x66 ; syscall
0x000000000043febd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xa ; syscall
0x0000000000442d0d : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004bdbd0 : add byte ptr [rsi - 3], ch ; jmp rax
0x00000000004c891b : add byte ptr [rsi], bh ; add byte ptr [rax], al ; adc byte ptr [rsi], dh ; std ; call rsp
0x00000000004bccef : add byte ptr [rsi], dh ; or byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004c6743 : add byte ptr [rsp + rax*4], ah ; add al, bl ; fdivr st(2) ; jmp rsi
0x00000000004c0f33 : add byte ptr [rsp + rbp], dl ; add byte ptr [rax], ch ; sal ch, cl ; call rdx
0x00000000004bff3b : add byte ptr [rsp + rbx], bl ; add byte ptr [rax + 0x55], dh ; cmc ; call qword ptr [rcx]
0x00000000004c2f43 : add byte ptr [rsp + rcx*2], ah ; add byte ptr [rax + 0x3d], bh ; clc ; call qword ptr [rax]
0x00000000004c6f33 : add byte ptr [rsp + rcx*4], dl ; add byte ptr [rax - 0x67], cl ; std ; call rcx
0x00000000004bf713 : add byte ptr [rsp + rdx], dh ; add byte ptr [rax], al ; pop rax ; cmc ; call qword ptr [rax]
0x000000000045c966 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043e43c : add byte ptr ds:[rax + 8], dil ; pop rbx ; ret
0x00000000004c21b5 : add byte ptr ds:[rax], al ; clc ; fcomi st(7) ; jmp qword ptr [rbx]
0x0000000000469f50 : add byte ptr es:[rax + 0x39], cl ; retf
0x000000000045c654 : add byte ptr es:[rax + 0x63], cl ; retf 0x8948
0x0000000000469637 : add byte ptr es:[rax + 0xf], cl ; retf 0x8948
0x0000000000469d7b : add byte ptr es:[rax + 1], cl ; retf
0x0000000000467ff3 : add byte ptr es:[rax - 0x7d], cl ; ret
0x0000000000469db4 : add byte ptr es:[rcx + rcx*4 + 0x2d], cl ; ret
0x0000000000467dc8 : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000467d3c : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000425cc8 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004426b7 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004c2f44 : add byte ptr fs:[rax], r8b ; js 0x4c2f8e ; clc ; call qword ptr [rax]
0x0000000000413390 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000411af3 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x000000000044587e : add byte ptr gs:[rdi + 0x6cc6d8], r15b ; call rax
0x00000000004a34e8 : add ch, 0xf8 ; jmp qword ptr [rax]
0x00000000004ae103 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004140c0 : add ch, al ; pop rdx ; retf
0x000000000045882f : add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004bb35c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004bb35d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004674cb : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000458d30 : add ch, byte ptr [rcx] ; retf 0xd189
0x0000000000464dca : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000045d490 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000041ad9d : add ch, cl ; paddd mm7, mm7 ; dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000472638 : add ch, cl ; ret 0xfffd
0x000000000045a8f9 : add cl, bl ; in eax, 0xdf ; loopne 0x45a88e ; ret 0xe680
0x00000000004ba72a : add cl, bl ; retf 0xea91
0x000000000041a4ec : add cl, bpl ; retf 0xfffe
0x0000000000439627 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000045dd8e : add cl, byte ptr [rax + 0x29] ; ret
0x0000000000489504 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000048952d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000449ad3 : add cl, byte ptr [rax + 0x39] ; ret
0x000000000046fa2b : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x000000000043236a : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x000000000045c59d : add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x000000000041d69c : add cl, byte ptr [rax + 0xf] ; retf 0x8348
0x00000000004105d9 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000483dc5 : add cl, byte ptr [rax + 1] ; ret
0x000000000044d143 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x0000000000439628 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000439595 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047be71 : add cl, byte ptr [rax - 0x77] ; pop rsp ; and al, 0x78 ; call r12
0x0000000000416492 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000041af82 : add cl, byte ptr [rax - 0x7d] ; enter 0x4801, -0x7d ; ret 0x4810
0x000000000047b320 : add cl, byte ptr [rax - 0x7d] ; jmp 0xffffffffcbd0fb30
0x000000000046b2e9 : add cl, byte ptr [rax - 0x7d] ; mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x000000000047987c : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x0000000000423760 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000004486e4 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000004237c3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00000000004643f1 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000004bfb10 : add cl, byte ptr [rbp + 0xa] ; ret
0x0000000000489ef3 : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000435482 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000041c024 : add cl, byte ptr [rcx + 0x548d48d0] ; ret
0x0000000000403e4b : add cl, byte ptr [rcx + 0x75] ; retf
0x000000000047d4b4 : add cl, byte ptr [rcx - 0x73] ; jl 0x47d486 ; adc byte ptr [rax - 0x77], cl ; retf 0x8b48
0x000000000043f53f : add cl, byte ptr [rdi] ; ret 0x8348
0x000000000043f497 : add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000404558 : add cl, byte ptr [rdi] ; retf 0x8b48
0x000000000041b3c8 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000462dd5 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000043e11d : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000004c7a67 : add cl, byte ptr [rdx] ; ret
0x000000000047674d : add cl, ch ; mov esi, 0x89fffffe ; ret 0x758b
0x0000000000449b37 : add cl, ch ; ret
0x0000000000408748 : add cl, ch ; ret 0xffe2
0x0000000000472564 : add cl, ch ; ret 0xfffd
0x0000000000407cb4 : add cl, ch ; retf
0x000000000048b87a : add cl, ch ; retf 0xfff2
0x0000000000453950 : add cl, ch ; retf 0xfffa
0x000000000043ef4f : add cl, ch ; retf 0xfffc
0x000000000041f1de : add cl, ch ; retf 0xfffd
0x000000000041a4ed : add cl, ch ; retf 0xfffe
0x00000000004429a7 : add cl, cl ; ret
0x00000000004ba5e3 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004ba5e2 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004bfa18 : add dh, ah ; ret
0x00000000004b1dab : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x0000000000465622 : add dh, al ; and al, 0x14 ; add al, ch ; ret
0x00000000004bcc0f : add dh, al ; or byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b11f7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000435633 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004bcd17 : add dh, bl ; or byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000043fd8b : add dh, bl ; ret
0x000000000044019c : add dh, bl ; std ; dec dword ptr [rcx - 0x75] ; jge 0x4401ac ; call rbx
0x0000000000484258 : add dh, byte ptr [rax] ; jmp 0x480cf1
0x00000000004bf916 : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x000000000049e682 : add dh, byte ptr [rbp + 6] ; mov eax, 8 ; ret
0x0000000000470a50 : add dh, byte ptr [rdi + rbx - 0x7d] ; retf 0x4108
0x00000000004174ca : add dh, dh ; ret
0x0000000000447105 : add dh, dh ; ret 0x4801
0x00000000004267d8 : add dh, dh ; ret 0x7404
0x0000000000400f3e : add dh, dh ; ret 0x7420
0x000000000043bcd7 : add dh, dh ; ret 0x7501
0x000000000043bce4 : add dh, dh ; ret 0x7502
0x000000000043bcf1 : add dh, dh ; ret 0x7504
0x000000000043bca9 : add dh, dh ; ret 0x7510
0x000000000043bcb6 : add dh, dh ; ret 0x7520
0x000000000043bcc3 : add dh, dh ; ret 0x7540
0x000000000041b3c5 : add dh, dh ; ret 0xf02
0x0000000000470a3a : add dh, dh ; ret 0xf08
0x000000000046d01b : add dl, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000004c19b4 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000449e16 : add dword ptr [r8 + 0x39], r9d ; ret
0x000000000046250e : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462c62 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x0000000000449480 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000043adb1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000047e511 : add dword ptr [rax + 0x29], ecx ; retf 0x148
0x000000000048abd2 : add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x000000000047e871 : add dword ptr [rax + 0x29], ecx ; retf 0x8d48
0x0000000000415111 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000004748c9 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004748db : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x0000000000479a10 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000045988d : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x000000000041c9fd : add dword ptr [rax + 0x39], ecx ; retf
0x000000000047c234 : add dword ptr [rax + 0x39], ecx ; retf 0xf40
0x000000000049ca59 : add dword ptr [rax + 0x63], ecx ; ret
0x0000000000475b26 : add dword ptr [rax + 0xf], ecx ; retf 0x2948
0x000000000047bdbd : add dword ptr [rax + 1], ecx ; ret
0x000000000040dc96 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000049e672 : add dword ptr [rax + 3], edi ; je 0x49e689 ; ret
0x000000000041c85a : add dword ptr [rax + 9], ecx ; retf 0x8948
0x00000000004c4d76 : add dword ptr [rax + rbp*2], 0xa ; ret
0x00000000004ba1db : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4ba247 ; retf
0x0000000000458376 : add dword ptr [rax - 0x39], ecx ; ret 0xfff0
0x0000000000402983 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x000000000049b3ba : add dword ptr [rax - 0x73], ecx ; push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000439601 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000047476d : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000439592 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000414f13 : add dword ptr [rax - 0x77], ecx ; or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000041878e : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004150aa : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000465551 : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000471db7 : add dword ptr [rax - 0x77], ecx ; ret 0x8348
0x0000000000412dff : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x000000000047b324 : add dword ptr [rax - 0x77], ecx ; retf
0x00000000004746cd : add dword ptr [rax - 0x7d], ecx ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000425782 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000473984 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000046250f : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x00000000004506d9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000041af86 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x00000000004446cc : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x0000000000452bb3 : add dword ptr [rax - 0x7d], ecx ; ret 0x4910
0x0000000000446dde : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x0000000000489de4 : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000047d5e3 : add dword ptr [rax - 0x7d], ecx ; ret 0x8008
0x0000000000462c63 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x000000000048122a : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048901c : add dword ptr [rax], 0x840f0000 ; retf
0x00000000004c6465 : add dword ptr [rax], 0xfab01800 ; call rdx
0x0000000000481107 : add dword ptr [rax], eax ; add al, ch ; int1 ; retf 0xfff9
0x000000000049abcb : add dword ptr [rax], eax ; add bl, ch ; retf
0x000000000040faa6 : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000044c326 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000044b49e : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000473a94 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044734e : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000411c36 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5b004a1b], ah ; ret
0x000000000047ec07 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000421029 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000041b13b : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004114b6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044f235 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000049bdf5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000464a48 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x000000000041e556 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041e680 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000405b67 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041c707 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000040eead : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042354d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004498d4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000042555e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042bfcf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004234a1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040dac6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4803
0x000000000040da76 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4804
0x000000000040d92a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040da9e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040daee : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4807
0x000000000040da03 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4808
0x000000000040d98e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000040db8e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480a
0x000000000040db62 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480b
0x000000000040d9d0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480c
0x000000000040d95e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000044c682 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000463fd0 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000444b51 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004b11fa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b03aa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004b01d2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b01ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0962 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004b020a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b0202 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004b09a2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000049bf6b : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x0000000000401778 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000440d77 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x000000000046bceb : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46bcc1
0x000000000049c85d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000004427fe : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000043ec03 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000044edc1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 3 ; syscall
0x000000000049c4d8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000047a4be : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000440f64 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440e30 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440da8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000004411ee : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000462924 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x0000000000462239 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000045c5db : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415513 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e99c : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000444277 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004003d6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000041b3cc : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000049e53c : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; retf 0x1fc
0x00000000004250a8 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049bdce : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400605 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000444363 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000467c18 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x38b7cf18], al ; ret
0x00000000004103f2 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x0000000000462c02 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x0000000000442f5e : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7cbefe39], al ; ret 0x4901
0x000000000044f1d8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; retf 0x894c
0x0000000000445f4c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041fd5e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000044954e : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041d0cb : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a151 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000468237 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x0000000000413848 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000446ef5 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x0000000000448108 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf 0x8440
0x000000000043bcd5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000043bce2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000043bcef : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000043bca7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000043bcb4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000043bcc1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000421298 : add dword ptr [rax], eax ; ret
0x0000000000425b81 : add dword ptr [rax], edi ; ret
0x0000000000425786 : add dword ptr [rax], edi ; retf 0xf41
0x000000000043e157 : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x00000000004ba724 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000047e2c2 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x0000000000489ed3 : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000041ebbd : add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x0000000000485df7 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret 0x2941
0x0000000000442629 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004bab0a : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x00000000004354f2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004b96ea : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x000000000046dcf5 : add dword ptr [rbx - 0x77], eax ; je 0x46dc86 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046dcf4 : add dword ptr [rbx - 0x77], eax ; je 0x46dc87 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000040d6cd : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004c92ea : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004c92e7 : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x000000000045c64f : add dword ptr [rcx + 0x26f4560d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000046a209 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x0000000000446f1a : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x00000000004473a8 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x000000000041b9fa : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x0000000000439631 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000462020 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000049d9af : add dword ptr [rcx - 0x77], ecx ; retf 0xb9e9
0x000000000049abc6 : add dword ptr [rcx - 0x78], eax ; xchg eax, esi ; jo 0x49abd6 ; add byte ptr [rax], al ; jmp 0x49aba4
0x0000000000442f63 : add dword ptr [rcx - 0x7d], eax ; ret 0x4901
0x0000000000445efd : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x00000000004043bd : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x0000000000425577 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043f74b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000041bd05 : add dword ptr [rcx], eax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000004752da : add dword ptr [rcx], edi ; retf
0x00000000004ba635 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004c6c0d : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004c6b9d : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004c6bd5 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004c6bae : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004c6be6 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c6c1e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c2875 : add dword ptr [rdi], 3 ; mov bh, 1 ; ret
0x00000000004c64a3 : add dword ptr [rdi], 3 ; mov bl, 2 ; ret
0x00000000004c7a63 : add dword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004c79b2 : add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x000000000043e1b8 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043e1a3 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000045bdc1 : add dword ptr [rdi], ecx ; test bl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004182ee : add dword ptr [rdi], ecx ; test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041a66d : add dword ptr [rdi], ecx ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000044734a : add dword ptr [rdi], ecx ; test edi, eax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x000000000041d0d1 : add dword ptr [rdi], ecx ; test edx, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000474ae7 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000475354 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043e07d : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x0000000000499e80 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x000000000042ab36 : add dword ptr [rdx + 0x410d8d48], edx ; retf
0x0000000000403e45 : add dword ptr [rdx + 0x75], edx ; rol dword ptr [rax + 0x7549027a], 1 ; retf
0x000000000043dc42 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043583d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000048835b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004bfa16 : add dword ptr [rdx + rax], -0xc ; ret
0x000000000046da17 : add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x00000000004ba30f : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004c0c85 : add dword ptr [rdx], 0x43 ; ret
0x00000000004c6995 : add dword ptr [rdx], 0x48 ; ret
0x00000000004c9084 : add dword ptr [rdx], 0x54 ; ret
0x00000000004c6454 : add dword ptr [rdx], 0x55 ; ret
0x00000000004c698c : add dword ptr [rdx], 0x5b ; ret
0x00000000004c902c : add dword ptr [rdx], 0x69 ; ret
0x00000000004c4ec4 : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000004c4c9c : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000004c0284 : add dword ptr [rdx], 2 ; ret
0x00000000004bfb22 : add dword ptr [rdx], ecx ; ret
0x00000000004bf443 : add dword ptr [rip + 0x2a00e52], 2 ; retf
0x0000000000416858 : add dword ptr [rip + 0x2b5d45], 1 ; ret
0x0000000000413865 : add dword ptr [rsi + 0x4a1d70], edi ; call 0x400328
0x00000000004befe6 : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4beffc ; ret
0x00000000004beff4 : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000439612 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004bfe26 : add dword ptr [rsi], 0xa ; ret
0x00000000004bfe98 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00000000004c19b5 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000400ccd : add dword ptr [rsi], edx ; and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004c237e : add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000497797 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c7a7a : add dword ptr es:[rdx], ecx ; ret
0x0000000000443cd0 : add dword ptr fs:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000426c38 : add eax, 0x12ad3 ; ret
0x0000000000423708 : add eax, 0x14853 ; ret
0x00000000004260aa : add eax, 0x15e71 ; ret
0x0000000000426684 : add eax, 0x17647 ; ret
0x0000000000421295 : add eax, 0x1a966 ; ret
0x000000000042608e : add eax, 0x1d ; ret
0x000000000044f73c : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004c14fc : add eax, 0x2300e4a ; ret
0x0000000000488561 : add eax, 0x244cfa ; ret
0x0000000000476970 : add eax, 0x256882 ; jne 0x4769b9 ; ret
0x000000000047417c : add eax, 0x258be7 ; mov qword ptr [rsi], rax ; ret
0x000000000047411b : add eax, 0x258c50 ; ret
0x000000000047403a : add eax, 0x258d31 ; add rsp, 8 ; ret
0x000000000044cb52 : add eax, 0x27fba9 ; ret
0x00000000004457e2 : add eax, 0x287ae1 ; ret
0x0000000000444291 : add eax, 0x28901a ; test eax, eax ; je 0x4442a9 ; ret
0x000000000041dbe9 : add eax, 0x2aea16 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004167c2 : add eax, 0x2b38f9 ; ret
0x00000000004168c6 : add eax, 0x2b5cd9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040165b : add eax, 0x2c8a30 ; xor eax, eax ; ret
0x0000000000400706 : add eax, 0x2ca9a5 ; pop rbp ; pop r12 ; ret
0x0000000000400965 : add eax, 0x2cb1f5 ; add ebx, esi ; ret
0x00000000004c19b3 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x0000000000489561 : add eax, 0x394d0000 ; retf
0x000000000043ae48 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x0000000000439678 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000043b346 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000043aec9 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000004396b9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000047a8c6 : add eax, 0x5b000000 ; ret
0x00000000004b1d9d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000418b85 : add eax, 0x5c415d5b ; ret
0x00000000004b1dad : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x0000000000426d54 : add eax, 0x67 ; ret
0x0000000000489f53 : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000043e077 : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000042313d : add eax, 0x83480000 ; ret 0x4910
0x000000000042a5c1 : add eax, 0x83480000 ; ret 0xe910
0x0000000000423091 : add eax, 0x83480000 ; ret 0xeb10
0x000000000045672d : add eax, 0x83480001 ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000043ae4b : add eax, 0x8428d48 ; ret
0x00000000004260a2 : add eax, 0x8449 ; ret
0x000000000048563a : add eax, 0x89000001 ; ret 0x348
0x0000000000424c28 : add eax, 0x894d0000 ; retf
0x0000000000449acd : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000449e2e : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449e4b : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000042f54a : add eax, 0xc0310000 ; ret
0x000000000043aecd : add eax, 0xc428d48 ; ret
0x000000000043b9ad : add eax, 0xc478d48 ; ret
0x0000000000441212 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000441237 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x0000000000441380 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000441419 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000041a147 : add eax, 0xf6410000 ; ret 0xf01
0x00000000004354e3 : add eax, 0xf7f0ff3 ; ret
0x000000000047397f : add eax, 0xfffffbd8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000004788aa : add eax, 0xfffffff8 ; ret
0x000000000043e155 : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004667c1 : add eax, 1 ; ret
0x0000000000444b35 : add eax, 2 ; push rax ; call rbx
0x00000000004667b8 : add eax, 2 ; ret
0x00000000004214e8 : add eax, 3 ; ret
0x0000000000426da7 : add eax, 4 ; ret
0x000000000044f699 : add eax, dword ptr [0] ; ret
0x0000000000470e48 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000418d23 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000004177eb : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000047139e : add eax, dword ptr [rax] ; add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x0000000000418cff : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x000000000044dd58 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046fd83 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004232dd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a761 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423301 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000445786 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049e674 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x49e687 ; ret
0x000000000043ff7c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000046a653 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000044175d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000004417b4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000441834 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000441934 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000412355 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x00000000004214e9 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000040048a : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000476a43 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; je 0x476ab4 ; pop rbx ; ret
0x0000000000495b1a : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043e1b3 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000047e3cc : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x0000000000448d9b : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x76ec7738], cl ; retf 0xe083
0x0000000000442815 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004182f2 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00000000004428b5 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000470a38 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x0000000000445471 : add eax, dword ptr [rax] ; mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000004453cb : add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x0000000000444d7a : add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000043e3d0 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e3f0 : add eax, dword ptr [rax] ; ret
0x00000000004c5e2b : add eax, dword ptr [rbx + 0xaf10204] ; ret
0x00000000004bfb0a : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000047e9f1 : add eax, dword ptr [rbx] ; call rax
0x00000000004c6bb1 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x0000000000411264 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047cc7d : add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x00000000004c7b33 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004bf532 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000046b00a : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000471c65 : add eax, dword ptr [rdi] ; call rax
0x0000000000478654 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475fa9 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004c6be9 : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c6c21 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004bf282 : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000004c444a : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004bfa12 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00000000004c237a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x00000000004717cb : add eax, dword ptr [rsp] ; call rax
0x000000000049758f : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000444d79 : add eax, dword ptr ss:[rax] ; mov rdi, rbx ; call r14
0x000000000043e498 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000499eee : add eax, eax ; jmp r8
0x000000000049b416 : add eax, eax ; jmp rax
0x000000000045a528 : add eax, eax ; ret
0x0000000000425cc6 : add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000049b0be : add eax, ebp ; jmp rax
0x0000000000416533 : add eax, ecx ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000425dca : add eax, ecx ; ret
0x0000000000425dc7 : add eax, edi ; add rax, rcx ; ret
0x00000000004a3159 : add eax, edi ; call qword ptr [rax]
0x00000000004c2619 : add eax, edi ; call qword ptr [rdi]
0x0000000000426004 : add eax, edi ; ret
0x00000000004239d6 : add eax, edx ; sub rax, rdi ; ret
0x000000000049b99e : add eax, esi ; jmp rax
0x0000000000467337 : add eax, esi ; ret
0x000000000045a527 : add eax, r8d ; ret
0x0000000000457a68 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047b6bd : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000047bc6d : add ebp, eax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x00000000004b9277 : add ebp, ebp ; retf
0x00000000004717c7 : add ebx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x000000000048859a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004c6bda : add ebx, dword ptr [rbx + 3] ; ret
0x0000000000471453 : add ebx, dword ptr [rbx - 0xd] ; ret
0x00000000004bfb20 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x0000000000478941 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004853ba : add ebx, ebp ; ret 0x8d48
0x00000000004356a3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000040096a : add ebx, esi ; ret
0x0000000000426764 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x426759 ; ret
0x0000000000439665 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000418159 : add ecx, dword ptr [rax + 0x29] ; ret
0x0000000000449aef : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000004643f7 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x000000000043297a : add ecx, dword ptr [rax + 0x39] ; retf 0x1073
0x0000000000415265 : add ecx, dword ptr [rax + 0x39] ; retf 0x8948
0x000000000046dc2b : add ecx, dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000049b3be : add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000439669 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047dc38 : add ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x000000000041d3fe : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418c48 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x0000000000434498 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x0000000000447315 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000040e10d : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040e1e7 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004119e7 : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x0000000000489f13 : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000435412 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004c6ba2 : add ecx, dword ptr [rbx + 3] ; ret
0x000000000043b2e4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000047e28f : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000439666 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000004c1d6a : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c52a8 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000046b84d : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x00000000004520fc : add ecx, ebp ; ret
0x000000000046b3fb : add ecx, ebp ; retf 0xfffe
0x000000000042fb6e : add ecx, ebx ; jmp r9
0x000000000042e512 : add ecx, ebx ; jmp rcx
0x000000000049a116 : add ecx, esi ; jmp rcx
0x0000000000470c37 : add edi, 0x1c ; mov eax, 0xca ; syscall
0x000000000049ec4f : add edi, dword ptr [rbp + 0x10] ; call r12
0x0000000000464707 : add edi, dword ptr [rcx] ; retf 0xf48
0x000000000042fb6b : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004be239 : add edi, esi ; call rax
0x00000000004be799 : add edi, esi ; call rdi
0x000000000047279c : add edx, dword ptr [rax] ; mov rax, rdx ; call rax
0x00000000004c9223 : add edx, dword ptr [rcx + rax + 0x41380e0a] ; ret
0x00000000004794d2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000444380 : add edx, ebx ; loopne 0x4443e4 ; pop rbp ; ret
0x00000000004bf3f2 : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x00000000004c2472 : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x000000000044d547 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x00000000004c92eb : add esi, ebp ; add al, byte ptr [rax] ; ret
0x00000000004355c3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f28c : add esi, ebx ; ret
0x000000000043e480 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042fb68 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000463328 : add esi, esi ; ret 0x7420
0x0000000000487af7 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000040fcd1 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e5d9 : add esp, 0x10 ; pop rbx ; ret
0x0000000000420437 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e5c1 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000004736c2 : add esp, 0x140 ; mov eax, ebx ; pop rbx ; ret
0x00000000004736a4 : add esp, 0x140 ; pop rbx ; ret
0x000000000043fdcd : add esp, 0x18 ; mov eax, edx ; ret
0x0000000000416cb1 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410b57 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f260 : add esp, 0x18 ; ret
0x0000000000444360 : add esp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000452343 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x0000000000487ecc : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x00000000004458a1 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414fbf : add esp, 0x20 ; pop rbx ; ret
0x000000000047af59 : add esp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000040dc68 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041481e : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000487e21 : add esp, 0x28 ; ret
0x000000000046ae52 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478539 : add esp, 0x30 ; pop rbx ; ret
0x000000000043ec20 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004785c6 : add esp, 0x38 ; ret
0x000000000047844c : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000046adc2 : add esp, 0x48 ; movzx eax, al ; ret
0x0000000000478658 : add esp, 0x48 ; ret
0x00000000004783da : add esp, 0x50 ; jmp qword ptr [rax]
0x0000000000487f74 : add esp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x000000000046697c : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f510 : add esp, 0x60 ; pop rbx ; ret
0x00000000004004ca : add esp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478742 : add esp, 0x68 ; ret
0x000000000044262d : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040fa01 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000046aadb : add esp, 0x80 ; pop rbx ; ret
0x00000000004143d7 : add esp, 0x80 ; ret
0x000000000041fef6 : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000046abd9 : add esp, 0x90 ; pop rbx ; ret
0x000000000046abf7 : add esp, 0x90 ; xor eax, eax ; pop rbx ; ret
0x0000000000412f1d : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040125f : add esp, 0x98 ; ret
0x000000000044f9f9 : add esp, 0xd0 ; ret
0x000000000040f4e7 : add esp, 0xd8 ; ret
0x0000000000478315 : add esp, 8 ; jmp rax
0x0000000000410f03 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041edf8 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043fd2a : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417858 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040ec90 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041f3d3 : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000487e57 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041dd5e : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000405ab1 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401933 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412b68 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002de : add esp, 8 ; ret
0x0000000000423829 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000473f91 : add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004ba96b : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x00000000004c67fa : add esp, dword ptr [rdx + 0x380e0a01] ; ret
0x00000000004c7a79 : add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004c7d11 : add esp, edi ; jmp qword ptr [rax]
0x00000000004c64a2 : add qword ptr [r15], 3 ; mov bl, 2 ; ret
0x0000000000446ddd : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x000000000042370a : add qword ptr [rax], rax ; ret
0x000000000041bd04 : add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000004c7a62 : add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000047f35e : add r11b, bpl ; retf 0x1f0f
0x000000000042664c : add r11b, sil ; ret
0x00000000004356a2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435632 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355c2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000045f8ad : add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000495bc0 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000499eed : add r8, rax ; jmp r8
0x000000000046a4c6 : add r8b, bpl ; ret
0x000000000048b9c7 : add r8b, bpl ; ret 0xf75e
0x000000000046f6c7 : add r8b, bpl ; ret 0xf921
0x000000000045efc7 : add r8b, bpl ; ret 0xfa28
0x0000000000476abf : add r8b, bpl ; retf 0xf8ad
0x00000000004655d0 : add r8b, bpl ; stc ; ret 0xfff9
0x000000000042fb6d : add r9, r11 ; jmp r9
0x00000000004ba729 : add r9b, bl ; retf 0xea91
0x000000000041f1dd : add r9b, bpl ; retf 0xfffd
0x0000000000449e33 : add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449e50 : add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000497372 : add rax, -0x7cb80000 ; ret 0xe910
0x00000000004788a9 : add rax, -8 ; ret
0x000000000043e154 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004667c0 : add rax, 1 ; ret
0x00000000004667b7 : add rax, 2 ; ret
0x00000000004667d0 : add rax, 3 ; ret
0x000000000044f698 : add rax, qword ptr [0] ; ret
0x00000000004717ca : add rax, qword ptr [r12] ; call rax
0x0000000000471c64 : add rax, qword ptr [r15] ; call rax
0x0000000000448d9a : add rax, qword ptr [rax] ; add byte ptr [rcx - 0x76ec7738], cl ; retf 0xe083
0x000000000047e9f0 : add rax, qword ptr [rbx] ; call rax
0x0000000000478653 : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475fa8 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000044f697 : add rax, qword ptr fs:[0] ; ret
0x000000000049b99d : add rax, r14 ; jmp rax
0x000000000049b415 : add rax, r8 ; jmp rax
0x000000000049b0bd : add rax, rbp ; jmp rax
0x0000000000425dc9 : add rax, rcx ; ret
0x0000000000425dc6 : add rax, rdi ; add rax, rcx ; ret
0x0000000000426003 : add rax, rdi ; ret
0x00000000004239d5 : add rax, rdx ; sub rax, rdi ; ret
0x000000000047bc6c : add rbp, rax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x00000000004717c6 : add rbx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x000000000042e511 : add rcx, r11 ; jmp rcx
0x000000000049a115 : add rcx, r14 ; jmp rcx
0x0000000000470c36 : add rdi, 0x1c ; mov eax, 0xca ; syscall
0x000000000049ec4e : add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000042fb6a : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000047279b : add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x00000000004794d1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000487af6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040fcd0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e5d8 : add rsp, 0x10 ; pop rbx ; ret
0x000000000043e5c0 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000004736a3 : add rsp, 0x140 ; pop rbx ; ret
0x000000000043fdcc : add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000410b56 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f25f : add rsp, 0x18 ; ret
0x000000000044435f : add rsp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000452342 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x0000000000487ecb : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x00000000004458a0 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414fbe : add rsp, 0x20 ; pop rbx ; ret
0x000000000047af58 : add rsp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000041481d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000487e20 : add rsp, 0x28 ; ret
0x000000000046ae51 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478538 : add rsp, 0x30 ; pop rbx ; ret
0x000000000043ec1f : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004785c5 : add rsp, 0x38 ; ret
0x000000000047844b : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046adc1 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000478657 : add rsp, 0x48 ; ret
0x00000000004783d9 : add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000487f73 : add rsp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x000000000046697b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f50f : add rsp, 0x60 ; pop rbx ; ret
0x00000000004004c9 : add rsp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478741 : add rsp, 0x68 ; ret
0x000000000044262c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000046aada : add rsp, 0x80 ; pop rbx ; ret
0x00000000004143d6 : add rsp, 0x80 ; ret
0x000000000046abd8 : add rsp, 0x90 ; pop rbx ; ret
0x0000000000412f1c : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040125e : add rsp, 0x98 ; ret
0x000000000044f9f8 : add rsp, 0xd0 ; ret
0x000000000040f4e6 : add rsp, 0xd8 ; ret
0x0000000000478314 : add rsp, 8 ; jmp rax
0x0000000000410f02 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041edf7 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043fd29 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417857 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040ec8f : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041f3d2 : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000487e56 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041dd5d : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000401932 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412b67 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002dd : add rsp, 8 ; ret
0x0000000000423828 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000042c23e : add sil, sil ; ret 0x7404
0x000000000048835a : add word ptr [rdx + rax*2], 1 ; ret
0x00000000004a3528 : and ah, ch ; clc ; jmp qword ptr [rax]
0x0000000000491ae5 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000488358 : and al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000488564 : and al, 0 ; ret
0x000000000043f53d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x000000000049c318 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000447183 : and al, 0x10 ; call r12
0x000000000041b57d : and al, 0x10 ; call rax
0x0000000000464fd9 : and al, 0x10 ; call rbx
0x000000000043f94b : and al, 0x10 ; mov eax, 0x101 ; syscall
0x000000000043f9cd : and al, 0x10 ; mov eax, 3 ; syscall
0x0000000000400bb5 : and al, 0x10 ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000440511 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447477 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447dda : and al, 0x10 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000487e1b : and al, 0x10 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000049c9c5 : and al, 0x10 ; mov rsi, qword ptr [r15] ; call r14
0x00000000004505f6 : and al, 0x10 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000465625 : and al, 0x14 ; add al, ch ; ret
0x0000000000418bb6 : and al, 0x14 ; pop r12 ; ret
0x000000000041dd5b : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000044b9cc : and al, 0x18 ; call r14
0x0000000000400c12 : and al, 0x18 ; call rax
0x0000000000464fd4 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x000000000041b578 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x0000000000444aa8 : and al, 0x18 ; mov r9, r14 ; call rbx
0x00000000004481c0 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000047b020 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000044717e : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x00000000004650b2 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000418b82 : and al, 0x1c ; je 0x418b93 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418b81 : and al, 0x1c ; je 0x418b94 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000419626 : and al, 0x20 ; add al, ch ; ret 0x38b
0x000000000044747c : and al, 0x20 ; call rax
0x0000000000466b37 : and al, 0x20 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000044b99e : and al, 0x20 ; mov qword ptr [rsp + 0x40], rax ; call 0x478479
0x0000000000450c13 : and al, 0x20 ; mov rdi, r12 ; call r15
0x00000000004b94a4 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000004785c0 : and al, 0x28 ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x0000000000489a0b : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00000000004478f7 : and al, 0x28 ; call r12
0x0000000000448622 : and al, 0x28 ; call r14
0x0000000000446f84 : and al, 0x28 ; call r15
0x0000000000447ddf : and al, 0x28 ; call rax
0x00000000004479ab : and al, 0x28 ; call rbx
0x0000000000466e52 : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000466bdf : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000041ea73 : and al, 0x28 ; mov rdi, rbp ; call rax
0x000000000041d126 : and al, 0x30 ; add al, ch ; ret 0x350
0x000000000048fa9f : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000044b20c : and al, 0x30 ; call r14
0x000000000047366f : and al, 0x30 ; call r9
0x000000000044982a : and al, 0x30 ; call rbx
0x0000000000487f3f : and al, 0x30 ; je 0x487f53 ; mov edi, 0x6cb140 ; call rax
0x000000000040e1a9 : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000466a1d : and al, 0x30 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000449c6a : and al, 0x30 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447021 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x00000000004479a6 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000041ab8b : and al, 0x30 ; mov rdi, r9 ; mov eax, r8d ; syscall
0x00000000004820af : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000048cc42 : and al, 0x38 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000047876e : and al, 0x38 ; add rsp, 0x68 ; ret
0x000000000047366a : and al, 0x38 ; mov r9, qword ptr [rsp + 0x30] ; call r9
0x0000000000449825 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000478449 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004783d7 : and al, 0x40 ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000044b9a3 : and al, 0x40 ; call 0x478474
0x000000000044b9a2 : and al, 0x40 ; call 0x478475
0x0000000000448baa : and al, 0x40 ; call r15
0x0000000000466b3c : and al, 0x40 ; call rbx
0x0000000000448f51 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000043fdcb : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x000000000043f25e : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000041e083 : and al, 0x48 ; call rax
0x000000000046fad4 : and al, 0x48 ; lea edi, dword ptr [rax + 0x6cb1e0] ; call rdx
0x000000000044216d : and al, 0x48 ; mov edx, eax ; mov eax, r12d ; syscall
0x00000000004478f2 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x0000000000446f7f : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000448ba5 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000467242 : and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000049de4c : and al, 0x49 ; mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x000000000044aa3b : and al, 0x49 ; mov esp, esi ; jmp 0x44aa11
0x0000000000417049 : and al, 0x4a ; add byte ptr [rcx + 0xf], cl ; retf 0xff31
0x000000000044b9c7 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041c89d : and al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000418bb1 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000466d50 : and al, 0x60 ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041e38b : and al, 0x68 ; call rax
0x000000000041f66b : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000041158e : and al, 0x74 ; ret 0x8b4c
0x0000000000472d0a : and al, 0x75 ; ret
0x000000000047b7de : and al, 0x78 ; call r12
0x000000000047bcad : and al, 0x78 ; lea rdi, qword ptr [rsp + 0x78] ; call r12
0x000000000044861d : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044b207 : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000048b5ff : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047c484 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000447101 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004c6b04 : and al, 0x88 ; add byte ptr [rax], al ; or cl, dh ; cli ; jmp qword ptr [rdx]
0x000000000041bd86 : and al, 0x89 ; ret 0xb48b
0x000000000041bd02 : and al, 0x8d ; add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000043f495 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000046af09 : and al, 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000043f339 : and al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000043f399 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000043f3f9 : and al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000046ad79 : and al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000049beab : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000004785ef : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000400bb9 : and al, 0xc ; call r12
0x0000000000400c0d : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000419623 : and al, 0xc6 ; and al, 0x20 ; add al, ch ; ret 0x38b
0x000000000041d123 : and al, 0xc6 ; and al, 0x30 ; add al, ch ; ret 0x350
0x0000000000488b5d : and al, 0xd5 ; and bl, bl ; add byte ptr [r8 + 1], cl ; retf 0x8b48
0x000000000047ba5a : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000040895b : and al, 0xe8 ; call rbx
0x0000000000409ab4 : and al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x0000000000409aca : and al, 0xe8 ; nop ; ret 0xffff
0x0000000000409a6b : and al, 0xe8 ; out dx, eax ; ret 0xffff
0x0000000000409aec : and al, 0xe8 ; outsb dx, byte ptr [rsi] ; ret 0xffff
0x0000000000409b02 : and al, 0xe8 ; pop rax ; ret 0xffff
0x0000000000409a0c : and al, 0xe8 ; ret
0x000000000040abd8 : and al, 0xe8 ; ret 0x133
0x000000000040a0d8 : and al, 0xe8 ; ret 0x13e
0x0000000000409b13 : and al, 0xe8 ; ret 0xffff
0x000000000040d090 : and al, 0xe8 ; retf 0xff8c
0x000000000041d2d0 : and al, 0xe8 ; retf 0xffa1
0x0000000000409290 : and al, 0xe8 ; retf 0xffca
0x0000000000409184 : and al, 0xe8 ; salc ; retf
0x00000000004092b0 : and al, 0xe8 ; stosb byte ptr [rdi], al ; retf 0xffff
0x00000000004099c3 : and al, 0xe8 ; xchg eax, edi ; ret
0x0000000000408685 : and al, 0xe9 ; retf
0x0000000000478480 : and al, 0xe9 ; retf 0x76
0x0000000000491888 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000049cda5 : and al, 0xf ; ret 0x8348
0x000000000041c227 : and al, 0xf ; xchg eax, ebp ; ret 0x8348
0x000000000042c346 : and al, 0xf8 ; jne 0x42c222 ; ret
0x0000000000491841 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000491847 : and al, 0xf8 ; ret
0x00000000004917fb : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000491801 : and al, 0xfc ; ret
0x000000000044f767 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000044f76b : and al, 0xfe ; ret
0x000000000046a0f6 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x0000000000413864 : and al, 1 ; mov esi, 0x4a1d70 ; call 0x400329
0x000000000044fb7c : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000043e5d6 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047aad2 : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000409301 : and al, 8 ; call 0x405d64
0x0000000000409300 : and al, 8 ; call 0x405d65
0x0000000000440428 : and al, 8 ; call rbx
0x0000000000487e99 : and al, 8 ; je 0x487ead ; mov edi, 0x6cb140 ; call rax
0x000000000043f645 : and al, 8 ; mov eax, 0x4f ; syscall
0x0000000000478180 : and al, 8 ; mov edi, 0x6cb140 ; call rax
0x000000000041b634 : and al, 8 ; mov qword ptr [rsp], rcx ; call rdx
0x0000000000409270 : and al, 8 ; mov qword ptr [rsp], rdx ; call 0x405d68
0x000000000040926f : and al, 8 ; mov qword ptr [rsp], rdx ; call 0x405d69
0x000000000040e366 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x00000000004421b2 : and al, 8 ; xor eax, eax ; syscall
0x00000000004a34c0 : and al, al ; clc ; jmp qword ptr [rax + 0x20fff8c0]
0x00000000004a0878 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000491c8e : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000410bf6 : and al, byte ptr [rax] ; add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x000000000040746e : and al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x000000000049ebe3 : and al, byte ptr [rax] ; jne 0x49ebcd ; pop rbx ; ret
0x000000000049dfa4 : and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004237da : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000474a7c : and ax, 0x100 ; pop rbx ; ret
0x000000000047674b : and ax, 0xe900 ; mov esi, 0x89fffffe ; ret 0x758b
0x000000000045d48e : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000488b5f : and bl, bl ; add byte ptr [r8 + 1], cl ; retf 0x8b48
0x00000000004a35c8 : and bl, ch ; clc ; jmp qword ptr [rax]
0x000000000046278b : and bl, ch ; retf 0x9066
0x000000000040dd0f : and bl, dh ; ret
0x000000000046756e : and byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x0000000000419df3 : and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000414be4 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000049e844 : and byte ptr [rax + 0x39], cl ; ret
0x0000000000419e89 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x00000000004103c7 : and byte ptr [rax + 0x39], cl ; retf 0xbd75
0x000000000044e1b5 : and byte ptr [rax + 0x4a], 0 ; test rax, rax ; je 0x44e1c9 ; call rax
0x000000000045291e : and byte ptr [rax + 1], cl ; ret
0x00000000004238a8 : and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000004239cd : and byte ptr [rax + 9], cl ; retf 0xf48
0x00000000004658be : and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000048f5e0 : and byte ptr [rax + rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000040ead0 : and byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000466b38 : and byte ptr [rax - 0x73], cl ; je 0x466b67 ; call rbx
0x000000000041ba93 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000045d3bc : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000044b99f : and byte ptr [rax - 0x77], cl ; and al, 0x40 ; call 0x478478
0x000000000040ee13 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000469a84 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x0000000000445ed4 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x00000000004523f6 : and byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000045ac9d : and byte ptr [rax - 0x77], cl ; retf 0x30be
0x000000000044f074 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x44f088 ; call rax
0x000000000049d01b : and byte ptr [rax - 0x7b], cl ; ret 0x840f
0x0000000000445d6e : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000419df4 : and byte ptr [rax - 0x7d], cl ; retf
0x00000000004123e2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000004bdc78 : and byte ptr [rax - 3], ah ; jmp qword ptr [rax]
0x000000000043fa8f : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043e463 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000491ede : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004bd031 : and byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004bdbcc : and byte ptr [rbp + rdi*8 - 1], ch ; add byte ptr [rsi - 3], ch ; jmp rax
0x00000000004c7b36 : and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004bb248 : and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000405cb8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046756f : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004458a3 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004bf535 : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000004bfb0d : and byte ptr [rbx + 0xa4d0204], al ; ret
0x00000000004605ee : and byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x0000000000455650 : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x0000000000462f79 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004bdbec : and byte ptr [rbx - 3], bh ; inc dword ptr [rax] ; jge 0x4bdbf7 ; jmp rax
0x000000000045f8ab : and byte ptr [rbx], bh ; add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000414be5 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x00000000004c437e : and byte ptr [rcx + 0xa], al ; ret
0x0000000000450c14 : and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000452345 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000491885 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000445e5c : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x00000000004a38f0 : and byte ptr [rdi], cl ; stc ; jmp rax
0x0000000000445e49 : and byte ptr [rdi], cl ; test cl, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043bcb0 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000045d639 : and byte ptr [rip + 0x1f0f004b], dh ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000042e5aa : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c444d : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004a34b8 : and byte ptr [rsi - 0x40df0008], bh ; clc ; jmp qword ptr [rax]
0x00000000004667b2 : and ch, 0xf ; je 0x4667d9 ; add rax, 2 ; ret
0x00000000004c3fe0 : and ch, bl ; clc ; call qword ptr [rax]
0x000000000049e02a : and ch, ch ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000046679d : and cl, 0xf ; je 0x4667c5 ; ret
0x00000000004a34c8 : and cl, al ; clc ; jmp qword ptr [rax + 0x20fff8c1]
0x00000000004a36b5 : and cl, bh ; call qword ptr [rax + 0x20fff91f]
0x000000000041c57e : and cl, bpl ; ret 0xfff9
0x000000000047e933 : and cl, byte ptr [rax + 0x29] ; fmul dword ptr [rax + 0x39] ; ret 0x860f
0x000000000042618d : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000041adc5 : and cl, byte ptr [rdx] ; call 0x417015
0x00000000004a35c4 : and cl, ch ; clc ; jmp qword ptr [rax]
0x000000000041c57f : and cl, ch ; ret 0xfff9
0x0000000000426777 : and dh, dh ; ret 0x7504
0x000000000045d48d : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004a3574 : and dl, ah ; clc ; inc dword ptr [rax] ; in al, 0xf8 ; jmp rax
0x00000000004a3990 : and dl, byte ptr [rbx] ; stc ; jmp qword ptr [rdx + 0x22fff912]
0x00000000004a3988 : and dl, byte ptr [rcx + rdi*8] ; jmp qword ptr [rdx + 0x22fff913]
0x00000000004a3998 : and dl, byte ptr [rdx] ; stc ; jmp qword ptr [rdx + 0x22fff911]
0x00000000004a3980 : and dl, byte ptr [rip + 0x14a2fff9] ; stc ; jmp qword ptr [rdx]
0x00000000004a3524 : and dl, ch ; clc ; jmp qword ptr [rax]
0x0000000000497c5e : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004578c9 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004bafc2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000415b4c : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000049a9f3 : and dword ptr [rbx], esp ; add byte ptr [rax], cl ; ret
0x000000000043f327 : and dword ptr [rcx + rdx*2], 0 ; ret
0x000000000048ec4c : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x00000000004b8079 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000463ddb : and dword ptr [rsi - 0x7ab70005], ebx ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x00000000004bafc1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000044f69b : and eax, 0 ; ret
0x000000000049cb3a : and eax, 0x10468b48 ; add rsp, 8 ; ret
0x000000000047c876 : and eax, 0x2d0 ; ret
0x000000000040eb21 : and eax, 0x30 ; call rax
0x000000000040ead9 : and eax, 0x30 ; call rdx
0x0000000000476973 : and eax, 0x38754000 ; ret
0x000000000046a42d : and eax, 0x39480026 ; retf
0x000000000043e3cd : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043e3ed : and eax, 0x3fc00 ; ret
0x000000000043e3ac : and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004712f0 : and eax, 0x48c03100 ; add esp, 8 ; ret
0x000000000047417f : and eax, 0x6894800 ; ret
0x0000000000417ff0 : and eax, 0x7cbe004a ; retf
0x000000000043e420 : and eax, 0x7ff80000 ; ret
0x0000000000474a63 : and eax, 0x89485300 ; ret
0x000000000046a339 : and eax, 0x894c0026 ; ret
0x000000000041ae86 : and eax, 0x950f4100 ; ret
0x0000000000442897 : and eax, 0xc ; cmp eax, 4 ; je 0x4428a8 ; ret
0x0000000000400ccf : and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000444496 : and eax, 0xffffffd0 ; or rax, 0xffffffffffffffff ; ret
0x000000000047893c : and eax, 2 ; sub eax, 1 ; ret
0x0000000000497ab5 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000415b4d : and ebp, edi ; pop rbx ; ret
0x0000000000442832 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x442845 ; ret
0x00000000004b9774 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000042fb25 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042f258 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000419f0b : and ecx, dword ptr [rax + 0x39] ; ret
0x000000000041fd2c : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041ddc2 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; retf 0x2a
0x00000000004168fc : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x00000000004c5729 : and edi, edx ; jmp rdi
0x000000000048b9c5 : and edx, ebp ; add r8b, bpl ; ret 0xf75e
0x000000000049185e : and esi, 0xe0837fff ; jg 0x491877 ; ret 0x5488
0x000000000049fe79 : and esp, ecx ; idiv edi ; nop dword ptr [rax] ; ret
0x000000000043fa39 : and esp, edi ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000043e9ee : and esp, esi ; mov rdi, rdx ; mov eax, r8d ; syscall
0x0000000000466fc7 : bnd je 0x466fd6 ; test edx, edx ; jne 0x466fc8 ; ret
0x000000000042cc1a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000426000 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000426010 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000426020 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000425ff0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000425f3f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042ce13 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000423876 : bsf eax, edx ; ret
0x00000000004239d2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000042cf30 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000004238c2 : bsf rax, rdx ; ret
0x0000000000465987 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000465c0b : bsr eax, esi ; add rax, rdi ; ret
0x0000000000465b19 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000465a15 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000465986 : bsr rax, rax ; add rax, rdi ; ret
0x0000000000465c0a : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000465b18 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000465a14 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x00000000004c8588 : call 0x114c8249
0x00000000004c34e8 : call 0x124c2d69
0x00000000004c3be8 : call 0x184c34a4
0x00000000004527d5 : call 0x1f54f2c7
0x000000000041386b : call 0x400322
0x000000000047394a : call 0x400352
0x000000000047394a : call 0x400357
0x00000000004655d2 : call 0x4018d2
0x0000000000409a6c : call 0x405d62
0x000000000044b39e : call 0x40768e
0x0000000000411a71 : call 0x40dd52
0x00000000004422fc : call 0x40eda2
0x000000000041adc8 : call 0x417012
0x000000000041bdd1 : call 0x418022
0x000000000041cf11 : call 0x4199b2
0x0000000000420471 : call 0x41c702
0x0000000000451949 : call 0x41dc02
0x0000000000441cc9 : call 0x41dfa2
0x0000000000469cae : call 0x4267b2
0x000000000040ff9f : call 0x42c212
0x0000000000415d1a : call 0x4427c2
0x0000000000415db1 : call 0x4427f2
0x000000000045dc98 : call 0x45a752
0x0000000000456d09 : call 0x463762
0x000000000044b9a5 : call 0x478472
0x000000000044b9a4 : call 0x478473
0x000000000048ccfc : call 0x478fc2
0x00000000004195ba : call 0xffffffff83466044
0x00000000004ba91a : call 0xffffffffab597410
0x00000000004692ed : call 0xffffffffc37fdbfa
0x0000000000485d1a : call 0xffffffffc381a924
0x0000000000466c1c : call 0xffffffffc3a2ad82
0x000000000044fb75 : call 0xffffffffc3f40ac6
0x0000000000467c1c : call 0xffffffffc40dc455
0x0000000000426d17 : call 0xffffffffc412f668
0x00000000004237e7 : call 0xffffffffc43ac138
0x0000000000403d3e : call 2
0x00000000004a38cf : call qword ptr [rax + 0x20fff91c]
0x00000000004a36b7 : call qword ptr [rax + 0x20fff91f]
0x00000000004bdc63 : call qword ptr [rax - 0x1f0002ac]
0x00000000004a368b : call qword ptr [rax - 0x1f00072e]
0x00000000004a3637 : call qword ptr [rax - 0x1f000735]
0x00000000004a3273 : call qword ptr [rax - 0x1f000784]
0x00000000004bdcb3 : call qword ptr [rax - 0x2f000244]
0x00000000004bdca3 : call qword ptr [rax - 0x2f00024d]
0x00000000004bdc93 : call qword ptr [rax - 0x2f000256]
0x00000000004bdc83 : call qword ptr [rax - 0x2f00025f]
0x000000000040f5fe : call qword ptr [rax]
0x000000000043813d : call qword ptr [rbx]
0x000000000049a60e : call qword ptr [rcx]
0x000000000046a2b4 : call qword ptr [rdi]
0x00000000004a37a3 : call qword ptr [rdx + 0x22fff91a]
0x00000000004a3783 : call qword ptr [rdx]
0x00000000004a36ff : call qword ptr [rsi + 0x26fff91e]
0x0000000000492802 : call qword ptr [rsi]
0x0000000000476e5c : call r11
0x0000000000400bbb : call r12
0x000000000040e130 : call r14
0x0000000000403691 : call r15
0x000000000046292b : call r8
0x0000000000473671 : call r9
0x0000000000400961 : call rax
0x0000000000402d3d : call rbx
0x000000000040565a : call rcx
0x0000000000403692 : call rdi
0x000000000040eade : call rdx
0x000000000040e131 : call rsi
0x0000000000400bbc : call rsp
0x0000000000443910 : cdq ; add byte ptr [rdi - 0x76b6ff94], bl ; retf
0x000000000044f234 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000004ba820 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000041f1d7 : cdq ; mov ch, 0x2a ; add byte ptr [rax - 0x36], ah ; add r9b, bpl ; retf 0xfffd
0x00000000004c6f39 : cdq ; std ; call rcx
0x0000000000432c2b : cdq ; test byte ptr [rcx], ch ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000485bbe : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000041bd83 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000004c25b8 : clc ; add al, bh ; call qword ptr [rcx]
0x0000000000458fba : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000404ab0 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7af0a707], al ; retf 0xfffb
0x000000000045dd8d : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000041ebbc : clc ; add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x000000000040d6cc : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000043e07c : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000047cc7c : clc ; add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x0000000000425dc8 : clc ; add rax, rcx ; ret
0x00000000004a368a : clc ; call qword ptr [rax - 0x1f00072e]
0x00000000004a3636 : clc ; call qword ptr [rax - 0x1f000735]
0x00000000004a3272 : clc ; call qword ptr [rax - 0x1f000784]
0x00000000004a315a : clc ; call qword ptr [rax]
0x00000000004c3fca : clc ; call qword ptr [rbx]
0x00000000004a341a : clc ; call qword ptr [rcx]
0x00000000004c261a : clc ; call qword ptr [rdi]
0x00000000004c38da : clc ; call qword ptr [rdx]
0x00000000004a3462 : clc ; call qword ptr [rsi]
0x00000000004a323e : clc ; call rax
0x00000000004a3426 : clc ; call rcx
0x00000000004a346e : clc ; call rdi
0x00000000004a3442 : clc ; call rsi
0x00000000004c273a : clc ; call rsp
0x000000000042fac9 : clc ; cmp rcx, rax ; jne 0x42fafb ; xor eax, eax ; ret
0x000000000042fac8 : clc ; cmp rcx, rax ; jne 0x42fafc ; xor eax, eax ; ret
0x00000000004746d0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000421270 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000412516 : clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000040182b : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000045510b : clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000456732 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000047a73d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004c21b8 : clc ; fcomi st(7) ; jmp qword ptr [rbx]
0x00000000004a326e : clc ; inc dword ptr [rax + 0x7b] ; clc ; call qword ptr [rax - 0x1f000784]
0x00000000004a3156 : clc ; inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x00000000004a350a : clc ; inc dword ptr [rax - 0x12] ; clc ; call rax
0x00000000004a3506 : clc ; inc dword ptr [rax - 0x14] ; clc ; inc dword ptr [rax - 0x12] ; clc ; call rax
0x00000000004a3696 : clc ; inc dword ptr [rax - 0x2f00072a] ; xlatb ; clc ; jmp qword ptr [rax]
0x00000000004a3642 : clc ; inc dword ptr [rax - 0x2f000731] ; sar al, 1 ; jmp qword ptr [rax]
0x00000000004a3686 : clc ; inc dword ptr [rax - 0x2f] ; clc ; call qword ptr [rax - 0x1f00072e]
0x00000000004a3632 : clc ; inc dword ptr [rax - 0x36] ; clc ; call qword ptr [rax - 0x1f000735]
0x00000000004a32c6 : clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a3576 : clc ; inc dword ptr [rax] ; in al, 0xf8 ; jmp rax
0x00000000004a35f6 : clc ; inc dword ptr [rax] ; jrcxz 0x4a35f8 ; jmp rax
0x00000000004a33c2 : clc ; inc dword ptr [rax] ; mov esi, 0xbef0fff8 ; clc ; jmp rax
0x00000000004a339a : clc ; inc dword ptr [rax] ; stosb byte ptr [rdi], al ; clc ; jmp qword ptr [rax]
0x00000000004a362e : clc ; inc dword ptr [rax] ; xabort -1 ; retf 0xfff8
0x000000000044e4d9 : clc ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004a32b6 : clc ; inc eax ; clc ; call rax
0x00000000004a3392 : clc ; inc eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp rax
0x00000000004a34da : clc ; inc eax ; ret
0x00000000004a3372 : clc ; inc eax ; sahf ; clc ; jmp rax
0x00000000004a328e : clc ; inc eax ; test eax, edi ; call qword ptr [rax]
0x0000000000449cbe : clc ; jg 0x449c4d ; ret 0x5c77
0x00000000004a34c2 : clc ; jmp qword ptr [rax + 0x20fff8c0]
0x00000000004a34ca : clc ; jmp qword ptr [rax + 0x20fff8c1]
0x00000000004a366a : clc ; jmp qword ptr [rax - 0x1f000724]
0x00000000004a3286 : clc ; jmp qword ptr [rax]
0x00000000004a3456 : clc ; jmp qword ptr [rsi - 0x3d]
0x00000000004c3d2a : clc ; jmp qword ptr [rsi]
0x00000000004a315e : clc ; jmp rax
0x00000000004c396a : clc ; jmp rbx
0x00000000004c2eba : clc ; jmp rsp
0x000000000042c347 : clc ; jne 0x42c221 ; ret
0x000000000049c520 : clc ; leave ; ret
0x0000000000405544 : clc ; loop 0x40554e ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004b9482 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004315a7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431f17 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349b7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432117 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434927 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432317 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434897 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004315c3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043580c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000049c5b8 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000043f2c9 : clc ; mov rsi, rdx ; mov eax, 5 ; syscall
0x0000000000491842 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004a3242 : clc ; push qword ptr [rax + 0x68] ; clc ; call qword ptr [rax]
0x00000000004a3262 : clc ; push qword ptr [rax + 0x75] ; clc ; call qword ptr [rax]
0x00000000004a32b2 : clc ; push qword ptr [rax - 0x3f0007c1] ; clc ; call rax
0x00000000004a328a : clc ; push qword ptr [rax - 0x7c] ; clc ; inc eax ; test eax, edi ; call qword ptr [rax]
0x00000000004a323a : clc ; push qword ptr [rax] ; clc ; call rax
0x00000000004a3556 : clc ; push qword ptr [rax] ; in al, 0xf8 ; call qword ptr [rax]
0x00000000004a35da : clc ; push qword ptr [rax] ; in eax, 0xf8 ; call qword ptr [rax]
0x00000000004a325a : clc ; push qword ptr [rax] ; jb 0x4a325c ; call rax
0x00000000004a35f2 : clc ; push qword ptr [rax] ; loope 0x4a35f8 ; inc dword ptr [rax] ; jrcxz 0x4a35fc ; jmp rax
0x00000000004a358e : clc ; push qword ptr [rax] ; loopne 0x4a3594 ; push rax ; loope 0x4a3598 ; call rax
0x00000000004a353a : clc ; push qword ptr [rax] ; out 0xf8, al ; call qword ptr [rax]
0x00000000004a34d6 : clc ; push qword ptr [rax] ; ret
0x00000000004a31e2 : clc ; push qword ptr [rax] ; sbb eax, 0x1eb0fff8 ; clc ; jmp rax
0x0000000000410bfa : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000415ba0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000004429b1 : clc ; push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415b48 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x00000000004a340e : clc ; push qword ptr [rcx - 0x3e] ; clc ; push rcx ; ret 0xfff8
0x0000000000415025 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000046abbc : clc ; push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a32c2 : clc ; push rax ; clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a3592 : clc ; push rax ; loope 0x4a3594 ; call rax
0x00000000004a355e : clc ; push rax ; out 0xf8, eax ; call rax
0x00000000004a3412 : clc ; push rcx ; ret 0xfff8
0x00000000004a345a : clc ; push rsi ; ret
0x00000000004167f2 : clc ; ret
0x0000000000483b85 : clc ; retf
0x000000000042ade4 : clc ; rol ch, 1 ; jns 0x42adc5 ; retf 0xead3
0x000000000042af34 : clc ; rol ch, 1 ; jns 0x42af15 ; retf 0xead3
0x000000000042b084 : clc ; rol ch, 1 ; jns 0x42b065 ; retf 0xead3
0x000000000042b1d4 : clc ; rol ch, 1 ; jns 0x42b1b5 ; retf 0xead3
0x000000000042b324 : clc ; rol ch, 1 ; jns 0x42b305 ; retf 0xead3
0x000000000042b474 : clc ; rol ch, 1 ; jns 0x42b455 ; retf 0xead3
0x000000000042b5c4 : clc ; rol ch, 1 ; jns 0x42b5a5 ; retf 0xead3
0x000000000042b714 : clc ; rol ch, 1 ; jns 0x42b6f5 ; retf 0xead3
0x000000000042b864 : clc ; rol ch, 1 ; jns 0x42b845 ; retf 0xead3
0x000000000042b9b4 : clc ; rol ch, 1 ; jns 0x42b995 ; retf 0xead3
0x000000000042bb04 : clc ; rol ch, 1 ; jns 0x42bae5 ; retf 0xead3
0x000000000042bc54 : clc ; rol ch, 1 ; jns 0x42bc35 ; retf 0xead3
0x000000000042bda4 : clc ; rol ch, 1 ; jns 0x42bd85 ; retf 0xead3
0x000000000042bef4 : clc ; rol ch, 1 ; jns 0x42bed5 ; retf 0xead3
0x000000000042c044 : clc ; rol ch, 1 ; jns 0x42c025 ; retf 0xead3
0x00000000004961e4 : clc ; rol ch, 1 ; jns 0x4961c5 ; retf 0xead3
0x0000000000496364 : clc ; rol ch, 1 ; jns 0x496345 ; retf 0xead3
0x00000000004964e4 : clc ; rol ch, 1 ; jns 0x4964c5 ; retf 0xead3
0x0000000000496664 : clc ; rol ch, 1 ; jns 0x496645 ; retf 0xead3
0x00000000004967e4 : clc ; rol ch, 1 ; jns 0x4967c5 ; retf 0xead3
0x0000000000496964 : clc ; rol ch, 1 ; jns 0x496945 ; retf 0xead3
0x0000000000496ae4 : clc ; rol ch, 1 ; jns 0x496ac5 ; retf 0xead3
0x0000000000496c64 : clc ; rol ch, 1 ; jns 0x496c45 ; retf 0xead3
0x0000000000496de4 : clc ; rol ch, 1 ; jns 0x496dc5 ; retf 0xead3
0x0000000000496f64 : clc ; rol ch, 1 ; jns 0x496f45 ; retf 0xead3
0x00000000004970e4 : clc ; rol ch, 1 ; jns 0x4970c5 ; retf 0xead3
0x0000000000497264 : clc ; rol ch, 1 ; jns 0x497245 ; retf 0xead3
0x00000000004973e4 : clc ; rol ch, 1 ; jns 0x4973c5 ; retf 0xead3
0x0000000000497564 : clc ; rol ch, 1 ; jns 0x497545 ; retf 0xead3
0x00000000004976e4 : clc ; rol ch, 1 ; jns 0x4976c5 ; retf 0xead3
0x0000000000478e9a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000047810d : clc ; std ; jbe 0x47811c ; ret
0x000000000044eec5 : clc ; syscall
0x000000000043e3cf : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e3ef : cld ; add eax, dword ptr [rax] ; ret
0x00000000004c7fba : cld ; call qword ptr [rax]
0x00000000004c7fd2 : cld ; call qword ptr [rdx]
0x000000000045c9db : cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x000000000044e0c9 : cld ; dec dword ptr [rax - 0x75] ; jl 0x44e0fb ; or al, ch ; retf
0x000000000047144e : cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x000000000043e47e : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e3ae : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c7d12 : cld ; jmp qword ptr [rax]
0x00000000004ba205 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4ba1d4 ; retf
0x0000000000431d32 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431f35 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432135 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432335 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043581e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000403a36 : cld ; mov eax, 3 ; syscall
0x0000000000432868 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000431966 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b46 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431b46 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ac6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431d26 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434a46 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431786 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434bc6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004917fc : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004c3fdc : cld ; pop rsp ; add byte ptr [rax], al ; and ch, bl ; clc ; call qword ptr [rax]
0x0000000000426798 : cld ; ret
0x00000000004b8923 : cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004c0cdc : cld ; sub dword ptr [rax], eax ; add byte ptr [rax - 0x41], dh ; cmc ; call qword ptr [rcx]
0x00000000004b8936 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000041fd29 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041ff09 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x0000000000467486 : cli ; add al, byte ptr [rbp + 0x29] ; in eax, 0x29 ; retf 0x8d41
0x000000000041da5b : cli ; add byte ptr [rax - 0x418aff94], ch ; ret
0x000000000047c849 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000004140bf : cli ; add ch, al ; pop rdx ; retf
0x00000000004674ca : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000458d2f : cli ; add ch, byte ptr [rcx] ; retf 0xd189
0x0000000000489503 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000048952c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000045c59c : cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x00000000004105d8 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043e11c : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x000000000044947f : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000474ae6 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000475353 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043dc41 : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043583c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047b6bc : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000488562 : cli ; and al, 0 ; ret
0x00000000004ba919 : cli ; call 0xffffffffab597411
0x00000000004c646a : cli ; call rdx
0x00000000004c50aa : cli ; call rsi
0x0000000000481434 : cli ; dec dword ptr [rdi] ; retf 0x8d89
0x000000000043282b : cli ; jg 0x43283e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000004357f7 : cli ; jg 0x43580a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043dc01 : cli ; jg 0x43dc13 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043dd86 : cli ; jg 0x43dd98 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004c5552 : cli ; jmp qword ptr [rax]
0x00000000004c6a62 : cli ; jmp qword ptr [rdx]
0x00000000004c572a : cli ; jmp rdi
0x00000000004c51e2 : cli ; jmp rdx
0x00000000004c674a : cli ; jmp rsi
0x00000000004c5e02 : cli ; jmp rsp
0x0000000000432138 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004261a8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000047b3f2 : cli ; or byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x77] ; retf
0x000000000047b1a6 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000489eb8 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004bada1 : cli ; push 0x6e ; ja 0x4bad2e ; ret 0x48f
0x0000000000441ba2 : cli ; ret
0x00000000004b9845 : cli ; ret 0xac65
0x00000000004427bb : cli ; setae al ; ret
0x00000000004b96f0 : cli ; test bh, dl ; retf 0xdf7f
0x00000000004b848a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004c92ec : cmc ; add al, byte ptr [rax] ; ret
0x0000000000495e18 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041dda0 : cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004bf71a : cmc ; call qword ptr [rax]
0x00000000004bff42 : cmc ; call qword ptr [rcx]
0x00000000004c064a : cmc ; call qword ptr [rdx]
0x00000000004c0562 : cmc ; call qword ptr [rsi]
0x00000000004c0f3a : cmc ; call rdx
0x00000000004c0412 : cmc ; jmp qword ptr [rax]
0x00000000004bfd72 : cmc ; jmp qword ptr [rcx]
0x00000000004bf57a : cmc ; jmp qword ptr [rsi]
0x00000000004bb1c9 : cmc ; mov ch, 0xab ; ret
0x0000000000400966 : cmc ; mov cl, 0x2c ; add byte ptr [rcx], al ; ret
0x0000000000434aca : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004319be : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043d193 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004b8077 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000047a9ed : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043d197 : cmc ; sub eax, edx ; ret
0x00000000004ba805 : cmc ; xlatb ; ret 0x4e27
0x000000000049c927 : cmova eax, edx ; ret
0x0000000000467331 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000416ff9 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000416ff8 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000043f25b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000464f41 : cmove eax, ecx ; ret
0x000000000043f540 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000421273 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000425d22 : cmove eax, edx ; ret
0x0000000000464f40 : cmove r8, rcx ; ret
0x000000000043f25a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000046b290 : cmove rax, r9 ; ret
0x0000000000421272 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000425d21 : cmove rax, rdx ; ret
0x0000000000414b3b : cmovg eax, ecx ; test rdx, rdx ; jne 0x414b39 ; ret
0x0000000000463b3b : cmovg eax, ecx ; test rdx, rdx ; jne 0x463b39 ; ret
0x00000000004135d3 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004212f3 : cmovne eax, edx ; ret
0x00000000004212f2 : cmovne rax, rdx ; ret
0x0000000000425d7d : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x00000000004566fd : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x0000000000446ccc : cmovs eax, edx ; ret
0x0000000000419d30 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000049c858 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000489b30 : cmovs edi, dword ptr [rcx] ; retf 0xf48
0x00000000004c1fd5 : cmp al, 0 ; add byte ptr [rax], ch ; retf
0x00000000004c1f8d : cmp al, 0 ; add byte ptr [rax], dh ; retf 0xfff7
0x0000000000440471 : cmp al, 0x24 ; call rbx
0x000000000049de4b : cmp al, 0x24 ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000040e1ad : cmp al, 0x33 ; call rax
0x00000000004b9480 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000046193d : cmp al, 0x4b ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004b8383 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004bae6b : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x00000000004c891c : cmp al, 0xa6 ; add byte ptr [rax], al ; adc byte ptr [rsi], dh ; std ; call rsp
0x0000000000441c60 : cmp al, 0xc3 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000048a86b : cmp al, 9 ; ja 0x489470 ; jmp 0x48a849
0x000000000048daa3 : cmp al, 9 ; ja 0x48c690 ; jmp 0x48da81
0x00000000004911eb : cmp al, 9 ; ja 0x48f4f0 ; jmp 0x4911c9
0x000000000043d656 : cmp al, byte ptr [rsi - 1] ; jne 0x43d67c ; xor eax, eax ; ret
0x0000000000425ff6 : cmp al, dh ; ret
0x0000000000425ff5 : cmp al, r14b ; ret
0x00000000004c8b41 : cmp bh, ch ; call rcx
0x0000000000453203 : cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000004c7579 : cmp bl, bh ; jmp qword ptr [rdx]
0x0000000000487099 : cmp bl, ch ; ret 0x8148
0x000000000042ca53 : cmp bl, dh ; ret
0x000000000041027b : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000045df76 : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000401423 : cmp byte ptr [rax + 0x39], cl ; ret 0x2773
0x0000000000426b5f : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000426037 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000043fb57 : cmp byte ptr [rax - 0x75], cl ; jl 0x43fb88 ; or byte ptr [rax + 0x29], cl ; ret
0x0000000000440424 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x000000000041640e : cmp byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x000000000041027c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000459aea : cmp byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004830a7 : cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000426026 : cmp byte ptr [rax], ah ; ret
0x0000000000414ff3 : cmp byte ptr [rax], al ; je 0x415004 ; ret
0x000000000049c105 : cmp byte ptr [rax], al ; je 0x49c17b ; add rsp, 0x18 ; ret
0x00000000004212f0 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000426016 : cmp byte ptr [rax], dl ; ret
0x0000000000426015 : cmp byte ptr [rax], r10b ; ret
0x0000000000426025 : cmp byte ptr [rax], r12b ; ret
0x00000000004212ef : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004c2874 : cmp byte ptr [rbx + 0x1b70307], al ; ret
0x00000000004c6be5 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004c6c1d : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c6bad : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000043ec22 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000047366b : cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x00000000004798c9 : cmp byte ptr [rbx - 0x7ad7dbbc], cl ; ror byte ptr [rdi], 0x84 ; retf 1
0x0000000000461abd : cmp byte ptr [rbx], cl ; jmp rax
0x0000000000464a17 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000476e36 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000004c7fb8 : cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x0000000000414fb8 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042ef9d : cmp byte ptr [rdi], dl ; ret
0x000000000042fab0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fa99 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fa82 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e53e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000040ef8f : cmp byte ptr [rdx], cl ; add byte ptr [rax + 0x63], cl ; retf 0x894c
0x00000000004be230 : cmp byte ptr [rsi + rdi*8], al ; jmp rax
0x000000000046b28c : cmp byte ptr [rsi - 2], 0x3a ; cmove rax, r9 ; ret
0x0000000000449b33 : cmp byte ptr [rsi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004c5448 : cmp byte ptr [rsi], dl ; cli ; jmp rdx
0x000000000045d75f : cmp ch, cl ; retf
0x000000000040d90d : cmp ch, cl ; retf 0xfffb
0x000000000041a830 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000481d8b : cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x0000000000473bbe : cmp cl, byte ptr [rax - 0x77] ; retf
0x0000000000420be9 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x21b
0x000000000046b28f : cmp cl, byte ptr [rcx + 0xf] ; rol ebx, 0x4c ; mov eax, ecx ; ret
0x0000000000430161 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x00000000004302b1 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x0000000000430401 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x0000000000430551 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x00000000004306a1 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x00000000004307f1 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x0000000000430941 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x0000000000430a91 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x0000000000430be1 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x0000000000430d31 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x0000000000430e81 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x0000000000430fd1 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x0000000000431121 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x0000000000431271 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x00000000004313c1 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x0000000000432eaa : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000043302a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x00000000004331aa : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000043332a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x00000000004334aa : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000043362a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x00000000004337aa : cmp cl, byte ptr [rdi] ; retf 0xf07
0x000000000043392a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x0000000000433aaa : cmp cl, byte ptr [rdi] ; retf 0xf09
0x0000000000433c2a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x0000000000433daa : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x0000000000433f2a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x00000000004340aa : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000043422a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x00000000004343aa : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000004bb246 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000004895c6 : cmp cl, ch ; ret
0x00000000004be5f9 : cmp dh, ah ; call qword ptr [rdx]
0x000000000046b25e : cmp dh, byte ptr [rbp + 4] ; test ecx, ecx ; jne 0x46b21a ; xor eax, eax ; ret
0x000000000043583b : cmp dl, 1 ; jb 0x43584d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043dc40 : cmp dl, 1 ; jb 0x43dc4e ; mov byte ptr [rdi], cl ; ret
0x000000000043ddba : cmp dl, 1 ; jb 0x43ddc8 ; mov byte ptr [rdi], cl ; ret
0x00000000004bdcd0 : cmp dl, al ; std ; ljmp ptr [rax] ; ret
0x00000000004649e8 : cmp dword ptr [rax + 0x30], 0 ; je 0x4649f6 ; ret
0x00000000004345dc : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000450a7e : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x0000000000414ff1 : cmp dword ptr [rdi + 0x38], 0 ; je 0x415006 ; ret
0x00000000004429a0 : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x0000000000442751 : cmp dword ptr [rdx], 0x1d ; add byte ptr [rax], al ; ret
0x000000000049c924 : cmp dword ptr [rsi + 8], ecx ; cmova eax, edx ; ret
0x000000000043f493 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00000000004746cf : cmp eax, -1 ; cmove rax, rdx ; ret
0x0000000000415024 : cmp eax, -1 ; je 0x415039 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415b47 : cmp eax, -1 ; je 0x415b58 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464bfa : cmp eax, -1 ; je 0x464c0b ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464c3e : cmp eax, -1 ; je 0x464c4f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000410bf9 : cmp eax, -1 ; jne 0x410c06 ; pop rbx ; ret
0x0000000000415b9f : cmp eax, -1 ; jne 0x415b90 ; pop rbx ; ret
0x00000000004429b0 : cmp eax, -1 ; jne 0x4429b0 ; xor eax, eax ; leave ; ret
0x000000000047810c : cmp eax, -3 ; jbe 0x47811d ; ret
0x000000000047adb9 : cmp eax, 0x251c06 ; call rax
0x000000000047ac7c : cmp eax, 0x251d43 ; jmp rax
0x00000000004b876b : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000040dd09 : cmp eax, 0xfffff000 ; ja 0x40dd38 ; ret
0x000000000043f286 : cmp eax, 0xfffff000 ; ja 0x43f298 ; ret
0x000000000043f2d5 : cmp eax, 0xfffff000 ; ja 0x43f2e8 ; ret
0x000000000043f464 : cmp eax, 0xfffff000 ; ja 0x43f4a8 ; ret
0x000000000044fa91 : cmp eax, 0xfffff000 ; ja 0x44faa8 ; ret
0x000000000046a908 : cmp eax, 0xfffff000 ; ja 0x46a920 ; pop rbx ; ret
0x000000000046ac96 : cmp eax, 0xfffff000 ; ja 0x46aca8 ; ret
0x000000000046aceb : cmp eax, 0xfffff000 ; ja 0x46ad00 ; ret
0x000000000043e4cb : cmp eax, 2 ; je 0x43e4df ; xor eax, eax ; ret
0x000000000044289a : cmp eax, 4 ; je 0x4428a5 ; ret
0x0000000000413025 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x413038 ; movzx eax, byte ptr [rax] ; ret
0x0000000000441211 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x0000000000474718 : cmp eax, dword ptr [rsi + rdx] ; jae 0x4746c8 ; xor eax, eax ; ret
0x00000000004ba637 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004168f9 : cmp eax, ecx ; jae 0x416927 ; movzx eax, byte ptr [rax] ; ret
0x000000000043d673 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004782e4 : cmp eax, esi ; je 0x4782f4 ; ret
0x000000000043e95f : cmp ebp, eax ; retf
0x0000000000442836 : cmp ebx, 0xa ; je 0x442841 ; ret
0x00000000004717c1 : cmp ecx, dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000046d71e : cmp ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rsp + 0x48], 0x83 ; ret
0x0000000000447d79 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000046034b : cmp ecx, dword ptr [rbx] ; jmp rax
0x0000000000467330 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000464f3e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042facb : cmp ecx, eax ; jne 0x42faf9 ; xor eax, eax ; ret
0x0000000000473ff6 : cmp ecx, edx ; jne 0x473fd5 ; ret
0x000000000045a515 : cmp edi, ecx ; ja 0x45a500 ; mov eax, r8d ; ret
0x000000000046ae9e : cmp edi, edx ; ja 0x46aecd ; ret
0x000000000047c848 : cmp edx, 0 ; mov eax, edx ; jle 0x47c860 ; ret
0x000000000041da5a : cmp edx, 0x6ca800 ; jne 0x41da29 ; ret
0x0000000000474008 : cmp edx, eax ; jne 0x473fb2 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000426768 : cmp edx, ecx ; jne 0x426755 ; ret
0x00000000004427ba : cmp edx, edi ; setae al ; ret
0x0000000000466fc6 : cmp edx, esi ; je 0x466fd7 ; test edx, edx ; jne 0x466fc9 ; ret
0x000000000041efb1 : cmp edx, esi ; sub al, byte ptr [rax] ; test rax, rax ; je 0x41efc5 ; call rax
0x0000000000416939 : cmp esi, -1 ; setne al ; neg eax ; ret
0x000000000044d545 : cmp esi, 3 ; je 0x44d556 ; pop rbx ; ret
0x00000000004ba804 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000464c9a : cmp esi, ecx ; jb 0x464c97 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000415bda : cmp esi, ecx ; jne 0x415bd7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004649e7 : cmp qword ptr [rax + 0x30], 0 ; je 0x4649f7 ; ret
0x0000000000414ff0 : cmp qword ptr [rdi + 0x38], 0 ; je 0x415007 ; ret
0x000000000049c923 : cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000042ca52 : cmp r11b, r14b ; ret
0x0000000000442835 : cmp r11d, 0xa ; je 0x442842 ; ret
0x0000000000474717 : cmp r8, qword ptr [rsi + rdx] ; jae 0x4746c9 ; xor eax, eax ; ret
0x000000000040dd08 : cmp rax, -0x1000 ; ja 0x40dd39 ; ret
0x000000000043f285 : cmp rax, -0x1000 ; ja 0x43f299 ; ret
0x000000000043f2d4 : cmp rax, -0x1000 ; ja 0x43f2e9 ; ret
0x000000000043f463 : cmp rax, -0x1000 ; ja 0x43f4a9 ; ret
0x000000000044fa90 : cmp rax, -0x1000 ; ja 0x44faa9 ; ret
0x000000000046a907 : cmp rax, -0x1000 ; ja 0x46a921 ; pop rbx ; ret
0x000000000046ac95 : cmp rax, -0x1000 ; ja 0x46aca9 ; ret
0x000000000046acea : cmp rax, -0x1000 ; ja 0x46ad01 ; ret
0x00000000004746ce : cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000047810b : cmp rax, -3 ; jbe 0x47811e ; ret
0x0000000000413024 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x413039 ; movzx eax, byte ptr [rax] ; ret
0x00000000004168f8 : cmp rax, rcx ; jae 0x416928 ; movzx eax, byte ptr [rax] ; ret
0x00000000004782e3 : cmp rax, rsi ; je 0x4782f5 ; ret
0x0000000000464f3d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042faca : cmp rcx, rax ; jne 0x42fafa ; xor eax, eax ; ret
0x0000000000473ff5 : cmp rcx, rdx ; jne 0x473fd6 ; ret
0x000000000046ae9d : cmp rdi, rdx ; ja 0x46aece ; ret
0x0000000000474007 : cmp rdx, r8 ; jne 0x473fb3 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000426767 : cmp rdx, rcx ; jne 0x426756 ; ret
0x0000000000426766 : cmp rdx, rcx ; jne 0x426757 ; ret
0x00000000004427b9 : cmp rdx, rdi ; setae al ; ret
0x0000000000464c99 : cmp rsi, rcx ; jb 0x464c98 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000415bd9 : cmp rsi, rcx ; jne 0x415bd8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000496417 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496717 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497617 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c891d : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; adc byte ptr [rsi], dh ; std ; call rsp
0x000000000041c706 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000425ad5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000497317 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000042f549 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004a3391 : cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; inc eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp rax
0x000000000040ef8e : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp byte ptr [rdx], cl ; add byte ptr [rax + 0x63], cl ; retf 0x894c
0x00000000004005da : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e1 ; ret
0x00000000004b8836 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4b8802 ; mov ecx, 0x5b92ac50 ; retf
0x000000000042a076 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497017 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496d17 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004ba951 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000409ab6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x00000000004a3395 : cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp rax
0x00000000004b831f : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x0000000000441ff5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov edi, 0x8b48fffd ; jge 0x442005 ; call rbx
0x000000000047a9e1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004c6f38 : cqo ; std ; call rcx
0x000000000041ac63 : cwde ; add al, bpl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000412f1f : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000049b414 : cwde ; add rax, r8 ; jmp rax
0x00000000004c5728 : cwde ; and edi, edx ; jmp rdi
0x0000000000442444 : cwde ; mov eax, 3 ; syscall
0x0000000000414d4c : cwde ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000041dbd8 : cwde ; retf
0x0000000000439371 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000041b786 : dec byte ptr [r8 - 0x75] ; ret
0x000000000048e205 : dec byte ptr [r8 - 0x77] ; fisttp qword ptr [rax - 0x77] ; retf
0x0000000000439372 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000479ed6 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x000000000041b804 : dec byte ptr [rax - 0x73] ; ret
0x000000000045d0ec : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffffb60 ; call rax
0x000000000041b787 : dec byte ptr [rax - 0x75] ; ret
0x000000000048e206 : dec byte ptr [rax - 0x77] ; fisttp qword ptr [rax - 0x77] ; retf
0x00000000004656cd : dec byte ptr [rax - 0x77] ; ret
0x000000000040e36a : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000047e42d : dec dword ptr [r13 + r9*4 + 0x7c] ; ret
0x0000000000482f83 : dec dword ptr [r8 + 0x39] ; ret
0x0000000000478109 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x478120 ; ret
0x000000000041afbc : dec dword ptr [r9 - 0x7b] ; ret 0x840f
0x0000000000410599 : dec dword ptr [rax + 0x29] ; ret
0x00000000004394b2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000473c01 : dec dword ptr [rax + 0x29] ; ret 0x48e9
0x000000000045e756 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000041911d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x000000000041d79d : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x00000000004187d5 : dec dword ptr [rax + 0x39] ; ret
0x0000000000480c54 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000485a4d : dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000004708f5 : dec dword ptr [rax + 0x39] ; ret 0xed75
0x000000000047485a : dec dword ptr [rax + 0x63] ; ret
0x000000000045e87e : dec dword ptr [rax + 0x63] ; retf
0x000000000046a8fc : dec dword ptr [rax + 0x63] ; sti ; mov eax, 3 ; syscall
0x000000000046250b : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462c5f : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x0000000000465c09 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x00000000004746d1 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000421271 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000045961e : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000412517 : dec dword ptr [rax + 0xf] ; ret 0x938b
0x00000000004105fc : dec dword ptr [rax + 1] ; ret
0x000000000047d997 : dec dword ptr [rax + 1] ; ret 0x3948
0x00000000004bddf7 : dec dword ptr [rax + rbx*8] ; std ; jmp rsp
0x000000000045d6a6 : dec dword ptr [rax - 0x39] ; ret
0x000000000045c9dc : dec dword ptr [rax - 0x39] ; ret 0xffb0
0x0000000000411787 : dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000480bbe : dec dword ptr [rax - 0x39] ; ret 0xfffe
0x000000000043ec8c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000049ae51 : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x00000000004190f3 : dec dword ptr [rax - 0x73] ; adc byte ptr [rax + 0x39], cl ; retf 0x2173
0x000000000041d772 : dec dword ptr [rax - 0x73] ; adc byte ptr [rax + 0x39], cl ; retf 0x2273
0x000000000046975e : dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x39] ; ret
0x0000000000478b9d : dec dword ptr [rax - 0x73] ; insb byte ptr [rdi], dx ; retf 0x4df0
0x00000000004748c5 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000410278 : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000481d88 : dec dword ptr [rax - 0x75] ; cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x00000000004401ad : dec dword ptr [rax - 0x75] ; jge 0x4401b7 ; call rbx
0x0000000000440460 : dec dword ptr [rax - 0x75] ; jge 0x44046a ; call rbx
0x0000000000441ff8 : dec dword ptr [rax - 0x75] ; jge 0x442002 ; call rbx
0x000000000043facb : dec dword ptr [rax - 0x75] ; jl 0x43fafb ; or al, ch ; retf 0xfde4
0x000000000044e0ca : dec dword ptr [rax - 0x75] ; jl 0x44e0fa ; or al, ch ; retf
0x00000000004791c7 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000041ba7f : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x0000000000414001 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x000000000047856c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000483dc2 : dec dword ptr [rax - 0x77] ; add cl, byte ptr [rax + 1] ; ret
0x0000000000488597 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004268d8 : dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000045f2ed : dec dword ptr [rax - 0x77] ; fucompi st(0) ; retf 0x72
0x000000000049ec4a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000040182c : dec dword ptr [rax - 0x77] ; ret
0x000000000046ae8e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x0000000000483e0f : dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000041dd41 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000044f912 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000045e71a : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000466546 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000483699 : dec dword ptr [rax - 0x77] ; ret 0x89e9
0x0000000000455347 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000046df60 : dec dword ptr [rax - 0x77] ; ret 0x8be9
0x000000000045fee6 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000004826cd : dec dword ptr [rax - 0x77] ; ret 0xc6e9
0x00000000004211ee : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000046b453 : dec dword ptr [rax - 0x77] ; ret 0xf0eb
0x0000000000402c58 : dec dword ptr [rax - 0x77] ; ret 0xf4e9
0x00000000004591ad : dec dword ptr [rax - 0x77] ; retf
0x000000000047d5d5 : dec dword ptr [rax - 0x77] ; retf 0x1b8
0x000000000044810e : dec dword ptr [rax - 0x77] ; retf 0x8440
0x00000000004564b1 : dec dword ptr [rax - 0x77] ; retf 0x8948
0x000000000049d994 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x00000000004784d1 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000487908 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000463dde : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x0000000000484204 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], cl ; test bh, bl ; retf 0xffff
0x0000000000468f89 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x5a], 0xbf ; ret
0x0000000000485bbb : dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000047810a : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x47811f ; ret
0x0000000000453dc1 : dec dword ptr [rax - 0x7d] ; jge 0x453dfe ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040421c : dec dword ptr [rax - 0x7d] ; ret
0x00000000004190cf : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000448ca2 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000470cff : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000470ced : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000457124 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x000000000046a266 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x0000000000470d8b : dec dword ptr [rax - 0x7d] ; ret 0x8908
0x00000000004855b2 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x0000000000453206 : dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000004345e0 : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000046cab0 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000049d9ab : dec dword ptr [rbp + rcx*4 + 0x42] ; add dword ptr [rcx - 0x77], ecx ; retf 0xb9e9
0x000000000047e42e : dec dword ptr [rbp + rcx*4 + 0x7c] ; ret
0x000000000049b489 : dec dword ptr [rbp - 0x75] ; adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x0000000000478c9c : dec dword ptr [rbp - 0x75] ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x45f8
0x000000000044066e : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000046de2f : dec dword ptr [rbp - 0x77] ; imul ecx ; retf
0x000000000041b3bf : dec dword ptr [rbx + 0x2af43e15] ; add dh, dh ; ret 0xf02
0x00000000004785ec : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x0000000000447ed6 : dec dword ptr [rbx + 0x79c98508] ; jrcxz 0x447ecf ; retf
0x000000000049b76c : dec dword ptr [rcx + 0x21] ; retf 0x894c
0x0000000000484456 : dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x0000000000455604 : dec dword ptr [rcx + 0x29] ; ret
0x000000000046dca1 : dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000049b74e : dec dword ptr [rcx + 0x29] ; retf 0x894c
0x000000000049b7d6 : dec dword ptr [rcx + 0x31] ; retf 0x894c
0x0000000000455213 : dec dword ptr [rcx + 0x39] ; ret
0x000000000046cae2 : dec dword ptr [rcx + 0x39] ; ret 0x830f
0x0000000000455191 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047242a : dec dword ptr [rcx + 0x39] ; ret 0x870f
0x000000000049b777 : dec dword ptr [rcx + 0x39] ; retf 0x894c
0x000000000049d4bc : dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x0000000000469736 : dec dword ptr [rcx + 0x6b] ; ret
0x000000000045ad1c : dec dword ptr [rcx + 0xf40244c] ; ret 0x548b
0x000000000049b802 : dec dword ptr [rcx + 1] ; retf 0x894c
0x000000000049b80d : dec dword ptr [rcx + 9] ; retf 0x894c
0x0000000000452e69 : dec dword ptr [rcx + rcx*4 - 2] ; mov rdi, rbx ; call rax
0x0000000000467e8e : dec dword ptr [rcx - 0x50f0b73f] ; retf
0x0000000000480ccf : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000043ffe5 : dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044046e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000440078 : dec dword ptr [rcx - 0x75] ; jge 0x440082 ; call rbx
0x000000000044019f : dec dword ptr [rcx - 0x75] ; jge 0x4401a9 ; call rbx
0x00000000004402e2 : dec dword ptr [rcx - 0x75] ; jge 0x4402ec ; call rbx
0x0000000000440452 : dec dword ptr [rcx - 0x75] ; jge 0x44045c ; call rbx
0x0000000000441c70 : dec dword ptr [rcx - 0x75] ; jge 0x441c7a ; call rbx
0x0000000000441d98 : dec dword ptr [rcx - 0x75] ; jge 0x441da2 ; call rbx
0x0000000000441edb : dec dword ptr [rcx - 0x75] ; jge 0x441ee5 ; call rbx
0x0000000000441fdc : dec dword ptr [rcx - 0x75] ; jge 0x441fe6 ; call rbx
0x000000000047cc3c : dec dword ptr [rcx - 0x77] ; imul ecx ; ret
0x0000000000453e03 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000446148 : dec dword ptr [rcx - 0x77] ; ret 0x11e9
0x000000000044e9a7 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x0000000000456433 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041afbd : dec dword ptr [rcx - 0x7b] ; ret 0x840f
0x0000000000485d17 : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc381a927
0x000000000043f3b9 : dec dword ptr [rdi] ; adc eax, 0x50 ; add byte ptr [rax], al ; ret
0x000000000043f325 : dec dword ptr [rdi] ; and dword ptr [rcx + rdx*2], 0 ; ret
0x000000000044274f : dec dword ptr [rdi] ; cmp dword ptr [rdx], 0x1d ; add byte ptr [rax], al ; ret
0x0000000000484136 : dec dword ptr [rdi] ; lahf ; ret 0xb60f
0x00000000004869ef : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x0000000000446ccb : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000404707 : dec dword ptr [rdi] ; retf
0x0000000000481435 : dec dword ptr [rdi] ; retf 0x8d89
0x000000000043feac : dec dword ptr [rdi] ; sbb ebp, 0x45 ; add byte ptr [rax], al ; ret
0x00000000004106b1 : dec dword ptr [rdi] ; test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000449464 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x77000000], ch ; retf 0xe281
0x000000000048b0c7 : dec dword ptr [rdi] ; test byte ptr [rsi + rax + 0x63480000], al ; retf 0x8348
0x000000000043d500 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047098c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xdaf7
0x000000000041693b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000048590f : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000047a73e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000459c66 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x000000000043eb7d : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000043f359 : dec dword ptr [rdi] ; xor dword ptr [rax], 0x51 ; add byte ptr [rax], al ; ret
0x000000000047a25d : dec ecx ; ret
0x00000000004394b1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000462696 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000448ca1 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000046dca0 : dec qword ptr [rcx + 0x29] ; ret 0x8d49
0x00000000004a31a9 : div bh ; call qword ptr [rax]
0x000000000040dce4 : div byte ptr [rbp + 0x31] ; mov eax, 0xba ; syscall
0x0000000000465712 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000045a81d : div byte ptr [rbx] ; add byte ptr [r15 + r9 + 0x45], cl ; ret 0xf4c
0x000000000047a9ec : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045a525 : div ecx ; add eax, r8d ; ret
0x000000000043e481 : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000463176 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047a9eb : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040054c : enter -0x1401, -0x3b ; ret
0x000000000040053c : enter -0x2eff, 0x39 ; ret 0xffb8
0x000000000043d674 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000043936e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000004394ae : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004791cb : enter -0x74b8, 0x14 ; ret
0x000000000046d894 : enter -0x76b4, -7 ; mov r15, rax ; jmp 0x46d868
0x000000000044299e : enter -0x7cb8, 0x7c ; retf 0x1f8
0x00000000004bf0b8 : enter -0xaf5, -1 ; retf 0
0x00000000004400c4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000004bdd35 : enter -3, 0x60 ; leave ; std ; call rdx
0x00000000004ad35c : enter 0, 0 ; retf
0x00000000004b13b0 : enter 0, 0 ; retf 0
0x00000000004ae508 : enter 0x10, 0 ; retf
0x0000000000448d9f : enter 0x1388, -0x77 ; retf 0xe083
0x00000000004168fa : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000047a55e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000042290d : enter 0x31c3, -0x40 ; ret
0x00000000004c1d43 : enter 0x380e, 0x41 ; ret
0x00000000004a3361 : enter 0x42, 0 ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf 0x42
0x000000000041878d : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000041af85 : enter 0x4801, -0x7d ; ret 0x4810
0x000000000047e213 : enter 0x4b, -0x46 ; retf
0x000000000048ccf8 : enter 0x4b7d, 0 ; call 0x478fc6
0x000000000046b216 : enter 0x4f75, -0xd ; ret
0x00000000004bafbc : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004add08 : enter 0xa, 0 ; retf
0x00000000004ae108 : enter 0xd, 0 ; retf
0x000000000042f5f6 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000421341 : enter 0xf66, -0x15 ; ret
0x0000000000425dcb : enter 0xfc3, 0x1f ; add byte ptr [rax + 1], cl ; retf 0x8348
0x00000000004b15b0 : enter 1, 0 ; retf 1
0x00000000004ae8c0 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b17b0 : enter 2, 0 ; retf 2
0x00000000004b19b0 : enter 3, 0 ; retf 3
0x00000000004b1bb0 : enter 4, 0 ; retf 4
0x00000000004b1db0 : enter 5, 0 ; retf 5
0x00000000004b1fb0 : enter 6, 0 ; retf 6
0x00000000004b21b0 : enter 7, 0 ; retf 7
0x00000000004b23b0 : enter 8, 0 ; retf 8
0x00000000004b25b0 : enter 9, 0 ; retf 9
0x0000000000414c97 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000415193 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000040f4e9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004429a6 : fadd dword ptr [rax] ; leave ; ret
0x000000000041ca2f : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000411af0 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000444362 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c92e9 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000411267 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x00000000004778b5 : fadd st(3) ; mov eax, 0xffffffff ; ret
0x000000000042f141 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049ea74 : fbstp dword ptr [rbp - 0x17] ; pop rbx ; ret
0x00000000004ba5f8 : fcmovb st(0), st(3) ; ret
0x000000000044f1ae : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x00000000004bdee4 : fcom st(0), st(5) ; std ; jmp rsp
0x00000000004c21b9 : fcomi st(7) ; jmp qword ptr [rbx]
0x0000000000468cd7 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040fb3a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000040fc1f : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043fd2f : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041df96 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004bb379 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004016bb : fcomp dword ptr [rsi - 0x7cb7ff94] ; ret
0x00000000004442b8 : fcomp qword ptr [rax + rbp] ; pop rbx ; ret
0x00000000004b95e0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004c6748 : fcomp st(0) ; cli ; jmp rsi
0x000000000041dd3f : fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004a366d : fdiv st(0), st(0) ; jmp rax
0x0000000000485bb9 : fdiv st(1), st(0) ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004c8618 : fdiv st(2) ; cld ; call qword ptr [rax]
0x00000000004402d3 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004402e0 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x4402ee ; call rbx
0x00000000004c68c9 : fdivp st(2) ; call rsi
0x000000000044010a : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044019d : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; jge 0x4401ab ; call rbx
0x00000000004c6749 : fdivr st(2) ; jmp rsi
0x00000000004b8935 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004bddf9 : fdivr st(5) ; jmp rsp
0x00000000004bedb8 : fdivr st(7) ; hlt ; call qword ptr [rax]
0x000000000043d678 : fdivr st(7) ; ret
0x000000000043f492 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x00000000004643f4 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x0000000000489b2d : fiadd dword ptr [rbx + 0x39480fe2] ; retf 0xf48
0x000000000043fe4c : fiadd dword ptr [rcx - 0x7d] ; retf 0x3140
0x0000000000440829 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004bb1c6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000444275 : fidivr dword ptr [rax + 1] ; ret
0x000000000043e09f : fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x0000000000400c1a : fild word ptr [rax] ; add byte ptr [rcx], bh ; ret 0x860f
0x00000000004004a4 : fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x000000000045a518 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000048a4c5 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000432ab0 : fimul dword ptr [rax + 0x39] ; retf 0x6a77
0x000000000045c599 : fimul dword ptr [rax - 0x3f] ; cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x00000000004125b5 : fimul dword ptr [rax - 0x77] ; out dx, al ; mov eax, r13d ; syscall
0x000000000047b3f6 : fimul dword ptr [rax - 0x77] ; retf
0x00000000004106a0 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000048abce : fimul dword ptr [rax - 0x7d] ; in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x0000000000404f18 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000426902 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000048d0dc : fimul dword ptr [rcx + 1] ; ror byte ptr [rcx + 0x39], cl ; retf
0x000000000048ace2 : fimul word ptr [rax + 0x29] ; ret
0x000000000041187e : fimul word ptr [rax - 0x77] ; ret
0x0000000000459faf : fimul word ptr [rax - 0x77] ; retf
0x000000000047325a : fimul word ptr [rax - 0x7d] ; ret
0x000000000047a3cc : fimul word ptr [rbp + 0x11] ; retf
0x000000000044fbe0 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x00000000004116cf : fimul word ptr [rcx + rcx*4 - 0x19] ; mov eax, r9d ; syscall
0x00000000004003d4 : fistp qword ptr [rax + 1] ; syscall
0x0000000000414d05 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414e75 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004175b8 : fisttp dword ptr [rax + 0x21] ; ret
0x0000000000468152 : fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x000000000043fa47 : fisttp dword ptr [rax + 0xf] ; ret
0x000000000049ea71 : fisttp dword ptr [rax - 0x77] ; fbstp dword ptr [rbp - 0x17] ; pop rbx ; ret
0x0000000000474229 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000048dbb3 : fisttp dword ptr [rax - 0x77] ; jl 0x48dbe4 ; sbb byte ptr [rax + 0x63], cl ; retf
0x0000000000479431 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000049b410 : fisttp dword ptr [rbx + 0x63] ; add al, 0x98 ; add rax, r8 ; jmp rax
0x000000000047944b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000469105 : fisttp dword ptr [rdi] ; retf 0x3948
0x0000000000440d09 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000041e3be : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x00000000004480a7 : fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000048e209 : fisttp qword ptr [rax - 0x77] ; retf
0x000000000041c7c9 : fisttp word ptr [rax + 9] ; ret 0x8948
0x00000000004540ca : fisttp word ptr [rax - 0x77] ; retf 0x8948
0x0000000000455e15 : fisttp word ptr [rax - 0x77] ; retf 0x894c
0x00000000004794cf : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000042b3ad : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042f511 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f211 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004328fc : fisubr word ptr [rcx] ; ret 0xfec5
0x00000000004264dd : fld dword ptr [rbx + 0x294807e1] ; retf 0x8548
0x000000000046910a : fld dword ptr [rcx + 0xf] ; retf
0x000000000047d602 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004b9621 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000049188a : fld xword ptr [rsp - 0x18] ; ret
0x000000000044f769 : fldcw word ptr [rsp - 2] ; ret
0x000000000049ebe2 : fldenv dword ptr [rdx] ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x0000000000425f29 : fldenv dword ptr [rsi + 0xf] ; je 0x425f86 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042cd57 : fldenv dword ptr [rsi + 0xf] ; je 0x42cdb4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042f591 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425e21 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000047a434 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000418d5f : fmul dword ptr [rax + 0x39] ; ret
0x000000000047e611 : fmul dword ptr [rax + 0x39] ; ret 0x4976
0x000000000047e936 : fmul dword ptr [rax + 0x39] ; ret 0x860f
0x000000000043d947 : fmul dword ptr [rax + 9] ; retf 0x4466
0x000000000048ef17 : fmul dword ptr [rax - 0x39] ; ret
0x0000000000458831 : fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x0000000000411361 : fmul dword ptr [rax - 0x77] ; ret
0x0000000000484459 : fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000047d053 : fmul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x000000000046993c : fmul dword ptr [rax - 0x7d] ; ret
0x00000000004119ea : fmul dword ptr [rcx + 0x21] ; ret
0x000000000045af2e : fmul dword ptr [rcx + 0xf] ; ret
0x000000000049a6bd : fmul dword ptr [rcx + 9] ; ret 0x65e9
0x000000000049a955 : fmul dword ptr [rcx + 9] ; ret 0x85e9
0x000000000045cf8b : fmul dword ptr [rdi] ; ret
0x000000000048abe7 : fmul qword ptr [rcx + 0x19] ; ret 0x8545
0x000000000048a26c : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000004216c9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000042717f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000048ee12 : fmul st(0) ; ret
0x000000000048ed90 : fmulp st(1) ; ret
0x00000000004bae6a : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x000000000040dcb5 : fpatan ; ret
0x00000000004c85b9 : frndint ; call qword ptr [rax]
0x000000000042f311 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004012ed : fst qword ptr [rax] ; add byte ptr [rax + 2], dil ; syscall
0x00000000004b9307 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004168c7 : fstp dword ptr [rbx + rbp] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b9680 : fstp st(0) ; ret 0xde5d
0x00000000004016ba : fstp st(0) ; sahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b884b : fstp st(3), st(0) ; retf 0xeb83
0x000000000040dd38 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042f611 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004381e4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004bac38 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x000000000047c872 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x000000000043da8b : fsub qword ptr [rsi + 0xf] ; jmp 0x43da57
0x000000000042f411 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042145c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004400c2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000441bcb : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000441fca : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000441638 : fsubp st(0) ; ret 0xffe8
0x0000000000441538 : fsubp st(0) ; ret 0xffe9
0x0000000000441130 : fsubp st(0) ; retf 0xffed
0x00000000004bb358 : fucom st(5) ; loop 0x4bb3b1 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047edb5 : fucomi st(1) ; ret
0x000000000041f6c8 : fucomp st(0) ; retf
0x000000000049e6e7 : fucompi st(0) ; ret
0x0000000000446798 : fucompi st(0) ; ret 0xfb9b
0x000000000041bdd0 : fucompi st(0) ; ret 0xffff
0x00000000004011ff : fucompi st(0) ; retf
0x000000000045f2f0 : fucompi st(0) ; retf 0x72
0x0000000000417fe0 : fucompi st(0) ; retf 0xff97
0x0000000000445942 : fucompi st(3) ; ret
0x0000000000468156 : fucompp ; ret 0xfffe
0x00000000004ba99e : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000494c19 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004be7d4 : hlt ; add al, 0 ; add byte ptr [rax], cl ; hlt ; call qword ptr [rax]
0x000000000043eb80 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000045c653 : hlt ; add byte ptr es:[rax + 0x63], cl ; retf 0x8948
0x0000000000495b19 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000444d78 : hlt ; add eax, dword ptr ss:[rax] ; mov rdi, rbx ; call r14
0x000000000044262b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004be7da : hlt ; call qword ptr [rax]
0x00000000004bed02 : hlt ; call qword ptr [rbx]
0x00000000004be5fa : hlt ; call qword ptr [rdx]
0x00000000004be372 : hlt ; call rdi
0x00000000004c13a9 : hlt ; cmc ; call qword ptr [rdx]
0x00000000004c1fd4 : hlt ; cmp al, 0 ; add byte ptr [rax], ch ; retf
0x00000000004c60d4 : hlt ; jge 0x4c60de ; add byte ptr [rax - 0x7f], bh ; cli ; jmp rdi
0x000000000044aa3e : hlt ; jmp 0x44aa0e
0x0000000000434a4a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431bae : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043e9ef : hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000043d183 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004bfa19 : hlt ; ret
0x00000000004b9843 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000043d187 : hlt ; sub eax, edx ; ret
0x00000000004c16ca : idiv bh ; ret
0x000000000043eb3d : idiv byte ptr [rax + 2] ; syscall
0x000000000044cb8f : idiv byte ptr [rdi + 0x4a5fa8] ; mov eax, ecx ; syscall
0x0000000000401776 : idiv byte ptr [rdi + 1] ; call rax
0x0000000000446cc6 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000004c16c9 : idiv dil ; ret
0x000000000049d4ba : idiv edi ; dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000049b93f : idiv edi ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004a3152 : idiv edi ; jo 0x4a315f ; clc ; inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x000000000049fe7b : idiv edi ; nop dword ptr [rax] ; ret
0x000000000049fe38 : idiv edi ; nop word ptr [rax + rax] ; ret
0x00000000004a0838 : idiv edi ; ret
0x00000000004c1ca2 : idiv edi ; retf 2
0x0000000000469cbb : imul al ; out dx, eax ; retf 0xfffb
0x000000000041b18d : imul byte ptr [rdx] ; add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x00000000004422fb : imul eax ; lahf ; retf 0xfffc
0x000000000045c9d7 : imul eax ; rcr dword ptr [rbp - 0x38b70004], cl ; ret 0xffb0
0x0000000000441fd7 : imul eax ; ret
0x000000000046b488 : imul eax ; ret 0xfff8
0x000000000047a7df : imul eax ; retf
0x000000000044b49d : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000043bce1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000004250a7 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000424aa7 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x000000000044737b : imul eax, dword ptr [rdx], 0 ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000004442c9 : imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x000000000047cc3f : imul ecx ; ret
0x000000000046de32 : imul ecx ; retf
0x0000000000413264 : imul ecx, dword ptr [rax + 0x63], -0x2f ; mov eax, 2 ; syscall
0x000000000041d4b9 : imul ecx, dword ptr [rax - 0x73], 0x39481048 ; retf 0x1373
0x00000000004c4155 : imul ecx, dword ptr [rdx], 0x4a08070c ; or eax, dword ptr [rdx] ; retf
0x00000000004247a7 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x000000000049b769 : imul edi, ecx, -1 ; dec dword ptr [rcx + 0x21] ; retf 0x894c
0x00000000004241a7 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x0000000000423ea7 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000423ba7 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x0000000000467334 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000497ab4 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x000000000041adc4 : imul esp, dword ptr [rdx], 0x4a ; add al, ch ; ret 0xffff
0x000000000043b15c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000004c16c4 : in al, 0x33 ; add byte ptr [rax], al ; js 0x4c1712 ; idiv bh ; ret
0x00000000004039e6 : in al, 0x4c ; mov edi, esp ; mov eax, 3 ; syscall
0x00000000004bac81 : in al, 0x4c ; pop rax ; retf
0x00000000004c3fc4 : in al, 0x5c ; add byte ptr [rax], al ; sbb ch, bl ; clc ; call qword ptr [rbx]
0x00000000004c44c4 : in al, 0x61 ; add byte ptr [rax], al ; js 0x4c4550 ; stc ; call rdi
0x00000000004c45c4 : in al, 0x62 ; add byte ptr [rax], al ; test al, 0x81 ; stc ; call rdx
0x00000000004c4ac4 : in al, 0x67 ; add byte ptr [rax], al ; sub dh, ch ; stc ; call qword ptr [rsi]
0x00000000004237dc : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000043e118 : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000004c68c4 : in al, 0x85 ; add byte ptr [rax], al ; pop rax ; fdivp st(2) ; call rsi
0x00000000004bdee8 : in al, 0xd6 ; std ; jmp rsp
0x0000000000485dfa : in al, 0xf ; lahf ; ret 0x2941
0x0000000000457ba8 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000434a2a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042676b : in al, 0xf3 ; ret
0x00000000004a3559 : in al, 0xf8 ; call qword ptr [rax]
0x00000000004a35fd : in al, 0xf8 ; call rax
0x00000000004a3579 : in al, 0xf8 ; jmp rax
0x00000000004a3539 : in al, 0xf8 ; push qword ptr [rax] ; out 0xf8, al ; call qword ptr [rax]
0x0000000000445bf5 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; int1 ; retf
0x0000000000419ef3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000402624 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x401
0x0000000000420bec : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x21b
0x0000000000474815 : in al, dx ; add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x0000000000423090 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x000000000049e0fb : in al, dx ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004a3509 : in al, dx ; clc ; inc dword ptr [rax - 0x12] ; clc ; call rax
0x00000000004a362d : in al, dx ; clc ; inc dword ptr [rax] ; xabort -1 ; retf 0xfff8
0x00000000004a3529 : in al, dx ; clc ; jmp qword ptr [rax]
0x0000000000491889 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000004422a4 : in al, dx ; mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x0000000000431baa : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e2a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004bedcc : in al, dx ; or al, byte ptr [rax] ; add al, dl ; push rsp ; call qword ptr [rdx]
0x0000000000465547 : in al, dx ; or al, ch ; ret 1
0x000000000041ca67 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000047e6df : in al, dx ; push -0x37fa74b8 ; retf 0x24
0x00000000004c7fcc : in al, dx ; pushfq ; add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x0000000000473f70 : in al, dx ; ret
0x00000000004bae6d : in al, dx ; retf 0xae32
0x00000000004c67cc : in al, dx ; test byte ptr [rax], al ; add byte ptr [rax - 0x26], dh ; cli ; jmp rdi
0x00000000004bad9e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bad31 ; ret 0x48f
0x00000000004bad9d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bad32 ; ret 0x48f
0x000000000043ec08 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000004b94a3 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000046748a : in eax, 0x29 ; retf 0x8d41
0x000000000042682a : in eax, 0x48 ; mov eax, edi ; ret
0x0000000000452232 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004b8739 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000045a8fb : in eax, 0xdf ; loopne 0x45a88c ; ret 0xe680
0x00000000004bb359 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004b94fa : in eax, 0xe5 ; retf 0x2a91
0x00000000004667b3 : in eax, 0xf ; je 0x4667d8 ; add rax, 2 ; ret
0x0000000000434aaa : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042c28a : in eax, 0xf3 ; ret
0x00000000004a35dd : in eax, 0xf8 ; call qword ptr [rax]
0x00000000004c4801 : in eax, 0xf9 ; jmp rax
0x00000000004c6a61 : in eax, 0xfa ; jmp qword ptr [rdx]
0x00000000004ba821 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000401826 : in eax, 3 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000048abd1 : in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x000000000049dfa3 : in eax, dx ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000041f7b3 : in eax, dx ; call 0x42c213
0x000000000049eabf : in eax, dx ; jne 0x49eaa1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043d9a2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000004b8a65 : in eax, dx ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4b8ad6 ; salc ; retf
0x00000000004319ba : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434eaa : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000495620 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000478bdb : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000047e2e2 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414b42 : in eax, dx ; ret
0x00000000004b9278 : in eax, dx ; retf
0x000000000043daf2 : in eax, dx ; sub rax, 1 ; ret
0x000000000049cb65 : in eax, dx ; xor eax, eax ; add rsp, 8 ; ret
0x000000000043ddb8 : inc bl ; cmp dl, 1 ; jb 0x43ddca ; mov byte ptr [rdi], cl ; ret
0x0000000000432886 : inc bl ; jb 0x432896 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000426791 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000414fb2 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000045e15a : inc byte ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x88 ; retf
0x000000000044d546 : inc byte ptr [rbx] ; je 0x44d555 ; pop rbx ; ret
0x00000000004a38db : inc dword ptr [rax + 0x1b] ; stc ; call rax
0x00000000004a36c3 : inc dword ptr [rax + 0x1e] ; stc ; call rax
0x00000000004bdc5f : inc dword ptr [rax + 0x52] ; std ; call qword ptr [rax - 0x1f0002ac]
0x00000000004bdbe7 : inc dword ptr [rax + 0x79] ; std ; jmp qword ptr [rax]
0x00000000004a326f : inc dword ptr [rax + 0x7b] ; clc ; call qword ptr [rax - 0x1f000784]
0x00000000004a3aeb : inc dword ptr [rax + 0xf] ; stc ; call rax
0x00000000004a3157 : inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x00000000004a350b : inc dword ptr [rax - 0x12] ; clc ; call rax
0x00000000004a3507 : inc dword ptr [rax - 0x14] ; clc ; inc dword ptr [rax - 0x12] ; clc ; call rax
0x00000000004bdc6f : inc dword ptr [rax - 0x2f0002a5] ; pop rbp ; std ; jmp qword ptr [rax]
0x00000000004a3697 : inc dword ptr [rax - 0x2f00072a] ; xlatb ; clc ; jmp qword ptr [rax]
0x00000000004a3643 : inc dword ptr [rax - 0x2f000731] ; sar al, 1 ; jmp qword ptr [rax]
0x00000000004a3687 : inc dword ptr [rax - 0x2f] ; clc ; call qword ptr [rax - 0x1f00072e]
0x00000000004a3633 : inc dword ptr [rax - 0x36] ; clc ; call qword ptr [rax - 0x1f000735]
0x00000000004534da : inc dword ptr [rax - 0x4d343] ; jmp qword ptr [rax]
0x000000000045568c : inc dword ptr [rax - 0x50f43] ; jmp qword ptr [rax]
0x0000000000460233 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000045394c : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffa
0x000000000042fb27 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004a36b3 : inc dword ptr [rax] ; and cl, bh ; call qword ptr [rax + 0x20fff91f]
0x00000000004a32c7 : inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a3577 : inc dword ptr [rax] ; in al, 0xf8 ; jmp rax
0x00000000004a3c0b : inc dword ptr [rax] ; ja 0x4a3c0c ; call qword ptr [rax]
0x00000000004bdbef : inc dword ptr [rax] ; jge 0x4bdbf4 ; jmp rax
0x00000000004a3c63 : inc dword ptr [rax] ; jns 0x4a3c64 ; jmp qword ptr [rax]
0x00000000004a35f7 : inc dword ptr [rax] ; jrcxz 0x4a35f7 ; jmp rax
0x00000000004a3c43 : inc dword ptr [rax] ; js 0x4a3c44 ; jmp qword ptr [rax]
0x00000000004a33c3 : inc dword ptr [rax] ; mov esi, 0xbef0fff8 ; clc ; jmp rax
0x00000000004bdbcf : inc dword ptr [rax] ; outsb dx, byte ptr [rsi] ; std ; jmp rax
0x00000000004a38cb : inc dword ptr [rax] ; sbb eax, 0x1c90fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a339b : inc dword ptr [rax] ; stosb byte ptr [rdi], al ; clc ; jmp qword ptr [rax]
0x00000000004a362f : inc dword ptr [rax] ; xabort -1 ; retf 0xfff8
0x0000000000460ae6 : inc dword ptr [rbp + 0x29] ; retf
0x000000000047ce45 : inc dword ptr [rbp + 0x31] ; dec dword ptr [rax - 0x77] ; retf
0x000000000047144f : inc dword ptr [rbp + 0x5b0378c0] ; ret
0x0000000000473660 : inc dword ptr [rbp - 0x76b48a40] ; ret
0x000000000045b400 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x45b485 ; ret
0x0000000000460627 : inc dword ptr [rbx - 0x10ab43] ; jmp qword ptr [rax]
0x000000000040d6ca : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000049cff2 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000044e4d7 : inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000045870f : inc dword ptr [rbx - 0x7af00008] ; retf 0xfffd
0x000000000046879c : inc dword ptr [rbx - 0x7bf0fd08] ; ret
0x0000000000407782 : inc dword ptr [rbx - 0x7bf0fe08] ; ret
0x000000000040a802 : inc dword ptr [rbx - 0x7bf0fe08] ; retf
0x000000000043e47f : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e3af : inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000444164 : inc dword ptr [rcx + 0xf] ; mov dh, 0x4b ; add al, 0x89 ; retf 0xeac0
0x000000000045e2f9 : inc dword ptr [rcx + 0xf] ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000045e157 : inc dword ptr [rcx + 1] ; inc byte ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x88 ; retf
0x0000000000477880 : inc dword ptr [rcx + rcx*4 - 0x40] ; sub eax, ecx ; ret
0x000000000047e8b3 : inc dword ptr [rcx + rdi + 0x4d] ; mov eax, 0x89459673 ; retf
0x00000000004a3a5f : inc dword ptr [rcx + rdx] ; stc ; push qword ptr [rax + rdx - 7] ; jmp rsp
0x000000000047fa17 : inc dword ptr [rcx - 0x43] ; retf
0x000000000044e4da : inc dword ptr [rcx - 0x77] ; ret
0x0000000000413b05 : inc dword ptr [rcx - 0x7f] ; retf 0
0x0000000000413c5a : inc dword ptr [rcx - 0x80] ; retf 0x4d80
0x0000000000413ca5 : inc dword ptr [rcx - 0x80] ; retf 0xe980
0x00000000004c92e6 : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004a3837 : inc dword ptr [rdi + rbx - 7] ; call rsp
0x000000000048b119 : inc dword ptr [rdi + rcx + 0x44] ; retf 0xf741
0x000000000047fd20 : inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a379f : inc dword ptr [rdx] ; sbb edi, ecx ; call qword ptr [rdx + 0x22fff91a]
0x000000000042bb8d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004a370b : inc dword ptr [rsi + 0x1d] ; stc ; call rsi
0x00000000004a32b7 : inc eax ; clc ; call rax
0x00000000004a3393 : inc eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp rax
0x00000000004a3c37 : inc eax ; ja 0x4a3c38 ; call rax
0x00000000004a3bfb : inc eax ; jbe 0x4a3bfc ; call rax
0x00000000004a3c8f : inc eax ; jl 0x4a3c90 ; call rax
0x00000000004a3c5b : inc eax ; js 0x4a3c5c ; jmp rax
0x00000000004a34db : inc eax ; ret
0x00000000004bdceb : inc eax ; ret 0xfffd
0x00000000004a3373 : inc eax ; sahf ; clc ; jmp rax
0x00000000004a328f : inc eax ; test eax, edi ; call qword ptr [rax]
0x0000000000464f4c : inc ebx ; nop ; xor eax, eax ; ret
0x000000000043d679 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000412bd8 : inc ebx ; nop word ptr [rax + rax] ; ret
0x00000000004778bb : inc ebx ; sub eax, edx ; ret
0x00000000004603e2 : inc edi ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000481226 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000484256 : inc esi ; add dh, byte ptr [rax] ; jmp 0x480cf3
0x0000000000402d3b : insb byte ptr [rdi], dx ; add bh, bh ; sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x00000000004880f6 : insb byte ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000041d607 : insb byte ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; retf 0x894c
0x0000000000401501 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x0000000000443973 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x000000000041d065 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0xf4c
0x00000000004016bd : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041da5e : insb byte ptr [rdi], dx ; add byte ptr [rbp - 0x42], dh ; ret
0x0000000000470ef5 : insb byte ptr [rdi], dx ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004438b9 : insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf
0x00000000004438e6 : insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x000000000047adf6 : insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000047bc71 : insb byte ptr [rdi], dx ; and al, 0x78 ; call r12
0x000000000049188b : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000044f76a : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000004bb35e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004c554c : insb byte ptr [rdi], dx ; jb 0x4c5556 ; add byte ptr [rax + 0x1a], ah ; cli ; jmp qword ptr [rax]
0x000000000040ffa0 : insb byte ptr [rdi], dx ; ret 1
0x0000000000478ba0 : insb byte ptr [rdi], dx ; retf 0x4df0
0x00000000004ba726 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x00000000004bdbcd : insb byte ptr [rdi], dx ; std ; inc dword ptr [rax] ; outsb dx, byte ptr [rsi] ; std ; jmp rax
0x0000000000494ea0 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c50a5 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; or byte ptr [rdx], al ; cli ; call rsi
0x0000000000495da0 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000462c01 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00000000004bb35f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004b970d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004ba61f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004ba7e7 : int 0x80
0x000000000045a526 : int1 ; add eax, r8d ; ret
0x0000000000444aac : int1 ; call rbx
0x00000000004c6b09 : int1 ; cli ; jmp qword ptr [rdx]
0x0000000000473ff4 : int1 ; cmp rcx, rdx ; jne 0x473fd7 ; ret
0x000000000043dd3b : int1 ; jl 0x43dd8c ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dd5c : int1 ; jl 0x43ddad ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dd6f : int1 ; jl 0x43ddc0 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043de44 : int1 ; jl 0x43de95 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043de9c : int1 ; jl 0x43deed ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043df39 : int1 ; jl 0x43df8a ; adc dword ptr [rsi + 7], edx ; ret
0x000000000049a117 : int1 ; jmp rcx
0x00000000004ba5e4 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x000000000043489b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043217f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043d153 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000470cf5 : int1 ; or byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000043e482 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004bad36 : int1 ; ret 0x5803
0x00000000004a3414 : int1 ; ret 0xfff8
0x0000000000445bfb : int1 ; retf
0x000000000048110b : int1 ; retf 0xfff9
0x00000000004a340c : int1 ; sar eax, -1 ; jno 0x4a33dd ; clc ; push rcx ; ret 0xfff8
0x000000000043d157 : int1 ; sub eax, edx ; ret
0x00000000004a3645 : iretd ; clc ; call rax
0x000000000041abbb : iretd ; mov eax, 3 ; syscall
0x000000000041ab8f : iretd ; mov eax, r8d ; syscall
0x0000000000451944 : iretd ; mov qword ptr [rbp - 0x38], rcx ; call 0x41dc07
0x000000000040dd0e : ja 0x40dd33 ; ret
0x00000000004266f2 : ja 0x426703 ; ret
0x000000000042c218 : ja 0x42c212 ; ret 0x7401
0x0000000000435c63 : ja 0x435c67 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043b2a7 : ja 0x43b2ad ; ret
0x000000000043b2c3 : ja 0x43b2cd ; mov dword ptr [rdi], ecx ; ret
0x000000000043b304 : ja 0x43b313 ; mov qword ptr [rdi], rcx ; ret
0x000000000043b389 : ja 0x43b39d ; ret
0x000000000043b3df : ja 0x43b3f7 ; ret
0x000000000043b461 : ja 0x43b47d ; ret
0x000000000043b8c7 : ja 0x43b8d1 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b8e3 : ja 0x43b8f1 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b934 : ja 0x43b947 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043ba19 : ja 0x43ba31 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043ba8f : ja 0x43baab ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043bb11 : ja 0x43bb31 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043e9ed : ja 0x43ea19 ; hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000043f28b : ja 0x43f293 ; ret
0x000000000043f2da : ja 0x43f2e3 ; ret
0x000000000043f469 : ja 0x43f4a3 ; ret
0x000000000043f50d : ja 0x43f557 ; add rsp, 0x60 ; pop rbx ; ret
0x000000000044fa96 : ja 0x44faa3 ; ret
0x000000000045a517 : ja 0x45a4fe ; mov eax, r8d ; ret
0x000000000046a90d : ja 0x46a91b ; pop rbx ; ret
0x000000000046ac9b : ja 0x46aca3 ; ret
0x000000000046acf0 : ja 0x46acfb ; ret
0x000000000046aea0 : ja 0x46aecb ; ret
0x000000000046be35 : ja 0x46bde6 ; sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000478efe : ja 0x478f50 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000484af4 : ja 0x484a81 ; ret 0x348
0x000000000048746b : ja 0x4873f8 ; ret 0x348
0x000000000048a86d : ja 0x48946e ; jmp 0x48a847
0x000000000048daa5 : ja 0x48c68e ; jmp 0x48da7f
0x00000000004911ed : ja 0x48f4ee ; jmp 0x4911c7
0x00000000004a3269 : ja 0x4a3265 ; jmp rax
0x00000000004a3c0d : ja 0x4a3c0a ; call qword ptr [rax]
0x00000000004a3c11 : ja 0x4a3c0e ; jmp qword ptr [rax]
0x00000000004a3c39 : ja 0x4a3c36 ; call rax
0x00000000004a3c35 : ja 0x4a3c36 ; inc eax ; ja 0x4a3c3a ; call rax
0x00000000004a3c3d : ja 0x4a3c3a ; jmp rax
0x00000000004a3c41 : ja 0x4a3c42 ; inc dword ptr [rax] ; js 0x4a3c46 ; jmp qword ptr [rax]
0x00000000004bada4 : ja 0x4bad2b ; ret 0x48f
0x00000000004bdbe5 : ja 0x4bdbea ; inc dword ptr [rax + 0x79] ; std ; jmp qword ptr [rax]
0x0000000000413028 : jae 0x413035 ; movzx eax, byte ptr [rax] ; ret
0x00000000004168fb : jae 0x416925 ; movzx eax, byte ptr [rax] ; ret
0x000000000044404c : jae 0x443fd9 ; retf 0x8d48
0x0000000000444274 : jae 0x444257 ; mov eax, 1 ; ret
0x000000000043f22d : jae 0x444496 ; ret
0x000000000047471b : jae 0x4746c5 ; xor eax, eax ; ret
0x0000000000476c0f : jae 0x476c16 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004a3261 : jae 0x4a3261 ; push qword ptr [rax + 0x75] ; clc ; call qword ptr [rax]
0x00000000004b9362 : jae 0x4b9344 ; jo 0x4b93e0 ; mov ebp, 0xfb67d10d ; ret
0x00000000004ba1fe : jae 0x4ba1d9 ; push rsi ; pop rdx ; je 0x4ba1ce ; ret 0xacfc
0x00000000004beff1 : jae 0x4bf009 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000004c4caf : jae 0x4c4cbd ; ret
0x000000000043018a : jb 0x43019a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004302da : jb 0x4302ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043042a : jb 0x43043a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043057a : jb 0x43058a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004306ca : jb 0x4306da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043081a : jb 0x43082a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043096a : jb 0x43097a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430aba : jb 0x430aca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c0a : jb 0x430c1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d5a : jb 0x430d6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430eaa : jb 0x430eba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430ffa : jb 0x43100a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043114a : jb 0x43115a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043129a : jb 0x4312aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004313ea : jb 0x4313fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432781 : jb 0x43276a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00000000004327e4 : jb 0x4327cd ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x0000000000432888 : jb 0x432894 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043583e : jb 0x43584a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043dc27 : jb 0x43dc37 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043dc33 : jb 0x43dc49 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043dc43 : jb 0x43dc4b ; mov byte ptr [rdi], cl ; ret
0x000000000043dda5 : jb 0x43ddb4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043ddb0 : jb 0x43ddc3 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043ddbd : jb 0x43ddc5 ; mov byte ptr [rdi], cl ; ret
0x0000000000464c9c : jb 0x464c95 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000049adb3 : jb 0x49adbd ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004a325d : jb 0x4a3259 ; call rax
0x00000000004c554d : jb 0x4c5555 ; add byte ptr [rax + 0x1a], ah ; cli ; jmp qword ptr [rax]
0x0000000000401508 : jbe 0x40151c ; syscall
0x0000000000414d4b : jbe 0x414ceb ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000426036 : jbe 0x426075 ; add rax, rdi ; ret
0x0000000000426046 : jbe 0x426077 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000426056 : jbe 0x426077 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000426066 : jbe 0x426077 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042c283 : jbe 0x42c29e ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x42c279 ; ret
0x000000000044e4d5 : jbe 0x44e4da ; inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000045ace2 : jbe 0x45ac6f ; ret 0x8166
0x00000000004641ca : jbe 0x464140 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047810f : jbe 0x47811a ; ret
0x000000000049dc46 : jbe 0x49dc58 ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x00000000004a36f0 : jbe 0x4a370e ; stc ; jmp rsi
0x00000000004a3bfd : jbe 0x4a3bfa ; call rax
0x00000000004a3bf9 : jbe 0x4a3bfa ; inc eax ; jbe 0x4a3bfe ; call rax
0x00000000004a3c01 : jbe 0x4a3bfe ; jmp rax
0x00000000004a3c09 : jbe 0x4a3c0a ; inc dword ptr [rax] ; ja 0x4a3c0e ; call qword ptr [rax]
0x00000000004bac3c : jbe 0x4bac0f ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004bac3b : jbe 0x4bac10 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004c1911 : jbe 0x4c190b ; call qword ptr [rax]
0x00000000004008dd : je 0x4008f8 ; pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x000000000040092b : je 0x400940 ; pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x000000000040095a : je 0x40096a ; mov edi, 0x4be2e0 ; call rax
0x00000000004009a8 : je 0x40099a ; call rax
0x0000000000400bb4 : je 0x400be2 ; adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x0000000000401773 : je 0x401787 ; xor esi, esi ; mov edi, 1 ; call rax
0x00000000004022b9 : je 0x4022cd ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000402505 : je 0x402519 ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000402de4 : je 0x402df4 ; mov edi, 0x6cc060 ; call rax
0x0000000000403033 : je 0x40304d ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403227 : je 0x403241 ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403642 : je 0x403652 ; mov edi, 0x6cc0a0 ; call rax
0x000000000040368a : je 0x40369c ; mov edi, 0x6cc0a0 ; call r15
0x000000000040378a : je 0x40379a ; mov edi, 0x6cc0a0 ; call rax
0x000000000040f9be : je 0x40f9cd ; mov eax, edx ; pop rbx ; ret
0x0000000000412bb4 : je 0x412bf0 ; movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x000000000041413b : je 0x4140e1 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414d13 : je 0x414ccd ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414e83 : je 0x414e3d ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414ff5 : je 0x415002 ; ret
0x0000000000415027 : je 0x415036 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415b4a : je 0x415b55 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000417cba : je 0x417cc1 ; pop rbx ; ret
0x0000000000417d97 : je 0x417d9d ; call rax
0x0000000000418b84 : je 0x418b91 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041ab8a : je 0x41abb9 ; xor byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, r8d ; syscall
0x000000000041e082 : je 0x41e0ab ; call rax
0x000000000041ea72 : je 0x41ea9e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000041efb8 : je 0x41efbe ; call rax
0x0000000000420fb9 : je 0x420fc2 ; ret
0x0000000000421242 : je 0x421257 ; mov eax, 0x16 ; ret
0x0000000000421291 : je 0x4212a3 ; lea rax, qword ptr [rip + 0x1a966] ; ret
0x00000000004229c3 : je 0x42298d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000423695 : je 0x42369d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000423704 : je 0x423716 ; lea rax, qword ptr [rip + 0x14853] ; ret
0x0000000000423874 : je 0x42387f ; bsf eax, edx ; ret
0x000000000042391d : je 0x423936 ; bsf rax, rdx ; ret
0x00000000004255eb : je 0x425616 ; sub byte ptr [rax - 0x77], cl ; retf
0x0000000000425f2c : je 0x425f83 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042609e : je 0x4260b1 ; lea rax, qword ptr [rip + 0x8449] ; ret
0x0000000000426680 : je 0x426692 ; lea rax, qword ptr [rip + 0x17647] ; ret
0x0000000000426c34 : je 0x426c46 ; lea rax, qword ptr [rip + 0x12ad3] ; ret
0x0000000000429103 : je 0x4290cd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042ac93 : je 0x42ac5d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042cd5a : je 0x42cdb1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042ce11 : je 0x42ce29 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000042f887 : je 0x42f891 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043e395 : je 0x43e388 ; movzx eax, cl ; pop rbx ; ret
0x000000000043e3bd : je 0x43e388 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e4ce : je 0x43e4dc ; xor eax, eax ; ret
0x000000000043e4c9 : je 0x43e4e9 ; cmp eax, 2 ; je 0x43e4e1 ; xor eax, eax ; ret
0x000000000043e51d : je 0x43e503 ; ret
0x000000000043e608 : je 0x43e618 ; mov edi, 0x6cc720 ; call rax
0x000000000043e620 : je 0x43e630 ; mov edi, 0x6cc720 ; call rax
0x000000000043e980 : je 0x43e961 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043fd8a : je 0x43fd91 ; ret
0x00000000004410d0 : je 0x4410e2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000442839 : je 0x44283e ; ret
0x000000000044289d : je 0x4428a2 ; ret
0x0000000000443f83 : je 0x443f93 ; mov edi, 0x6cb140 ; call rax
0x0000000000444111 : je 0x444121 ; mov edi, 0x6cb140 ; call rax
0x0000000000444298 : je 0x4442a2 ; ret
0x00000000004442b4 : je 0x4442c9 ; mov dword ptr [rip + 0x285cdc], edx ; pop rbx ; ret
0x0000000000444aa7 : je 0x444ad3 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000448ba4 : je 0x448bd3 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000044d548 : je 0x44d553 ; pop rbx ; ret
0x000000000044d543 : je 0x44d558 ; cmp esi, 3 ; je 0x44d558 ; pop rbx ; ret
0x000000000044dad0 : je 0x44dae0 ; mov edi, 0x6cc720 ; call rax
0x000000000044daff : je 0x44db17 ; mov edi, 0x6cc720 ; call rax
0x000000000044dc00 : je 0x44dc06 ; call rax
0x000000000044dc5f : je 0x44dc6f ; mov edi, 0x6cc720 ; call rax
0x000000000044ddd8 : je 0x44ddef ; mov edi, 0x6cc720 ; call rax
0x000000000044e0b8 : je 0x44e0c8 ; mov edi, 0x6cc720 ; call rax
0x000000000044e1bc : je 0x44e1c2 ; call rax
0x000000000044f07b : je 0x44f081 ; call rax
0x000000000044f63b : je 0x44f643 ; ret
0x0000000000450c12 : je 0x450c3f ; and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000462f78 : je 0x462fa2 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000463c06 : je 0x463c56 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000463c05 : je 0x463c57 ; add esp, 0x20 ; pop rbx ; ret
0x00000000004649ec : je 0x4649f2 ; ret
0x0000000000464a1a : je 0x464a7c ; pop rbp ; pop r12 ; ret
0x0000000000464abf : je 0x464b21 ; pop rbp ; pop r12 ; ret
0x0000000000464bfd : je 0x464c08 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464c41 : je 0x464c4c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000046581c : je 0x465846 ; bsf rax, rdx ; ret
0x0000000000466799 : je 0x4667b9 ; mov cl, dl ; and cl, 0xf ; je 0x4667c9 ; ret
0x00000000004667a0 : je 0x4667c2 ; ret
0x00000000004667b5 : je 0x4667d6 ; add rax, 2 ; ret
0x0000000000466b3b : je 0x466b64 ; call rbx
0x0000000000466be3 : je 0x466c0c ; call rbx
0x0000000000466fc8 : je 0x466fd5 ; test edx, edx ; jne 0x466fc7 ; ret
0x000000000046a9b2 : je 0x46a9d0 ; xor byte ptr [rdi], cl ; mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf 0x8348
0x000000000046b225 : je 0x46b214 ; ret
0x000000000046dcf8 : je 0x46dc83 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x0000000000470e84 : je 0x470e94 ; mov edi, 0x6cb100 ; call rax
0x0000000000474e78 : je 0x474e88 ; mov edi, 0x6cb140 ; call rax
0x0000000000474ea0 : je 0x474eb0 ; mov edi, 0x6cb140 ; call rax
0x0000000000474f16 : je 0x474f26 ; mov edi, 0x6cb140 ; call rax
0x000000000047643b : je 0x47644f ; mov rdi, qword ptr [rbp - 0x88] ; call rax
0x0000000000476a2c : je 0x476a51 ; pop rbx ; mov edi, 0x6cb140 ; jmp rax
0x00000000004769e3 : je 0x476a57 ; mov edi, 0x6cb140 ; call rax
0x0000000000476a47 : je 0x476ab0 ; pop rbx ; ret
0x000000000047819e : je 0x478169 ; mov edi, 0x6cb140 ; call rax
0x000000000047817f : je 0x4781ad ; or byte ptr [rdi + 0x6cb140], bh ; call rax
0x00000000004782e6 : je 0x4782f2 ; ret
0x00000000004782fc : je 0x47830c ; mov edi, 0x6cb140 ; call rax
0x000000000047a74a : je 0x47a755 ; mov eax, edx ; pop rbx ; ret
0x000000000047b042 : je 0x47b056 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047bcac : je 0x47bcdb ; js 0x47bd01 ; lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047e718 : je 0x47e728 ; mov edi, 0x6cb140 ; call rax
0x000000000047e744 : je 0x47e754 ; mov edi, 0x6cb140 ; call rax
0x000000000047e9ea : je 0x47e9fe ; mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x000000000048771b : je 0x4876a8 ; ret 0x348
0x0000000000487e9b : je 0x487eab ; mov edi, 0x6cb140 ; call rax
0x0000000000487ec2 : je 0x487ed2 ; mov edi, 0x6cb140 ; call rax
0x0000000000487f41 : je 0x487f51 ; mov edi, 0x6cb140 ; call rax
0x0000000000487f6a : je 0x487f7a ; mov edi, 0x6cb140 ; call rax
0x00000000004940a3 : je 0x49406d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000496053 : je 0x49601d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000499e85 : je 0x499e63 ; ret
0x000000000049c150 : je 0x49c108 ; add rsp, 0x18 ; ret
0x000000000049c107 : je 0x49c179 ; add rsp, 0x18 ; ret
0x000000000049e043 : je 0x49e054 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e059 ; ret
0x000000000049e1fd : je 0x49e267 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049e678 : je 0x49e683 ; ret
0x000000000049e8ea : je 0x49e8fa ; mov edi, 0x6cb100 ; call rax
0x000000000049e9ab : je 0x49e9bb ; mov edi, 0x6cb100 ; call rax
0x00000000004a064e : je 0x4a0659 ; call rax
0x00000000004a3a64 : je 0x4a3a79 ; stc ; jmp rsp
0x00000000004b876c : je 0x4b879a ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004b94c8 : je 0x4b9493 ; xor al, 0xd8 ; ret
0x00000000004ba202 : je 0x4ba1ca ; ret 0xacfc
0x00000000004befea : je 0x4beff8 ; ret
0x00000000004c1c98 : je 0x4c1ca3 ; add byte ptr [rax], al ; mov esp, 0xa0000039 ; ret 0xfff7
0x0000000000411b72 : jg 0x411beb ; mov eax, 3 ; syscall
0x0000000000412bb8 : jg 0x412c2e ; xor eax, eax ; syscall
0x0000000000426702 : jg 0x426754 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000426760 : jg 0x4267ac ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000426827 : jg 0x426840 ; jne 0x426817 ; mov rax, rdi ; ret
0x000000000042c287 : jg 0x42c29e ; jne 0x42c275 ; ret
0x0000000000431d69 : jg 0x431dbc ; ret
0x0000000000431db0 : jg 0x431e00 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000431db5 : jg 0x431e08 ; retf
0x0000000000431def : jg 0x431e3a ; ret
0x0000000000431e2f : jg 0x431e7a ; retf
0x0000000000431f69 : jg 0x431fbc ; ret 0x894c
0x0000000000431fb0 : jg 0x432000 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000431fb5 : jg 0x432008 ; retf 0x894c
0x0000000000431fef : jg 0x43203a ; ret 0x894c
0x000000000043202b : jg 0x432076 ; retf 0x894c
0x0000000000432780 : jg 0x4327fc ; loopne 0x432751 ; jp 0x43280d ; jp 0x432780 ; ret
0x000000000043282c : jg 0x43283d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000434878 : jg 0x4348c9 ; loope 0x434877 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004348ef : jg 0x43493a ; ret 0xff2
0x0000000000434908 : jg 0x434959 ; loop 0x434907 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043497f : jg 0x4349ca ; ret
0x0000000000434998 : jg 0x4349e9 ; jrcxz 0x434997 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434a28 : jg 0x434a79 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434aa8 : jg 0x434af9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b28 : jg 0x434b79 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434ba8 : jg 0x434bf9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434d05 : jg 0x434d55 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000434d0f : jg 0x434d5a ; retf 0xff2
0x0000000000434d85 : jg 0x434dd5 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000434d8f : jg 0x434dda ; retf
0x0000000000434e28 : jg 0x434e79 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ea8 : jg 0x434ef9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f38 : jg 0x434f89 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434fb8 : jg 0x435009 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043502c : jg 0x435037 ; ret
0x0000000000435086 : jg 0x435099 ; ret
0x0000000000435081 : jg 0x4350d1 ; psllq mm1, qword ptr [rdi] ; jg 0x43509e ; ret
0x00000000004350f6 : jg 0x435109 ; ret
0x0000000000435166 : jg 0x435179 ; ret
0x0000000000435161 : jg 0x4351b1 ; or eax, 0xf7f0ff3 ; ret
0x00000000004351d6 : jg 0x4351e9 ; ret
0x00000000004351d1 : jg 0x435221 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435246 : jg 0x435259 ; ret
0x0000000000435241 : jg 0x435291 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004352b6 : jg 0x4352c9 ; ret
0x00000000004352b1 : jg 0x435301 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435326 : jg 0x435339 ; ret
0x0000000000435321 : jg 0x435371 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435396 : jg 0x4353a9 ; ret
0x0000000000435391 : jg 0x4353e1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435406 : jg 0x435419 ; ret
0x0000000000435476 : jg 0x435489 ; ret
0x00000000004354e6 : jg 0x4354f9 ; ret
0x00000000004354e1 : jg 0x435531 ; add eax, 0xf7f0ff3 ; ret
0x0000000000435556 : jg 0x435569 ; ret
0x0000000000435551 : jg 0x4355a1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355c6 : jg 0x4355d9 ; ret
0x00000000004355c1 : jg 0x435611 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435636 : jg 0x435649 ; ret
0x0000000000435631 : jg 0x435681 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004356a6 : jg 0x4356b9 ; ret
0x00000000004356a1 : jg 0x4356f1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004357e4 : jg 0x4357f5 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000004357f8 : jg 0x435809 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000435c6a : jg 0x435c66 ; ret
0x000000000043b376 : jg 0x43b381 ; ret
0x000000000043b386 : jg 0x43b394 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b39a : jg 0x43b3a9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b3b9 : jg 0x43b3c7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b3c9 : jg 0x43b3d7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b3d9 : jg 0x43b3ea ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b3fa : jg 0x43b409 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b41a : jg 0x43b429 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b43a : jg 0x43b449 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b45a : jg 0x43b46c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b49d : jg 0x43b4af ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b4bd : jg 0x43b4cf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b4db : jg 0x43b4eb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b4fb : jg 0x43b50b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b51b : jg 0x43b52b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043b53b : jg 0x43b54b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043ba06 : jg 0x43ba15 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043ba16 : jg 0x43ba28 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043ba49 : jg 0x43ba5b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043ba69 : jg 0x43ba7b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043bb8f : jg 0x43bbef ; or eax, 0x1c478d48 ; ret
0x000000000043dc02 : jg 0x43dc12 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043dca3 : jg 0x43dcf4 ; loopne 0x43dcf8 ; sub eax, edx ; vzeroupper ; ret
0x000000000043dd87 : jg 0x43dd97 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043dd7d : jg 0x43dd9d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043e350 : jg 0x43e38d ; ret 0x2b77
0x0000000000449cbf : jg 0x449c4c ; ret 0x5c77
0x000000000047f151 : jg 0x47f157 ; add byte ptr [rcx], bh ; ret
0x0000000000491864 : jg 0x491871 ; ret 0x5488
0x00000000004c44c9 : jg 0x4c44c6 ; call rdi
0x00000000004c61ed : jg 0x4c61f5 ; add byte ptr [rax - 0x73], dh ; cli ; call rsi
0x000000000040e12e : jge 0x40e133 ; call r14
0x000000000044007b : jge 0x44007f ; call rbx
0x00000000004401a2 : jge 0x4401a6 ; call rbx
0x00000000004401b0 : jge 0x4401b4 ; call rbx
0x00000000004402e5 : jge 0x4402e9 ; call rbx
0x0000000000440455 : jge 0x440459 ; call rbx
0x0000000000440463 : jge 0x440467 ; call rbx
0x00000000004408b6 : jge 0x440881 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000441c73 : jge 0x441c77 ; call rbx
0x0000000000441d9b : jge 0x441d9f ; call rbx
0x0000000000441ede : jge 0x441ee2 ; call rbx
0x0000000000441fdf : jge 0x441fe3 ; call rbx
0x0000000000441ffb : jge 0x441fff ; call rbx
0x0000000000442356 : jge 0x442307 ; mov eax, 3 ; syscall
0x0000000000442443 : jge 0x4423e4 ; mov eax, 3 ; syscall
0x0000000000453dc4 : jge 0x453dfb ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000466976 : jge 0x46697b ; call r12
0x000000000049c51f : jge 0x49c51c ; leave ; ret
0x000000000049c5b7 : jge 0x49c5ba ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c64b : jge 0x49c648 ; leave ; ret
0x000000000049c697 : jge 0x49c69a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c760 : jge 0x49c763 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c7ef : jge 0x49c7ec ; leave ; ret
0x000000000049c840 : jge 0x49c843 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049ec50 : jge 0x49ec65 ; call r12
0x00000000004a3cb5 : jge 0x4a3cb2 ; call rax
0x00000000004a3cbd : jge 0x4a3cba ; call qword ptr [rax]
0x00000000004a3cb9 : jge 0x4a3cba ; push rax ; jge 0x4a3cbe ; call qword ptr [rax]
0x00000000004b87ca : jge 0x4b87ab ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004ba114 : jge 0x4ba185 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004bdbf1 : jge 0x4bdbf2 ; jmp rax
0x00000000004c60d5 : jge 0x4c60dd ; add byte ptr [rax - 0x7f], bh ; cli ; jmp rdi
0x0000000000400bb8 : jl 0x400be2 ; or al, 0x41 ; call rsp
0x0000000000400c0c : jl 0x400c3a ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000413eeb : jl 0x413f36 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b1d5 : jl 0x41b200 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041b30c : jl 0x41b337 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000435764 : jl 0x4357b3 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004357a0 : jl 0x4357ef ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000043599e : jl 0x4359ed ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435b05 : jl 0x435b54 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000435c67 : jl 0x435cb6 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000043dd3c : jl 0x43dd8b ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dd5d : jl 0x43ddac ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dd70 : jl 0x43ddbf ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043de45 : jl 0x43de94 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043de9d : jl 0x43deec ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043df3a : jl 0x43df89 ; adc dword ptr [rsi + 7], edx ; ret
0x000000000043f494 : jl 0x43f4c1 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043f644 : jl 0x43f672 ; or byte ptr [rax + 0x4f], bh ; syscall
0x000000000043f94a : jl 0x43f978 ; adc byte ptr [rax + 0x101], bh ; syscall
0x000000000043f9cc : jl 0x43f9fa ; adc byte ptr [rax + 3], bh ; syscall
0x000000000043face : jl 0x43faf8 ; or al, ch ; retf 0xfde4
0x000000000043fb5a : jl 0x43fb85 ; or byte ptr [rax + 0x29], cl ; ret
0x0000000000440510 : jl 0x44053e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000447476 : jl 0x4474a4 ; adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000447dd9 : jl 0x447e07 ; adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x00000000004481bf : jl 0x4481ed ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000448ba9 : jl 0x448bd3 ; call r15
0x0000000000448f50 : jl 0x448f7e ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000449c69 : jl 0x449c97 ; xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000044ab75 : jl 0x44aba3 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044d128 : jl 0x44d153 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x000000000044e0cd : jl 0x44e0f7 ; or al, ch ; retf
0x000000000044fc12 : jl 0x44fc3d ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045291c : jl 0x452947 ; and byte ptr [rax + 1], cl ; ret
0x0000000000458fb8 : jl 0x458f82 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045ac9b : jl 0x45acc6 ; and byte ptr [rax - 0x77], cl ; retf 0x30be
0x000000000045cb9c : jl 0x45cbc7 ; and byte ptr [rax + 1], cl ; ret
0x0000000000464965 : jl 0x464901 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000466544 : jl 0x466546 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000473669 : jl 0x473698 ; cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x0000000000475064 : jl 0x4750ca ; add r8b, bpl ; ret
0x000000000047b7dd : jl 0x47b807 ; js 0x47b826 ; call rsp
0x000000000047baf2 : jl 0x47bb1c ; js 0x47bb3b ; call rsp
0x000000000047bcb1 : jl 0x47bcdb ; js 0x47bcfa ; call rsp
0x000000000047beb9 : jl 0x47bee3 ; js 0x47bf02 ; call rsp
0x000000000047d4b7 : jl 0x47d483 ; adc byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000488595 : jl 0x48859e ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000048dbb6 : jl 0x48dbe1 ; sbb byte ptr [rax + 0x63], cl ; retf
0x000000000049ab72 : jl 0x49ab9d ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004a3275 : jl 0x4a3271 ; jmp rax
0x00000000004a3c91 : jl 0x4a3c8e ; call rax
0x00000000004a3c8d : jl 0x4a3c8e ; inc eax ; jl 0x4a3c92 ; call rax
0x00000000004a3c99 : jl 0x4a3c96 ; call qword ptr [rax]
0x00000000004a3c95 : jl 0x4a3c96 ; push rax ; jl 0x4a3c9a ; call qword ptr [rax]
0x00000000004ba312 : jl 0x4ba371 ; leave ; retf
0x00000000004c6a5c : jl 0x4c69ec ; add byte ptr [rax], al ; shl ch, 1 ; cli ; jmp qword ptr [rdx]
0x00000000004238be : jle 0x4238c8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044d592 : jle 0x44d5a5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000467422 : jle 0x4673f0 ; add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x0000000000468523 : jle 0x4684f1 ; add byte ptr [r8 - 0x77], cl ; ret
0x000000000047c84d : jle 0x47c85b ; ret
0x00000000004a3cd5 : jle 0x4a3cd2 ; call rax
0x00000000004a3cdd : jle 0x4a3cda ; call qword ptr [rax]
0x00000000004a3cd9 : jle 0x4a3cda ; push rax ; jle 0x4a3cde ; call qword ptr [rax]
0x00000000004b87c2 : jle 0x4b875b ; xlatb ; retf 0xa1eb
0x00000000004ba385 : jle 0x4ba3c0 ; pop rsp ; sbb ebp, ebx ; retf
0x0000000000421344 : jmp 0x42130a
0x000000000042ce6c : jmp 0x42ce32
0x000000000042e998 : jmp 0x42e966
0x000000000042ea16 : jmp 0x42e9e4
0x000000000042eea8 : jmp 0x42ee76
0x000000000042ef26 : jmp 0x42eef4
0x000000000043d94e : jmp 0x43d914
0x000000000043da1f : jmp 0x43d9e5
0x000000000043da8e : jmp 0x43da54
0x0000000000445943 : jmp 0x445909
0x00000000004482b3 : jmp 0x448281
0x000000000044aa3f : jmp 0x44aa0d
0x0000000000464f2b : jmp 0x464ef1
0x0000000000464f2a : jmp 0x464ef2
0x000000000046a9f0 : jmp 0x46a9b6
0x000000000046bcef : jmp 0x46bcbd
0x000000000046d89b : jmp 0x46d861
0x0000000000479571 : jmp 0x47953f
0x0000000000479c51 : jmp 0x479c1f
0x000000000048425a : jmp 0x480cef
0x000000000048535c : jmp 0x481e0c
0x000000000048a873 : jmp 0x48a841
0x000000000048daab : jmp 0x48da79
0x00000000004911f3 : jmp 0x4911c1
0x000000000049abce : jmp 0x49ab9c
0x00000000004ba389 : jmp 0x4ba357
0x00000000004ba8d6 : jmp 0x4ba8a4
0x0000000000478f01 : jmp 0xffffffffc3571856
0x000000000041c9fc : jmp 0xffffffffcb7b1206
0x000000000041cb6d : jmp 0xffffffffcb7b1377
0x000000000041d6a3 : jmp 0xffffffffcb7b1ead
0x000000000047b323 : jmp 0xffffffffcbd0fb2d
0x00000000004a392b : jmp qword ptr [rax + 0x16fff90f]
0x00000000004a34c3 : jmp qword ptr [rax + 0x20fff8c0]
0x00000000004a34cb : jmp qword ptr [rax + 0x20fff8c1]
0x00000000004a366b : jmp qword ptr [rax - 0x1f000724]
0x000000000041cbd9 : jmp qword ptr [rax]
0x00000000004c1bfb : jmp qword ptr [rbx]
0x00000000004bfd73 : jmp qword ptr [rcx]
0x00000000004bafc4 : jmp qword ptr [rdi]
0x00000000004a399b : jmp qword ptr [rdx + 0x22fff911]
0x00000000004a3993 : jmp qword ptr [rdx + 0x22fff912]
0x00000000004a398b : jmp qword ptr [rdx + 0x22fff913]
0x00000000004a3983 : jmp qword ptr [rdx + 0x22fff914]
0x00000000004a397b : jmp qword ptr [rdx + 0x22fff915]
0x00000000004bdd0f : jmp qword ptr [rdx - 0x1d00023a]
0x00000000004a37a7 : jmp qword ptr [rdx]
0x00000000004a3457 : jmp qword ptr [rsi - 0x3d]
0x00000000004a3703 : jmp qword ptr [rsi]
0x0000000000421579 : jmp r10
0x0000000000476e30 : jmp r11
0x0000000000499ef0 : jmp r8
0x000000000042fb70 : jmp r9
0x00000000004008e5 : jmp rax
0x0000000000476e31 : jmp rbx
0x00000000004204fe : jmp rcx
0x00000000004c572b : jmp rdi
0x000000000042157a : jmp rdx
0x00000000004a36f3 : jmp rsi
0x00000000004a385f : jmp rsp
0x00000000004005db : jne 0x4005e0 ; ret
0x000000000040dcb4 : jne 0x40dc92 ; ret
0x000000000040dce5 : jne 0x40dd1f ; mov eax, 0xba ; syscall
0x000000000040fc1b : jne 0x40fc31 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410bfc : jne 0x410c03 ; pop rbx ; ret
0x00000000004133c5 : jne 0x4133d2 ; ret
0x0000000000414b41 : jne 0x414b33 ; ret
0x0000000000415851 : jne 0x415868 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000415ba2 : jne 0x415b8d ; pop rbx ; ret
0x0000000000415bdc : jne 0x415bd5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000416496 : jne 0x41648b ; ret
0x000000000041da60 : jne 0x41da23 ; ret
0x00000000004214e4 : jne 0x4214f6 ; lea rax, qword ptr [rip + 3] ; ret
0x0000000000425fe9 : jne 0x426045 ; xor rax, rax ; ret
0x0000000000425fa9 : jne 0x426069 ; xor rax, rax ; ret
0x000000000042608a : jne 0x42609d ; lea rax, qword ptr [rip + 0x1d] ; ret
0x000000000042676a : jne 0x426753 ; ret
0x00000000004268d3 : jne 0x4267bf ; mov rax, rdi ; ret
0x0000000000426829 : jne 0x426815 ; mov rax, rdi ; ret
0x0000000000426d50 : jne 0x426d62 ; lea rax, qword ptr [rip + 0x67] ; ret
0x0000000000426da3 : jne 0x426db5 ; lea rax, qword ptr [rip + 4] ; ret
0x000000000042c348 : jne 0x42c220 ; ret
0x000000000042c289 : jne 0x42c273 ; ret
0x000000000042e4dc : jne 0x42e4c6 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042facd : jne 0x42faf7 ; xor eax, eax ; ret
0x000000000042f0c1 : jne 0x42fafb ; xor eax, eax ; ret
0x000000000042f0e9 : jne 0x42fb07 ; xor eax, eax ; ret
0x000000000043bcf5 : jne 0x43bc86 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043bcc7 : jne 0x43bc86 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043bcc6 : jne 0x43bc87 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043d454 : jne 0x43d668 ; xor eax, eax ; ret
0x000000000043d659 : jne 0x43d679 ; xor eax, eax ; ret
0x000000000043d501 : jne 0x43d67d ; xor eax, eax ; ret
0x000000000043d671 : jne 0x43d67e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000043d781 : jne 0x43d772 ; ret
0x000000000043d831 : jne 0x43d822 ; ret
0x000000000043d9a1 : jne 0x43d996 ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000043daf1 : jne 0x43dae6 ; sub rax, 1 ; ret
0x000000000043f317 : jne 0x43f334 ; mov eax, 2 ; syscall
0x000000000043f377 : jne 0x43f394 ; mov eax, 0 ; syscall
0x000000000043f3d7 : jne 0x43f3f4 ; mov eax, 1 ; syscall
0x0000000000440828 : jne 0x440810 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000044262a : jne 0x442628 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000044269a : jne 0x442698 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004427e2 : jne 0x4427d9 ; pop rdx ; pop r10 ; ret
0x00000000004427d2 : jne 0x4427e4 ; nop ; mov eax, 0xca ; syscall
0x00000000004429b3 : jne 0x4429ad ; xor eax, eax ; leave ; ret
0x0000000000452231 : jne 0x45221d ; mov rax, rsi ; ret
0x00000000004522b5 : jne 0x452295 ; mov rax, rsi ; ret
0x0000000000463b41 : jne 0x463b33 ; ret
0x0000000000465713 : jne 0x46571e ; xor rax, rax ; ret
0x00000000004668e5 : jne 0x4668f2 ; mov dword ptr [r9 + 8], esi ; ret
0x0000000000466f8b : jne 0x466f46 ; mov rax, rdx ; ret
0x0000000000466fcc : jne 0x466fc3 ; ret
0x000000000046ad57 : jne 0x46ad74 ; mov eax, 3 ; syscall
0x000000000046aee7 : jne 0x46af04 ; mov eax, 0x14 ; syscall
0x000000000046b263 : jne 0x46b215 ; xor eax, eax ; ret
0x000000000046b217 : jne 0x46b26b ; ret
0x000000000046b25f : jne 0x46b26d ; test ecx, ecx ; jne 0x46b219 ; xor eax, eax ; ret
0x000000000047400a : jne 0x473fb0 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000473ff8 : jne 0x473fd3 ; ret
0x0000000000474117 : jne 0x47412a ; mov rax, qword ptr [rip + 0x258c50] ; ret
0x0000000000474160 : jne 0x474133 ; ret
0x0000000000476976 : jne 0x4769b3 ; ret
0x0000000000476975 : jne 0x4769b4 ; ret
0x00000000004785c3 : jne 0x4785d6 ; add rsp, 0x38 ; ret
0x0000000000478665 : jne 0x478678 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047873d : jne 0x478780 ; xor eax, eax ; add rsp, 0x68 ; ret
0x00000000004787f5 : jne 0x478808 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047a9c0 : jne 0x47a9d6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047c864 : jne 0x47c858 ; mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000047e178 : jne 0x47e135 ; nop word ptr [rax + rax] ; call rbx
0x00000000004918c0 : jne 0x4918d2 ; lea rax, qword ptr [rip + 0x67] ; ret
0x0000000000491913 : jne 0x491925 ; lea rax, qword ptr [rip + 4] ; ret
0x000000000049c213 : jne 0x49c20c ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000049c277 : jne 0x49c26c ; mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000049c51b : jne 0x49c514 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c647 : jne 0x49c640 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c7eb : jne 0x49c7e4 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049cb64 : jne 0x49cb5b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049cbc4 : jne 0x49cbbb ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049e049 : jne 0x49e053 ; ret
0x000000000049e064 : jne 0x49e073 ; ret
0x000000000049e284 : jne 0x49e293 ; ret
0x000000000049e683 : jne 0x49e692 ; mov eax, 8 ; ret
0x000000000049ea75 : jne 0x49ea63 ; pop rbx ; ret
0x000000000049eac0 : jne 0x49eaa0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049ebe5 : jne 0x49ebcb ; pop rbx ; ret
0x00000000004a3265 : jne 0x4a3261 ; call qword ptr [rax]
0x00000000004b8837 : jne 0x4b8801 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004ba7cb : jne 0x4ba7f2 ; retf 0x32dd
0x00000000004260ab : jno 0x42610f ; add dword ptr [rax], eax ; ret
0x000000000042f37e : jno 0x42f38d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000435760 : jno 0x435769 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000043599a : jno 0x4359a3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000435b01 : jno 0x435b12 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000435c66 : jno 0x435cea ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000004668e3 : jno 0x4668f2 ; jne 0x4668f4 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000004668e9 : jno 0x4668f6 ; ret
0x000000000046891b : jno 0x468962 ; add byte ptr es:[rax - 0x7d], cl ; ret
0x0000000000478df4 : jno 0x478e46 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004a3410 : jno 0x4a33d9 ; clc ; push rcx ; ret 0xfff8
0x000000000041235b : jnp 0x4123cf ; syscall
0x0000000000474a61 : jnp 0x474abf ; and eax, 0x89485300 ; ret
0x00000000004a3271 : jnp 0x4a3271 ; call qword ptr [rax - 0x1f000784]
0x00000000004a3270 : jnp 0x4a3272 ; call qword ptr [rax - 0x1f000784]
0x00000000004b8a62 : jnp 0x4b8ab0 ; mov gs, ebp ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4b8ad9 ; salc ; retf
0x00000000004b91e5 : jnp 0x4b91a2 ; ret
0x00000000004ba1e2 : jnp 0x4ba240 ; retf
0x00000000004ba5e9 : jnp 0x4ba636 ; retf 0x99e0
0x00000000004bb249 : jnp 0x4bb28a ; retf
0x00000000004bdbed : jnp 0x4bdbf2 ; inc dword ptr [rax] ; jge 0x4bdbf6 ; jmp rax
0x00000000004c5dfd : jnp 0x4c5e05 ; add al, al ; push rbx ; cli ; jmp rsp
0x000000000042ade7 : jns 0x42adc2 ; retf 0xead3
0x000000000042af37 : jns 0x42af12 ; retf 0xead3
0x000000000042b087 : jns 0x42b062 ; retf 0xead3
0x000000000042b1d7 : jns 0x42b1b2 ; retf 0xead3
0x000000000042b327 : jns 0x42b302 ; retf 0xead3
0x000000000042b477 : jns 0x42b452 ; retf 0xead3
0x000000000042b5c7 : jns 0x42b5a2 ; retf 0xead3
0x000000000042b717 : jns 0x42b6f2 ; retf 0xead3
0x000000000042b867 : jns 0x42b842 ; retf 0xead3
0x000000000042b9b7 : jns 0x42b992 ; retf 0xead3
0x000000000042bb07 : jns 0x42bae2 ; retf 0xead3
0x000000000042bc57 : jns 0x42bc32 ; retf 0xead3
0x000000000042bda7 : jns 0x42bd82 ; retf 0xead3
0x000000000042bef7 : jns 0x42bed2 ; retf 0xead3
0x000000000042c047 : jns 0x42c022 ; retf 0xead3
0x0000000000435767 : jns 0x43576a ; ret
0x00000000004359a1 : jns 0x4359a4 ; ret
0x0000000000435b08 : jns 0x435b13 ; ret
0x000000000046a16c : jns 0x46a17b ; add byte ptr [rax - 0x77], cl ; retf 0x2d75
0x000000000046f56c : jns 0x46f57a ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x00000000004961e7 : jns 0x4961c2 ; retf 0xead3
0x0000000000496367 : jns 0x496342 ; retf 0xead3
0x00000000004964e7 : jns 0x4964c2 ; retf 0xead3
0x0000000000496667 : jns 0x496642 ; retf 0xead3
0x00000000004967e7 : jns 0x4967c2 ; retf 0xead3
0x0000000000496967 : jns 0x496942 ; retf 0xead3
0x0000000000496ae7 : jns 0x496ac2 ; retf 0xead3
0x0000000000496c67 : jns 0x496c42 ; retf 0xead3
0x0000000000496de7 : jns 0x496dc2 ; retf 0xead3
0x0000000000496f67 : jns 0x496f42 ; retf 0xead3
0x00000000004970e7 : jns 0x4970c2 ; retf 0xead3
0x0000000000497267 : jns 0x497242 ; retf 0xead3
0x00000000004973e7 : jns 0x4973c2 ; retf 0xead3
0x0000000000497567 : jns 0x497542 ; retf 0xead3
0x00000000004976e7 : jns 0x4976c2 ; retf 0xead3
0x000000000049c104 : jns 0x49c147 ; add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004a3c65 : jns 0x4a3c62 ; jmp qword ptr [rax]
0x00000000004b82ee : jns 0x4b8284 ; ret 0xf869
0x00000000004b82ed : jns 0x4b8285 ; ret 0xf869
0x00000000004bdbe9 : jns 0x4bdbea ; jmp qword ptr [rax]
0x00000000004bdbe8 : jns 0x4bdbeb ; jmp qword ptr [rax]
0x00000000004c34e9 : jns 0x4c34e5 ; call qword ptr [rcx]
0x000000000043e26b : jns 0xffffffffe9336c55 ; retf
0x000000000040f6bd : jo 0x40f6de ; add al, bpl ; retf 0xff21
0x0000000000411b73 : jo 0x411b33 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000413244 : jo 0x413295 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043f41c : jo 0x43f472 ; add byte ptr [rax], al ; ret
0x000000000044587d : jo 0x4458ed ; add byte ptr [rdi + 0x6cc6d8], r15b ; call rax
0x000000000044597c : jo 0x4459ec ; add byte ptr [rdi + 0x6cc6d8], r15b ; call rax
0x000000000045870c : jo 0x4586dc ; sti ; inc dword ptr [rbx - 0x7af00008] ; retf 0xfffd
0x0000000000463bba : jo 0x463bd2 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004670dc : jo 0x4670f0 ; xchg eax, ebp ; ret 0x8b4c
0x000000000047a69a : jo 0x47a627 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000047a699 : jo 0x47a628 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000049abca : jo 0x49abd2 ; add byte ptr [rax], al ; jmp 0x49aba0
0x00000000004a3154 : jo 0x4a315d ; clc ; inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x00000000004a328c : jo 0x4a3219 ; clc ; inc eax ; test eax, edi ; call qword ptr [rax]
0x00000000004a3259 : jo 0x4a3259 ; push qword ptr [rax] ; jb 0x4a325d ; call rax
0x00000000004a3244 : jo 0x4a32b1 ; clc ; call qword ptr [rax]
0x00000000004a3264 : jo 0x4a32de ; clc ; call qword ptr [rax]
0x00000000004b8a68 : jo 0x4b8ad3 ; salc ; retf
0x00000000004b9364 : jo 0x4b93de ; mov ebp, 0xfb67d10d ; ret
0x00000000004be370 : jo 0x4be39e ; hlt ; call rdi
0x00000000004bff40 : jo 0x4bff9a ; cmc ; call qword ptr [rcx]
0x00000000004c0ce0 : jo 0x4c0ca4 ; cmc ; call qword ptr [rcx]
0x00000000004c11a1 : jo 0x4c11a7 ; retf 0xe0a
0x00000000004c61f0 : jo 0x4c6182 ; cli ; call rsi
0x00000000004c67d0 : jo 0x4c67af ; cli ; jmp rdi
0x00000000004267b5 : jp 0x4267af ; ret 0x7401
0x0000000000432786 : jp 0x43277a ; ret
0x00000000004327e9 : jp 0x4327dd ; ret
0x000000000043277f : jp 0x432809 ; jb 0x43276c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000432784 : jp 0x432809 ; jp 0x43277c ; ret
0x0000000000464f29 : jp 0x464f6e ; jmp 0x464ef3
0x000000000047b51e : jp 0x47b533 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000004b94f3 : jp 0x4b94ad ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000043499a : jrcxz 0x434995 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434999 : jrcxz 0x434996 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000442833 : jrcxz 0x4427f8 ; cmp r11d, 0xa ; je 0x442844 ; ret
0x0000000000447edc : jrcxz 0x447ec9 ; retf
0x000000000045b406 : jrcxz 0x45b47f ; ret
0x000000000045d418 : jrcxz 0x45d412 ; ret 0xf40
0x00000000004a35d9 : jrcxz 0x4a35d9 ; push qword ptr [rax] ; in eax, 0xf8 ; call qword ptr [rax]
0x00000000004a35f9 : jrcxz 0x4a35f5 ; jmp rax
0x00000000004b8145 : jrcxz 0x4b819f ; ret
0x00000000004ba30d : jrcxz 0x4ba2d0 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004bae69 : jrcxz 0x4bae4d ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x00000000004092fc : js 0x40931f ; mov qword ptr [rsp + 8], rax ; call 0x405d69
0x000000000040930f : js 0x40932a ; mov qword ptr [rsp + 8], rax ; call 0x405d69
0x0000000000409322 : js 0x409335 ; mov qword ptr [rsp + 8], rax ; call 0x405d69
0x000000000040933a : js 0x40935d ; mov qword ptr [rsp + 8], rax ; call 0x405d69
0x000000000040934d : js 0x409368 ; mov qword ptr [rsp + 8], rax ; call 0x405d69
0x0000000000409a66 : js 0x409a80 ; mov qword ptr [rsp], rax ; call 0x405d68
0x0000000000409a77 : js 0x409a89 ; mov qword ptr [rsp], rax ; call 0x405d68
0x0000000000409a8d : js 0x409aaf ; mov qword ptr [rsp], rax ; call 0x405d68
0x0000000000409a9e : js 0x409ab8 ; mov qword ptr [rsp], rax ; call 0x405d68
0x0000000000409aaf : js 0x409ac1 ; mov qword ptr [rsp], rax ; call 0x405d68
0x0000000000409ac5 : js 0x409ae7 ; mov qword ptr [rsp], rax ; call 0x405d68
0x0000000000409ad6 : js 0x409af0 ; mov qword ptr [rsp], rax ; call 0x405d68
0x0000000000409ae7 : js 0x409af9 ; mov qword ptr [rsp], rax ; call 0x405d68
0x0000000000409afd : js 0x409b1f ; mov qword ptr [rsp], rax ; call 0x405d68
0x0000000000409b0e : js 0x409b28 ; mov qword ptr [rsp], rax ; call 0x405d68
0x0000000000409b1f : js 0x409b31 ; mov qword ptr [rsp], rax ; call 0x405d68
0x0000000000409b35 : js 0x409b57 ; mov qword ptr [rsp], rax ; call 0x405d68
0x0000000000409b46 : js 0x409b60 ; mov qword ptr [rsp], rax ; call 0x405d68
0x000000000044262f : js 0x44268f ; pop rbp ; ret
0x000000000044269f : js 0x4426ff ; pop rbp ; ret
0x000000000044861e : js 0x44866f ; mov edi, dword ptr [rsp + 0x28] ; call r14
0x000000000044b208 : js 0x44b259 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000044c068 : js 0x44c0b9 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000471452 : js 0x47145b ; pop rbx ; ret
0x000000000047a69d : js 0x47a6ab ; ret
0x000000000047b7df : js 0x47b824 ; call rsp
0x000000000047baf4 : js 0x47bb39 ; call rsp
0x000000000047bc73 : js 0x47bcb8 ; call rsp
0x000000000047bcb3 : js 0x47bcf8 ; call rsp
0x000000000047bcae : js 0x47bcff ; lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047be76 : js 0x47bebb ; call rsp
0x000000000047bebb : js 0x47bf00 ; call rsp
0x000000000049c445 : js 0x49c452 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000049c452 : js 0x49c45e ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a3c45 : js 0x4a3c42 ; jmp qword ptr [rax]
0x00000000004a3c59 : js 0x4a3c5a ; inc eax ; js 0x4a3c5e ; jmp rax
0x00000000004a3c5d : js 0x4a3c5a ; jmp rax
0x00000000004a3c61 : js 0x4a3c62 ; inc dword ptr [rax] ; jns 0x4a3c66 ; jmp qword ptr [rax]
0x00000000004ba1e1 : js 0x4ba261 ; pop rdx ; retf
0x00000000004c16c8 : js 0x4c170e ; idiv bh ; ret
0x00000000004c2f48 : js 0x4c2f8a ; clc ; call qword ptr [rax]
0x00000000004c44c8 : js 0x4c454c ; stc ; call rdi
0x00000000004c60d8 : js 0x4c605e ; cli ; jmp rdi
0x00000000004c7028 : js 0x4c7045 ; sti ; call qword ptr [rax]
0x000000000041fd5d : lahf ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x0000000000443972 : lahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x00000000004438b8 : lahf ; insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf
0x00000000004438e5 : lahf ; insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x00000000004ba823 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000047400b : lahf ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000042b8ed : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004ba112 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004ba914 : lahf ; push -0x57d3205 ; call 0xffffffffab597416
0x00000000004b8920 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000440588 : lahf ; ret
0x0000000000485dfc : lahf ; ret 0x2941
0x000000000040fc9e : lahf ; ret 0x3841
0x000000000044058e : lahf ; ret 0x3845
0x00000000004b807d : lahf ; ret 0x871e
0x0000000000483fd1 : lahf ; ret 0xb60f
0x0000000000486a68 : lahf ; ret 0xd129
0x0000000000486adf : lahf ; ret 0xd629
0x00000000004869f1 : lahf ; ret 0xd729
0x000000000043e349 : lahf ; ret 0xea81
0x000000000049b7a6 : lahf ; ret 0xf45
0x00000000004422fd : lahf ; retf 0xfffc
0x00000000004bdd44 : lahf ; retf 0xfffd
0x00000000004bdc81 : lahf ; std ; call qword ptr [rax - 0x2f00025f]
0x000000000042bf7d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004bdd4b : lcall ptr [rax] ; retf
0x00000000004110a3 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000048825a : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044ccc3 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000451ae2 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000410eed : lcall ptr [rbx + 0x5d] ; ret
0x0000000000474a96 : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x000000000041ffd3 : lcall ptr [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000004bdd43 : lcall ptr [rdi - 0x4000236] ; retf
0x0000000000435026 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000415beb : lea eax, dword ptr [r8 - 1] ; ret
0x000000000046b28b : lea eax, dword ptr [rax + 0x493afe7e] ; cmove eax, ecx ; ret
0x0000000000426014 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x0000000000426024 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x0000000000425ff4 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x0000000000415bec : lea eax, dword ptr [rax - 1] ; ret
0x00000000004c7025 : lea eax, dword ptr [rax] ; add byte ptr [rax + 0x18], bh ; sti ; call qword ptr [rax]
0x0000000000465b1d : lea eax, dword ptr [rcx + rsi] ; ret
0x000000000043d9a4 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000043ba1c : lea eax, dword ptr [rdi + 0x10] ; ret
0x000000000043ba31 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000043ba4f : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000043ba6f : lea eax, dword ptr [rdi + 0x13] ; ret
0x000000000043ba92 : lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000043bab1 : lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000043bad1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x000000000043baf1 : lea eax, dword ptr [rdi + 0x17] ; ret
0x000000000043bb14 : lea eax, dword ptr [rdi + 0x18] ; ret
0x000000000043bb39 : lea eax, dword ptr [rdi + 0x19] ; ret
0x000000000043bb57 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x000000000043bb77 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x000000000043bb93 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x000000000043bbb3 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x000000000043bbd3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x000000000043bbf3 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x000000000043b96d : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000043b98d : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000043b9af : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000043b9cf : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000043b9ef : lea eax, dword ptr [rdi + 0xe] ; ret
0x000000000043ba09 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000043b8b7 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000043b8ca : lea eax, dword ptr [rdi + 2] ; ret
0x000000000043b8d5 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000043b8e8 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000043b8fd : lea eax, dword ptr [rdi + 5] ; ret
0x000000000043b91b : lea eax, dword ptr [rdi + 6] ; ret
0x000000000043b927 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000043b93a : lea eax, dword ptr [rdi + 8] ; ret
0x000000000043b94f : lea eax, dword ptr [rdi + 9] ; ret
0x0000000000426049 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x0000000000426059 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000425f43 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x000000000042ce17 : lea eax, dword ptr [rdi + rax] ; ret
0x0000000000465a19 : lea eax, dword ptr [rdi + rsi] ; ret
0x0000000000478108 : lea eax, dword ptr [rdi - 1] ; cmp rax, -3 ; jbe 0x478121 ; ret
0x000000000043b8a3 : lea eax, dword ptr [rdi] ; ret
0x000000000043ae8d : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000043aead : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000043aecf : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000043aeef : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000043af0f : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000043ad9f : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000043adc7 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000043addd : lea eax, dword ptr [rdx + 2] ; ret
0x000000000043adf5 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000043ae0b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000043ae1d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000043ae3b : lea eax, dword ptr [rdx + 6] ; ret
0x000000000043ad47 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000043ae4d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000043ae6d : lea eax, dword ptr [rdx + 9] ; ret
0x0000000000415bde : lea eax, dword ptr [rdx + rdi] ; ret
0x000000000043e41c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004170c6 : lea eax, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000043adb5 : lea eax, dword ptr [rdx] ; ret
0x0000000000426c37 : lea eax, dword ptr [rip + 0x12ad3] ; ret
0x0000000000423707 : lea eax, dword ptr [rip + 0x14853] ; ret
0x00000000004260a9 : lea eax, dword ptr [rip + 0x15e71] ; ret
0x0000000000426683 : lea eax, dword ptr [rip + 0x17647] ; ret
0x0000000000421294 : lea eax, dword ptr [rip + 0x1a966] ; ret
0x000000000042608d : lea eax, dword ptr [rip + 0x1d] ; ret
0x0000000000426d53 : lea eax, dword ptr [rip + 0x67] ; ret
0x00000000004260a1 : lea eax, dword ptr [rip + 0x8449] ; ret
0x00000000004214e7 : lea eax, dword ptr [rip + 3] ; ret
0x0000000000426da6 : lea eax, dword ptr [rip + 4] ; ret
0x00000000004c52a5 : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000044c900 : lea eax, dword ptr [rsp + 0x88] ; call r15
0x0000000000469fbf : lea ebp, dword ptr [rcx] ; add byte ptr es:[rax - 0x7d], cl ; ret
0x000000000047be6f : lea ebx, dword ptr [rdx + rax] ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004b8931 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000049c975 : lea ebx, dword ptr [rsp + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x0000000000466a20 : lea ecx, dword ptr [rax + 1] ; call rbx
0x000000000042fbc7 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000043b13e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000004640a1 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000046b007 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000464fd7 : lea ecx, dword ptr [rsp + 0x10] ; call rbx
0x00000000004650b0 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000466b35 : lea ecx, dword ptr [rsp + 0x20] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000466e50 : lea ecx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000466d4e : lea ecx, dword ptr [rsp + 0x60] ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046fad6 : lea edi, dword ptr [rax + 0x6cb1e0] ; call rdx
0x00000000004022bc : lea edi, dword ptr [rbx + 0x80] ; call rax
0x000000000040e1ac : lea edi, dword ptr [rbx + rsi] ; call rax
0x0000000000426826 : lea edi, dword ptr [rdi + 0x10] ; jne 0x426818 ; mov rax, rdi ; ret
0x000000000042c286 : lea edi, dword ptr [rdi + 0x10] ; jne 0x42c276 ; ret
0x0000000000403d38 : lea edi, dword ptr [rsi + 0x80] ; call 8
0x000000000047b7dc : lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047bb82 : lea edi, dword ptr [rsp + 0x80] ; call r12
0x000000000047b98f : lea edi, dword ptr [rsp + 0x88] ; call r14
0x000000000041649b : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000465280 : lea edx, dword ptr [rbp - 0x40] ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000042fc94 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000464e2d : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000421576 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000430088 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000463fe1 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000464fd2 : lea edx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x0000000000466bdd : lea edx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000467240 : lea edx, dword ptr [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044c826 : lea edx, dword ptr [rsp + 0x80] ; call r12
0x0000000000485ebc : lea esi, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048ccf5 : lea esi, dword ptr [rax*8 + 0x4b7dc8] ; call 0x478fc9
0x0000000000466d53 : lea esi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000466a1b : lea esi, dword ptr [rsp + 0x30] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000466b3a : lea esi, dword ptr [rsp + 0x40] ; call rbx
0x000000000046b3ad : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040f681 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000421575 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000040e1ab : lea r15, qword ptr [rbx + r14] ; call rax
0x000000000044c8ff : lea r8, qword ptr [rsp + 0x88] ; call r15
0x00000000004c7024 : lea r8d, dword ptr [rax] ; add byte ptr [rax + 0x18], bh ; sti ; call qword ptr [rax]
0x000000000042fbc6 : lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000464fd6 : lea r9, qword ptr [rsp + 0x10] ; call rbx
0x00000000004650af : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000426013 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000426023 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000425ff3 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000465b1c : lea rax, qword ptr [rcx + rsi] ; ret
0x000000000043d9a3 : lea rax, qword ptr [rcx - 1] ; ret
0x000000000043ba1b : lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043ba30 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043ba4e : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043ba6e : lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043ba91 : lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043bab0 : lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043bad0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043baf0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043bb13 : lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043bb38 : lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043bb56 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000043bb76 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000043bb92 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043bbb2 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043bbd2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043bbf2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043b96c : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b98c : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b9ae : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043b9ce : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043b9ee : lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043ba08 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b8b6 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b8c9 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b8d4 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000043b8e7 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b8fc : lea rax, qword ptr [rdi + 5] ; ret
0x000000000043b91a : lea rax, qword ptr [rdi + 6] ; ret
0x000000000043b926 : lea rax, qword ptr [rdi + 7] ; ret
0x000000000043b939 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b94e : lea rax, qword ptr [rdi + 9] ; ret
0x0000000000426048 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000426058 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000425f42 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042ce16 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000465a18 : lea rax, qword ptr [rdi + rsi] ; ret
0x000000000043b8a2 : lea rax, qword ptr [rdi] ; ret
0x000000000043ae8c : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043aeac : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000043aece : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000043aeee : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043af0e : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000043ad9e : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000043adc6 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000043addc : lea rax, qword ptr [rdx + 2] ; ret
0x000000000043adf4 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000043ae0a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000043ae1c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000043ae3a : lea rax, qword ptr [rdx + 6] ; ret
0x000000000043ad46 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000043ae4c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000043ae6c : lea rax, qword ptr [rdx + 9] ; ret
0x000000000043adb4 : lea rax, qword ptr [rdx] ; ret
0x0000000000426c36 : lea rax, qword ptr [rip + 0x12ad3] ; ret
0x0000000000423706 : lea rax, qword ptr [rip + 0x14853] ; ret
0x00000000004260a8 : lea rax, qword ptr [rip + 0x15e71] ; ret
0x0000000000426682 : lea rax, qword ptr [rip + 0x17647] ; ret
0x0000000000421293 : lea rax, qword ptr [rip + 0x1a966] ; ret
0x000000000042608c : lea rax, qword ptr [rip + 0x1d] ; ret
0x0000000000426d52 : lea rax, qword ptr [rip + 0x67] ; ret
0x00000000004260a0 : lea rax, qword ptr [rip + 0x8449] ; ret
0x00000000004214e6 : lea rax, qword ptr [rip + 3] ; ret
0x0000000000426da5 : lea rax, qword ptr [rip + 4] ; ret
0x000000000049c974 : lea rbx, qword ptr [r12 + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x000000000043b13d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000466a1f : lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000046b006 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000403d37 : lea rdi, qword ptr [r14 + 0x80] ; call 9
0x000000000046fad5 : lea rdi, qword ptr [rax + 0x6cb1e0] ; call rdx
0x00000000004022bb : lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000426825 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x426819 ; mov rax, rdi ; ret
0x000000000042c285 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x42c277 ; ret
0x000000000047b7db : lea rdi, qword ptr [rsp + 0x78] ; call r12
0x000000000047bb81 : lea rdi, qword ptr [rsp + 0x80] ; call r12
0x000000000047b98e : lea rdi, qword ptr [rsp + 0x88] ; call r14
0x000000000042fc93 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000430087 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x000000000046723f : lea rdx, qword ptr [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044c825 : lea rdx, qword ptr [rsp + 0x80] ; call r12
0x0000000000466d52 : lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000466a1a : lea rsi, qword ptr [rsp + 0x30] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000466b39 : lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000046b3ac : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004a3351 : leave ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf 0x42
0x00000000004880e6 : leave ; cmove rax, rdx ; ret
0x000000000047adf5 : leave ; insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000043d780 : leave ; jne 0x43d773 ; ret
0x000000000043d830 : leave ; jne 0x43d823 ; ret
0x000000000043daf0 : leave ; jne 0x43dae7 ; sub rax, 1 ; ret
0x0000000000466f8a : leave ; jne 0x466f47 ; mov rax, rdx ; ret
0x000000000046b262 : leave ; jne 0x46b216 ; xor eax, eax ; ret
0x0000000000499ee8 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x0000000000444b30 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000004429a8 : leave ; ret
0x000000000041dbb7 : leave ; retf
0x00000000004b8ae1 : leave ; retf 0x6ee8
0x00000000004b7c09 : leave ; retf 0xcccb
0x00000000004c3c29 : leave ; std ; call qword ptr [rbx]
0x00000000004bdd39 : leave ; std ; call rdx
0x00000000004bdce7 : ljmp ptr [rax - 0x3e] ; std ; inc eax ; ret 0xfffd
0x00000000004bdcd3 : ljmp ptr [rax] ; ret
0x00000000004be1fb : ljmp ptr [rbx + rbp*8] ; std ; call rsp
0x00000000004be1f7 : ljmp ptr [rbx + rbp*8] ; std ; ljmp ptr [rbx + rbp*8] ; std ; call rsp
0x00000000004bddf3 : ljmp ptr [rdi + rdx*8] ; std ; dec dword ptr [rax + rbx*8] ; std ; jmp rsp
0x000000000040fae0 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047a685 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042e8ce : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047fd1f : lock inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004233d0 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047ab9a : lodsb al, byte ptr [rsi] ; add byte ptr [r15 + 0x6cc9c4], r15b ; call rdx
0x000000000043d100 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000048b5fe : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c1f8c : lodsb al, byte ptr [rsi] ; cmp al, 0 ; add byte ptr [rax], dh ; retf 0xfff7
0x000000000047a9e0 : lodsb al, byte ptr [rsi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004ba206 : lodsb al, byte ptr [rsi] ; loop 0x4ba1d3 ; retf
0x00000000004782df : lodsb al, byte ptr [rsi] ; mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4782f9 ; ret
0x00000000004bafbd : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004bdc99 : lodsb al, byte ptr [rsi] ; std ; call qword ptr [rax]
0x00000000004b8a66 : lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4b8ad5 ; salc ; retf
0x00000000004b883b : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000046b264 : lodsb al, byte ptr [rsi] ; xor eax, eax ; ret
0x000000000040746d : lodsd eax, dword ptr [rsi] ; and al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x00000000004ba5e5 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000495260 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041a05b : lodsd eax, dword ptr [rsi] ; or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x000000000046dc07 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000405545 : loop 0x40554d ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000405639 : loop 0x405641 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000041bdca : loop 0x41bdd9 ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x418029
0x000000000042e4dd : loop 0x42e515 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000043490a : loop 0x434905 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434909 : loop 0x434906 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000045c98b : loop 0x45c918 ; ret
0x0000000000469cb5 : loop 0x469d08 ; mov edi, eax ; mov rsi, r14 ; call 0x4267b9
0x00000000004a3555 : loop 0x4a3555 ; push qword ptr [rax] ; in al, 0xf8 ; call qword ptr [rax]
0x00000000004a3575 : loop 0x4a3575 ; inc dword ptr [rax] ; in al, 0xf8 ; jmp rax
0x00000000004ba207 : loop 0x4ba1d2 ; retf
0x00000000004bb35a : loop 0x4bb3af ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004056c9 : loope 0x4056d1 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000405731 : loope 0x405739 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000042c822 : loope 0x42c879 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x000000000043487a : loope 0x434875 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434879 : loope 0x434876 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043be2b : loope 0x43be35 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043e51e : loope 0x43e515 ; ret
0x000000000044437f : loope 0x44438a ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x00000000004457e3 : loope 0x445863 ; sub byte ptr [rax], al ; ret
0x00000000004457f3 : loope 0x445873 ; sub byte ptr [rax], al ; ret
0x000000000046679e : loope 0x4667b3 ; je 0x4667c4 ; ret
0x000000000046abcc : loope 0x46ab59 ; ret 0xf631
0x0000000000478df7 : loope 0x478e49 ; mov dword ptr [rdi], ecx ; ret
0x0000000000478e28 : loope 0x478e7b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000478e9d : loope 0x478ef0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000049ebe6 : loope 0x49ec45 ; ret
0x00000000004a3595 : loope 0x4a3591 ; call rax
0x00000000004a35f5 : loope 0x4a35f5 ; inc dword ptr [rax] ; jrcxz 0x4a35f9 ; jmp rax
0x00000000004ba311 : loope 0x4ba393 ; pop rdx ; leave ; retf
0x0000000000400cd0 : loopne 0x400ce7 ; mov dword ptr [r8], eax ; pop rbx ; ret
0x000000000040fb56 : loopne 0x40fb7c ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000040fc36 : loopne 0x40fc5c ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004129c9 : loopne 0x412a30 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412a77 : loopne 0x412ade ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004145c6 : loopne 0x41462a ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416c95 : loopne 0x416cf9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042090b : loopne 0x42096d ; pop rbp ; pop r12 ; ret
0x000000000042655d : loopne 0x4265c1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004265f2 : loopne 0x426656 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042cadd : loopne 0x42cb35 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004300e1 : loopne 0x4300f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004300e0 : loopne 0x4300f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430231 : loopne 0x430248 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430230 : loopne 0x430249 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430381 : loopne 0x430398 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430380 : loopne 0x430399 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004304d1 : loopne 0x4304e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004304d0 : loopne 0x4304e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430621 : loopne 0x430638 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430620 : loopne 0x430639 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430771 : loopne 0x430788 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430770 : loopne 0x430789 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004308c1 : loopne 0x4308d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004308c0 : loopne 0x4308d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a0f : loopne 0x430a26 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a0e : loopne 0x430a27 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b61 : loopne 0x430b78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b60 : loopne 0x430b79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430cb1 : loopne 0x430cc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430cb0 : loopne 0x430cc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e01 : loopne 0x430e18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e00 : loopne 0x430e19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f51 : loopne 0x430f68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f50 : loopne 0x430f69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004310a1 : loopne 0x4310b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004310a0 : loopne 0x4310b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004311f1 : loopne 0x431208 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004311f0 : loopne 0x431209 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431341 : loopne 0x431358 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431340 : loopne 0x431359 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432782 : loopne 0x43274f ; jp 0x43280b ; jp 0x43277e ; ret
0x000000000043dca5 : loopne 0x43dcf6 ; sub eax, edx ; vzeroupper ; ret
0x000000000043dca4 : loopne 0x43dcf7 ; sub eax, edx ; vzeroupper ; ret
0x00000000004425ba : loopne 0x44260d ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000442898 : loopne 0x4428ad ; cmp eax, 4 ; je 0x4428a7 ; ret
0x0000000000444382 : loopne 0x4443e2 ; pop rbp ; ret
0x0000000000451ee0 : loopne 0x451f5f ; mov byte ptr [rbx + rbx*8 + 0x63488474], al ; retf 0x894c
0x000000000045a8fd : loopne 0x45a88a ; ret 0xe680
0x000000000046193c : loopne 0x461983 ; add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000461ecb : loopne 0x461f2f ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000462283 : loopne 0x4622e5 ; pop rbp ; pop r12 ; ret
0x00000000004622ad : loopne 0x46230f ; pop rbp ; pop r12 ; ret
0x000000000046296b : loopne 0x4629cd ; pop rbp ; pop r12 ; ret
0x00000000004629dd : loopne 0x462a3f ; pop rbp ; pop r12 ; ret
0x0000000000463fae : loopne 0x463f47 ; mov eax, 0xffffffff ; ret
0x000000000047893d : loopne 0x478946 ; sub eax, 1 ; ret
0x000000000047adf4 : loopne 0x47adc4 ; insb byte ptr [rdi], dx ; add cl, ch ; ret
0x00000000004a3398 : loopne 0x4a3349 ; clc ; inc dword ptr [rax] ; stosb byte ptr [rdi], al ; clc ; jmp qword ptr [rax]
0x00000000004a3571 : loopne 0x4a356d ; jmp qword ptr [rax]
0x00000000004a3591 : loopne 0x4a3591 ; push rax ; loope 0x4a3595 ; call rax
0x00000000004a35e4 : loopne 0x4a35d1 ; clc ; jmp rax
0x00000000004a35e4 : loopne 0x4a35d5 ; clc ; jmp rax
0x00000000004a35e8 : loopne 0x4a35d7 ; clc ; jmp rax
0x00000000004a35fc : loopne 0x4a35e5 ; clc ; call rax
0x00000000004a36ec : loopne 0x4a370e ; stc ; push qword ptr [rsi + 0x19] ; stc ; jmp rsi
0x00000000004a3c40 : loopne 0x4a3cc0 ; stc ; inc dword ptr [rax] ; js 0x4a3c47 ; jmp qword ptr [rax]
0x00000000004a3c60 : loopne 0x4a3ce1 ; stc ; inc dword ptr [rax] ; jns 0x4a3c67 ; jmp qword ptr [rax]
0x00000000004b8934 : loopne 0x4b8914 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b834a : mov ah, 0x13 ; ret
0x00000000004a3834 : mov ah, 0x1f ; stc ; inc dword ptr [rdi + rbx - 7] ; call rsp
0x000000000042fbf5 : mov ah, 0x29 ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000443b68 : mov ah, 0x50 ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004b87f0 : mov ah, 0xa5 ; ret
0x00000000004c3be9 : mov ah, 0xf8 ; call qword ptr [rdi]
0x00000000004b8144 : mov ah, bl ; push rsi ; ret
0x000000000049a03a : mov al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049c333 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000458748 : mov al, 0 ; add cl, ch ; ret
0x00000000004a38d8 : mov al, 0x1b ; stc ; inc dword ptr [rax + 0x1b] ; stc ; call rax
0x00000000004a31e8 : mov al, 0x1e ; clc ; jmp rax
0x00000000004a36c0 : mov al, 0x1e ; stc ; inc dword ptr [rax + 0x1e] ; stc ; call rax
0x00000000004a32b4 : mov al, 0x3f ; clc ; inc eax ; clc ; call rax
0x000000000049c151 : mov al, 0x48 ; add esp, 0x18 ; ret
0x00000000004a3bf8 : mov al, 0x76 ; stc ; inc eax ; jbe 0x4a3bff ; call rax
0x00000000004a3c8c : mov al, 0x7c ; stc ; inc eax ; jl 0x4a3c93 ; call rax
0x00000000004a3cb4 : mov al, 0x7d ; stc ; call rax
0x00000000004a3cd4 : mov al, 0x7e ; stc ; call rax
0x00000000004ba5f6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x0000000000447425 : mov al, 0xf ; retf 0xd285
0x00000000004c6469 : mov al, 0xfa ; call rdx
0x00000000004bf905 : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004c5a2d : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x0000000000443970 : mov al, byte ptr [rax] ; lahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x0000000000439626 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000439644 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000043adb0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000439600 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000040fadf : mov al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000439610 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000435641 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000400f3c : mov bh, 0x2c ; add dh, dh ; ret 0x7420
0x00000000004ba680 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x000000000044d0cb : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000044cc4e : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x000000000043bcc8 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000046a9b6 : mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf 0x8348
0x00000000004ba958 : mov bh, 0x4e ; retf 0x9d7d
0x0000000000468520 : mov bh, 0x84 ; adc bh, byte ptr [rsi - 0x3a] ; add byte ptr [r8 - 0x77], cl ; ret
0x000000000046741f : mov bh, 0x8c ; add byte ptr [rsi - 0x3a], bh ; add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x00000000004b9624 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004b7c06 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x00000000004c2878 : mov bh, 1 ; ret
0x00000000004bad33 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000043d5be : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004ba9bb : mov bl, 0x29 ; retf 0xbf4b
0x0000000000466f8c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000047e179 : mov bl, 0x66 ; nop dword ptr [rax + rax] ; call rbx
0x00000000004ba703 : mov bl, 0x8e ; ret 0xdcd9
0x00000000004ba9a0 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004bdca5 : mov bl, 0xfd ; call rax
0x00000000004c64a6 : mov bl, 2 ; ret
0x0000000000446bf8 : mov bl, byte ptr [rdx] ; pop rcx ; add byte ptr [rax - 0x7f], cl ; ret 0x5900
0x00000000004b8321 : mov bx, 0xf32d ; retf
0x000000000049abc7 : mov byte ptr [r14 + 0x170], dl ; jmp 0x49aba3
0x000000000041ca30 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x00000000004118cc : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004b1bac : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x000000000041ca31 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x0000000000447318 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000004118cd : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000047b992 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x000000000044c903 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r15
0x00000000004c6b05 : mov byte ptr [rax], al ; add byte ptr [rax], cl ; int1 ; cli ; jmp qword ptr [rdx]
0x0000000000451ee2 : mov byte ptr [rbx + rbx*8 + 0x63488474], al ; retf 0x894c
0x00000000004c1888 : mov byte ptr [rcx], al ; ret
0x000000000043ba18 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043b388 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043ba8e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043b3de : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043bb10 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043b460 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b8c6 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b2a6 : mov byte ptr [rdi + 2], dh ; ret
0x000000000043b8e2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b2c2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043b303 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004ba9b5 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x000000000043170b : mov byte ptr [rdi - 1], dl ; ret
0x000000000043288c : mov byte ptr [rdi], cl ; ret
0x000000000043b8a0 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043b280 : mov byte ptr [rdi], dh ; ret
0x00000000004356b3 : mov byte ptr [rdi], dl ; ret
0x000000000043add9 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x0000000000439629 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000043ae07 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x0000000000439647 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000484257 : mov byte ptr [rdx], 0x30 ; jmp 0x480cf2
0x00000000004c2738 : mov byte ptr [rdx], al ; clc ; call rsp
0x000000000043adb2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000439602 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000440ce4 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000049a9f0 : mov byte ptr [rip + 0x232169], 8 ; ret
0x0000000000400964 : mov byte ptr [rip + 0x2cb1f5], 1 ; ret
0x000000000049abc8 : mov byte ptr [rsi + 0x170], dl ; jmp 0x49aba2
0x00000000004522b3 : mov byte ptr [rsi], al ; jne 0x452297 ; mov rax, rsi ; ret
0x000000000045222f : mov byte ptr [rsi], dl ; jne 0x45221f ; mov rax, rsi ; ret
0x000000000047a887 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x000000000042fb9f : mov ch, 0x29 ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000041f1d8 : mov ch, 0x2a ; add byte ptr [rax - 0x36], ah ; add r9b, bpl ; retf 0xfffd
0x00000000004b8142 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004b9483 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004ba116 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004ba81f : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004bb1ca : mov ch, 0xab ; ret
0x0000000000441fe7 : mov ch, 0xbf ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000004bdca9 : mov ch, 0xfd ; call qword ptr [rax]
0x00000000004211ec : mov ch, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000042f446 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000040165d : mov ch, byte ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000425fab : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000400967 : mov cl, 0x2c ; add byte ptr [rcx], al ; ret
0x0000000000467f38 : mov cl, 0x35 ; ret 0x2649
0x000000000041ddb9 : mov cl, 0x35 ; retf 0x2a
0x000000000041c930 : mov cl, 0x35 ; retf 0x2ade
0x00000000004bac21 : mov cl, 0x3f ; retf
0x0000000000470ef4 : mov cl, 0x6c ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004bdca1 : mov cl, 0xfd ; call qword ptr [rax - 0x2f00024d]
0x00000000004c85b8 : mov cl, bl ; cld ; call qword ptr [rax]
0x000000000044f54b : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000413319 : mov cl, byte ptr [rax + 0x63] ; std ; mov eax, 3 ; syscall
0x0000000000428fc5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000421574 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004ba5f2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000043288a : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000046679b : mov cl, dl ; and cl, 0xf ; je 0x4667c7 ; ret
0x00000000004ba8ac : mov cs, edi ; ret 0x8b36
0x000000000042b3fe : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000043b2a0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000411dae : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004150b0 : mov dh, 0 ; pop rbx ; ret
0x000000000041302b : mov dh, 0 ; ret
0x00000000004356b1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000426184 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040dcb0 : mov dh, 0x17 ; test dl, dl ; jne 0x40dc96 ; ret
0x00000000004a3708 : mov dh, 0x1d ; stc ; inc dword ptr [rsi + 0x1d] ; stc ; call rsi
0x000000000046201e : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000040dbe5 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x0000000000462653 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000043d191 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043d181 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043d151 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043d171 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043d161 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000448ca0 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000444167 : mov dh, 0x4b ; add al, 0x89 ; retf 0xeac0
0x000000000049a114 : mov dh, 0x4c ; add ecx, esi ; jmp rcx
0x00000000004b95e2 : mov dh, 0x4e ; ret 0x474c
0x000000000046da15 : mov dh, 0x53 ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000462bf9 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000043d195 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000043d185 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000043d155 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000043d165 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000045d457 : mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d3da : mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000044810c : mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf 0x8440
0x000000000046e5a7 : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x000000000044f7ed : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047af5d : mov dh, 0xc0 ; neg eax ; ret
0x000000000047ad07 : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046adc6 : mov dh, 0xc0 ; ret
0x000000000043e398 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000043e3c0 : mov dh, 0xc2 ; pop rbx ; ret
0x0000000000413eee : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ba824 : mov dh, 0xc7 ; ret 0xe71f
0x00000000004261aa : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000049b40f : mov dh, 0xdb ; movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x0000000000422921 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042e524 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000466972 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000049ce9a : mov dh, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000414d4e : mov dh, 2 ; pop rbx ; ret
0x0000000000411dc1 : mov dh, 2 ; ret
0x000000000042e521 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000426181 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422924 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000040faa4 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000043e51c : mov dh, byte ptr [rcx - 0xd] ; ret
0x0000000000431790 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000048dcb5 : mov ds, word ptr [rdx + rcx + 0x708d0000] ; retf
0x00000000004bac3e : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000047c874 : mov dword ptr [0x2d0], eax ; ret
0x000000000047b51c : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000418bb3 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x000000000044aa38 : mov dword ptr [r12], eax ; mov r12, rsi ; jmp 0x44aa14
0x0000000000400cd2 : mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004668e7 : mov dword ptr [r9 + 8], esi ; ret
0x0000000000435836 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000435821 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000463b79 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463bb9 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464b19 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000463b7d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000464bb7 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000446c08 : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000446c0b : mov dword ptr [rax + 0x54], edx ; ret
0x000000000041569a : mov dword ptr [rax + 8], 0 ; ret
0x0000000000442d66 : mov dword ptr [rax + 8], edx ; ret
0x000000000042678e : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000049ce63 : mov dword ptr [rax - 0x7d], ecx ; ret
0x00000000004804c2 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000044dc88 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041bfa7 : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x000000000041c8b8 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000046a608 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000004c6cad : mov dword ptr [rax], eax ; add byte ptr [rax], dh ; or edi, ebx ; jmp rsi
0x0000000000400cd3 : mov dword ptr [rax], eax ; pop rbx ; ret
0x00000000004640a5 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047aeb5 : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000463fe5 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047aea9 : mov dword ptr [rax], edx ; pop rbx ; ret
0x0000000000464e31 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000451946 : mov dword ptr [rbp - 0x38], ecx ; call 0x41dc05
0x00000000004422aa : mov dword ptr [rbp - 0x40], esp ; syscall
0x000000000045dc92 : mov dword ptr [rbp - 0x470], eax ; call 0x45a758
0x00000000004422a6 : mov dword ptr [rbp - 0x48], esp ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x0000000000456d03 : mov dword ptr [rbp - 0x4e0], ecx ; call 0x463768
0x0000000000455088 : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x00000000004726b1 : mov dword ptr [rbp - 0xa8], edx ; call rax
0x000000000047289a : mov dword ptr [rbp - 0xa8], esi ; call rax
0x0000000000459aef : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x0000000000471e70 : mov dword ptr [rbp - 0xc8], edx ; call rax
0x0000000000491651 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000411af2 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411af1 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d581 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478535 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000411bc7 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000046a9e8 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0x46a9be
0x000000000047856e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000047476f : mov dword ptr [rbx + 0x10], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004123c9 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00000000004784d3 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000487e75 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000414be3 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047c8b3 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000044f7ef : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000414c5e : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000004163e1 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413242 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463c04 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000464a18 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411b57 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x0000000000414f15 : mov dword ptr [rbx + 8], eax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000044d597 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004150ac : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047df56 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000414fbc : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000488599 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000464b1c : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000414be6 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000004668e8 : mov dword ptr [rcx + 8], esi ; ret
0x0000000000435837 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000435822 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000435811 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000044734d : mov dword ptr [rcx], 0x39480000 ; retf
0x000000000046b2ec : mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x00000000004c7b3a : mov dword ptr [rcx], eax ; ret
0x000000000049c27a : mov dword ptr [rcx], edx ; add rsp, 8 ; ret
0x0000000000417472 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000043ba2d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043ba6b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043baed : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043b3db : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b45d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b39d : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b4a0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b4c0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b481 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000043bb53 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000043b4a3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000414b73 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043bb35 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043bb73 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000043b485 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000046756d : mov dword ptr [rdi + 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000470e45 : mov dword ptr [rdi + 0x300], eax ; ret
0x0000000000470e17 : mov dword ptr [rdi + 0x308], eax ; ret
0x000000000042ca51 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000414ba3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000418790 : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c2d1 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000043baad : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043b3fd : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000043ba4b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043bacd : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043b3bb : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004354f5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435338 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004355d8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000435485 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004352c8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b917 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000435415 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435258 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b2e7 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000418793 : mov dword ptr [rdi + 4], eax ; ret
0x000000000043b8f9 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000004351e8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b2d9 : mov dword ptr [rdi + 4], edx ; ret
0x000000000043b9ab : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000435178 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b34b : mov dword ptr [rdi + 5], edx ; ret
0x000000000043b9cb : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000435108 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b35b : mov dword ptr [rdi + 6], edx ; ret
0x000000000043b969 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b9eb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000435098 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b329 : mov dword ptr [rdi + 7], edx ; ret
0x0000000000414b77 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000478f34 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000043b989 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b94b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000047a2f4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000043b31b : mov dword ptr [rdi + 8], edx ; ret
0x0000000000432883 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x0000000000426795 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000042679e : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000049c289 : mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x0000000000431455 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431493 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000478e9f : mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000004317dc : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b48 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004319bc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ac8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431bac : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434a48 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431d7d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349b9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431f7d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434929 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043217d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434899 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431b5d : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000431975 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000431b59 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000431f39 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000043160f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000431f36 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432136 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432336 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431459 : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000431497 : mov dword ptr [rdi - 8], edx ; ret
0x000000000043160c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431708 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431654 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434bc8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000478e24 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478f2e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000045c5c6 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043b8e5 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b937 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b8c4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b2a4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043b915 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043b2e5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043b967 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b327 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b987 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b337 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000426793 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000043dc29 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043b348 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b358 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b368 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000042679b : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043b2d6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043b318 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043dc36 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000042c827 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x0000000000400598 : mov dword ptr [rdi], ecx ; ret
0x000000000043b8b4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b8d2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043b924 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004353a4 : mov dword ptr [rdi], edx ; ret
0x000000000043581f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000043286b : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000047a49d : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000043580e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043284e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000435833 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000432880 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000047a4c3 : mov dword ptr [rdi], esi ; ret
0x0000000000430072 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000040faa3 : mov dword ptr [rdx + 0x130], ecx ; ret
0x000000000042cadf : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047b51d : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000043ae37 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x0000000000439667 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000043ae19 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000439659 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000043aecb : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000043ae49 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000439679 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000043aeeb : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043ae69 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000439689 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000043ae89 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043af0b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000439699 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000043aea9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000043ad9b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000004395eb : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000416536 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x000000000047a8c4 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x000000000046ae6f : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000499f1c : mov dword ptr [rdx], eax ; add rsp, 8 ; ret
0x000000000043adc4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000043adf2 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000043ad44 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000412371 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dd3a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000047a49f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000412bd0 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000439594 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000047ae95 : mov dword ptr [rdx], eax ; pop rbx ; ret
0x00000000004164a2 : mov dword ptr [rdx], eax ; ret
0x0000000000463ec6 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000049ebdf : mov dword ptr [rip + 0x22d99b], ebx ; jne 0x49ebd1 ; pop rbx ; ret
0x000000000044f635 : mov dword ptr [rip + 0x27c3fd], edx ; je 0x44f649 ; ret
0x00000000004442b6 : mov dword ptr [rip + 0x285cdc], edx ; pop rbx ; ret
0x000000000040165a : mov dword ptr [rip + 0x2c8a30], eax ; xor eax, eax ; ret
0x0000000000400705 : mov dword ptr [rip + 0x2ca9a5], eax ; pop rbp ; pop r12 ; ret
0x0000000000401507 : mov dword ptr [rsi + 0x10], esi ; syscall
0x000000000049dfa7 : mov dword ptr [rsi + 0x28], eax ; ret
0x000000000043dc39 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000043dc2b : mov dword ptr [rsi - 4], ecx ; ret
0x000000000046e149 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000049c2bb : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000474182 : mov dword ptr [rsi], eax ; ret
0x0000000000401504 : mov dword ptr [rsi], esi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000049c9c3 : mov dword ptr [rsp + 0x10], ecx ; mov rsi, qword ptr [r15] ; call r14
0x000000000041b57b : mov dword ptr [rsp + 0x10], edx ; call rax
0x0000000000418bb4 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x000000000041b576 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000044b9a1 : mov dword ptr [rsp + 0x40], eax ; call 0x478476
0x000000000047bc70 : mov dword ptr [rsp + 0x78], ebp ; call r12
0x000000000047be73 : mov dword ptr [rsp + 0x78], ebx ; call r12
0x000000000047bdc2 : mov dword ptr [rsp + 0x88], ebx ; call r14
0x00000000004092ff : mov dword ptr [rsp + 8], eax ; call 0x405d66
0x0000000000440426 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000041b632 : mov dword ptr [rsp + 8], eax ; mov qword ptr [rsp], rcx ; call rdx
0x000000000047817e : mov dword ptr [rsp + 8], esi ; mov edi, 0x6cb140 ; call rax
0x0000000000491886 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000044f765 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x0000000000409a69 : mov dword ptr [rsp], eax ; call 0x405d65
0x000000000043f397 : mov dword ptr [rsp], eax ; mov eax, 0 ; syscall
0x000000000046af07 : mov dword ptr [rsp], eax ; mov eax, 0x14 ; syscall
0x000000000043f3f7 : mov dword ptr [rsp], eax ; mov eax, 1 ; syscall
0x000000000043f337 : mov dword ptr [rsp], eax ; mov eax, 2 ; syscall
0x000000000046ad77 : mov dword ptr [rsp], eax ; mov eax, 3 ; syscall
0x000000000044aa39 : mov dword ptr [rsp], eax ; mov r12, rsi ; jmp 0x44aa13
0x000000000044216b : mov dword ptr [rsp], eax ; mov rdx, rax ; mov eax, r12d ; syscall
0x000000000041b637 : mov dword ptr [rsp], ecx ; call rdx
0x0000000000409273 : mov dword ptr [rsp], edx ; call 0x405d65
0x000000000047c873 : mov dword ptr fs:[0x2d0], eax ; ret
0x000000000044dc87 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000041c8b7 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x000000000046a607 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x000000000046aebc : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x000000000047a8c3 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x0000000000412370 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dd39 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000043286a : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000431970 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000043b290 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004009c1 : mov eax, 0 ; pop rbp ; ret
0x000000000043f379 : mov eax, 0 ; syscall
0x000000000043e469 : mov eax, 0x10 ; pop rbx ; ret
0x000000000043f74a : mov eax, 0x101 ; syscall
0x000000000046ace3 : mov eax, 0x106 ; syscall
0x000000000046aee9 : mov eax, 0x14 ; syscall
0x000000000046ad30 : mov eax, 0x15 ; syscall
0x0000000000420fb4 : mov eax, 0x16 ; je 0x420fc7 ; ret
0x0000000000421150 : mov eax, 0x16 ; ret
0x000000000043f220 : mov eax, 0x18 ; syscall
0x0000000000442743 : mov eax, 0x19 ; syscall
0x000000000043fee0 : mov eax, 0x1c ; syscall
0x000000000043e462 : mov eax, 0x20 ; pop rbx ; ret
0x0000000000499ea0 : mov eax, 0x26 ; syscall
0x000000000043e45b : mov eax, 0x30 ; pop rbx ; ret
0x000000000046ac20 : mov eax, 0x3f ; syscall
0x000000000043e454 : mov eax, 0x40 ; pop rbx ; ret
0x0000000000426649 : mov eax, 0x4356d0 ; ret
0x0000000000425d1c : mov eax, 0x43d690 ; cmove rax, rdx ; ret
0x00000000004b873b : mov eax, 0x45155e93 ; ret 0x591c
0x000000000043f45c : mov eax, 0x48 ; syscall
0x000000000049a063 : mov eax, 0x48000000 ; add esp, 8 ; ret
0x0000000000426bfa : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x000000000043f647 : mov eax, 0x4f ; syscall
0x000000000043e44d : mov eax, 0x60 ; pop rbx ; ret
0x000000000043fcc0 : mov eax, 0x61 ; syscall
0x0000000000442760 : mov eax, 0x63 ; syscall
0x000000000046ac40 : mov eax, 0x66 ; syscall
0x000000000046ac60 : mov eax, 0x68 ; syscall
0x000000000046ac50 : mov eax, 0x6b ; syscall
0x000000000046ac70 : mov eax, 0x6c ; syscall
0x0000000000417c63 : mov eax, 0x6ca800 ; ret
0x000000000046fad7 : mov eax, 0x6cb1e0 ; call rdx
0x000000000043e446 : mov eax, 0x80 ; pop rbx ; ret
0x000000000047e8b7 : mov eax, 0x89459673 ; retf
0x0000000000410f01 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000046d01f : mov eax, 0x9e ; syscall
0x000000000043fec0 : mov eax, 0xa ; syscall
0x000000000043fea0 : mov eax, 0xb ; syscall
0x000000000040dce7 : mov eax, 0xba ; syscall
0x00000000004422a8 : mov eax, 0xc065894c ; syscall
0x0000000000467300 : mov eax, 0xc9 ; syscall
0x00000000004427d5 : mov eax, 0xca ; syscall
0x000000000044fa89 : mov eax, 0xe ; syscall
0x000000000043ec07 : mov eax, 0xe5 ; syscall
0x000000000040dcfe : mov eax, 0xea ; movsxd rdi, ecx ; syscall
0x000000000044f811 : mov eax, 0xf ; syscall
0x000000000041ffd6 : mov eax, 0xfffffffe ; pop rbx ; ret
0x000000000041109f : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000451ade : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410ee9 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000411b61 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dd3c : mov eax, 0xffffffff ; ret
0x000000000047a4bd : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000415512 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e99b : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000444276 : mov eax, 1 ; ret
0x00000000004003d5 : mov eax, 1 ; syscall
0x000000000049cb00 : mov eax, 2 ; add rsp, 8 ; ret
0x0000000000466801 : mov eax, 2 ; ret
0x000000000040042f : mov eax, 2 ; syscall
0x000000000049e673 : mov eax, 3 ; je 0x49e688 ; ret
0x000000000046a652 : mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000412354 : mov eax, 3 ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x0000000000466811 : mov eax, 3 ; ret
0x0000000000400489 : mov eax, 3 ; syscall
0x000000000049caf0 : mov eax, 4 ; add rsp, 8 ; ret
0x0000000000466821 : mov eax, 4 ; ret
0x000000000043f27e : mov eax, 4 ; syscall
0x0000000000466831 : mov eax, 5 ; ret
0x000000000043f2cd : mov eax, 5 ; syscall
0x0000000000466841 : mov eax, 6 ; ret
0x000000000046ac8e : mov eax, 6 ; syscall
0x0000000000466851 : mov eax, 7 ; ret
0x000000000049cad1 : mov eax, 8 ; add rsp, 8 ; ret
0x000000000043e43f : mov eax, 8 ; pop rbx ; ret
0x000000000049e685 : mov eax, 8 ; ret
0x0000000000442720 : mov eax, 8 ; syscall
0x000000000043fe53 : mov eax, 9 ; movsxd r10, r10d ; syscall
0x000000000043fe13 : mov eax, 9 ; syscall
0x0000000000463efc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000414c9c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000410c13 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414e78 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000415198 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000487af3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004154bc : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000464f64 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000047e9ed : mov eax, dword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000478351 : mov eax, dword ptr [rax + 8] ; ret
0x000000000047415a : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x474139 ; ret
0x000000000044f67f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000455462 : mov eax, dword ptr [rax*8 + 0x4b2ca0] ; jmp rax
0x00000000004554b3 : mov eax, dword ptr [rax*8 + 0x4b2da0] ; jmp rax
0x00000000004575a3 : mov eax, dword ptr [rax*8 + 0x4b2ea0] ; jmp rax
0x00000000004560d6 : mov eax, dword ptr [rax*8 + 0x4b31a0] ; jmp rax
0x00000000004602b1 : mov eax, dword ptr [rax*8 + 0x4b3620] ; jmp rax
0x00000000004615d5 : mov eax, dword ptr [rax*8 + 0x4b3720] ; jmp rax
0x0000000000461ab9 : mov eax, dword ptr [rax*8 + 0x4b3820] ; jmp rax
0x0000000000460347 : mov eax, dword ptr [rax*8 + 0x4b3b20] ; jmp rax
0x00000000004c6e1d : mov eax, dword ptr [rax] ; add byte ptr [rax + 0x16], dl ; sti ; jmp qword ptr [rdx]
0x000000000049c216 : mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000499f19 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000474a99 : mov eax, dword ptr [rax] ; ret
0x00000000004408bc : mov eax, dword ptr [rbp - 0x48] ; call rax
0x0000000000445477 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000475fa5 : mov eax, dword ptr [rbp] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000471c61 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047aeb1 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000439664 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000439676 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000439686 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000439696 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000004396a6 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000042926a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000042ab42 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043adf0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000439630 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000043ad41 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000439591 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000043adc1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000439611 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000464daf : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x00000000004164b0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004164d8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004a0648 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a065f ; call rax
0x0000000000464f61 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004167e1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000047a698 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x47a6b0 ; ret
0x000000000049c221 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000049c2a1 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000049c2e1 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000049c341 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000049c331 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000049c2f1 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000044dc9c : mov eax, dword ptr [rdi*8 + 0x6cba40] ; ret
0x00000000004782e1 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x4782f7 ; ret
0x000000000041649f : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000049e045 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e057 ; ret
0x000000000049e060 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e077 ; ret
0x000000000049e280 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e297 ; ret
0x000000000043e517 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43e509 ; ret
0x0000000000428fc6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004171de : mov eax, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000410b90 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004640a7 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000004100d0 : mov eax, dword ptr [rdx] ; ret
0x0000000000416491 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x416490 ; ret
0x0000000000488560 : mov eax, dword ptr [rip + 0x244cfa] ; ret
0x000000000047417b : mov eax, dword ptr [rip + 0x258be7] ; mov qword ptr [rsi], rax ; ret
0x000000000047411a : mov eax, dword ptr [rip + 0x258c50] ; ret
0x000000000044cb51 : mov eax, dword ptr [rip + 0x27fba9] ; ret
0x00000000004457e1 : mov eax, dword ptr [rip + 0x287ae1] ; ret
0x00000000004167c1 : mov eax, dword ptr [rip + 0x2b38f9] ; ret
0x000000000049cb3c : mov eax, dword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x000000000047400c : mov eax, dword ptr [rsi + 4] ; ret
0x000000000049cb71 : mov eax, dword ptr [rsi + 8] ; add rsp, 8 ; ret
0x0000000000463fe7 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000049c316 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400c10 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000044747a : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000447ddd : mov eax, dword ptr [rsp + 0x28] ; call rax
0x000000000040e1a7 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000047876c : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x00000000004785ed : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x000000000043e5d4 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000474a98 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041cba5 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045a5e0 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041ca35 : mov eax, eax ; pop rbx ; ret
0x0000000000432965 : mov eax, eax ; ret
0x0000000000477882 : mov eax, eax ; sub eax, ecx ; ret
0x000000000041ab91 : mov eax, eax ; syscall
0x0000000000412b3a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004631bb : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000463809 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004637dc : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040f7d3 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410f06 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000400469 : mov eax, ebp ; syscall
0x000000000047a433 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004132ad : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474d68 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040fb39 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fc1e : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043fd2e : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000411bcb : mov eax, ebx ; pop rbx ; ret
0x00000000004423a8 : mov eax, ebx ; syscall
0x000000000047a2f7 : mov eax, ecx ; adc eax, eax ; ret
0x000000000046b215 : mov eax, ecx ; jne 0x46b26d ; ret
0x000000000046d893 : mov eax, ecx ; mov rcx, r15 ; mov r15, rax ; jmp 0x46d869
0x000000000041bfae : mov eax, ecx ; ret
0x000000000046a518 : mov eax, ecx ; sub rsp, 0x98 ; syscall
0x000000000040393b : mov eax, ecx ; syscall
0x00000000004167f1 : mov eax, edi ; ret
0x000000000044eec4 : mov eax, edi ; syscall
0x0000000000487e1e : mov eax, edx ; add rsp, 0x28 ; ret
0x000000000047b023 : mov eax, edx ; add rsp, 0x38 ; ret
0x000000000041dcb8 : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417475 : mov eax, edx ; add rsp, 8 ; ret
0x000000000047279f : mov eax, edx ; call rax
0x000000000047c84b : mov eax, edx ; jle 0x47c85d ; ret
0x0000000000462f7b : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045c3ca : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041e642 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041785c : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000040f9c0 : mov eax, edx ; pop rbx ; ret
0x0000000000426d19 : mov eax, edx ; ret
0x00000000004004a6 : mov eax, edx ; syscall
0x00000000004788f7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000046aa33 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487c48 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ec94 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000452234 : mov eax, esi ; ret
0x000000000043dcbb : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x000000000043e9e3 : mov eax, esi ; syscall
0x00000000004145c5 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042090a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004420e4 : mov eax, esp ; syscall
0x00000000004004a5 : mov eax, r10d ; syscall
0x00000000004145c4 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004420e3 : mov eax, r12d ; syscall
0x00000000004125b9 : mov eax, r13d ; syscall
0x000000000044eec3 : mov eax, r15d ; syscall
0x000000000045a5df : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000045a519 : mov eax, r8d ; ret
0x0000000000477881 : mov eax, r8d ; sub eax, ecx ; ret
0x000000000041ab90 : mov eax, r8d ; syscall
0x00000000004116d3 : mov eax, r9d ; syscall
0x00000000004402df : mov ebp, 0x49fffddc ; mov edi, dword ptr [rbp] ; call rbx
0x00000000004ba634 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000467c17 : mov ebp, 0x83000001 ; call 0xffffffffc40dc45a
0x00000000004838ce : mov ebp, 0x89000019 ; retf 0x348
0x00000000004a34b5 : mov ebp, 0xbe20fff8 ; clc ; jmp qword ptr [rax]
0x00000000004ae3a4 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004b7bfd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000465988 : mov ebp, 0xf80148c0 ; ret
0x0000000000465c0c : mov ebp, 0xf80148c6 ; ret
0x00000000004b9366 : mov ebp, 0xfb67d10d ; ret
0x000000000045561c : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000455ba1 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000045d0ef : mov ebp, 0xfffffb60 ; call rax
0x000000000047643f : mov ebp, 0xffffff78 ; call rax
0x000000000049c5ba : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000042046f : mov ebp, eax ; call 0x41c704
0x000000000043ff17 : mov ebp, eax ; call rax
0x000000000041f7b2 : mov ebp, ebp ; call 0x42c214
0x00000000004408b9 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000004788fd : mov ebp, ecx ; nop ; jmp rdx
0x0000000000440cbf : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00000000004ba384 : mov ebx, 0x1b5c347e ; jmp 0x4ba35c
0x00000000004a348c : mov ebx, 0x3bfff8c1 ; ret 0xfff8
0x0000000000434d87 : mov ebx, 0x46f00ff2 ; retf
0x00000000004a3494 : mov ebx, 0x4bfff8c2 ; ret
0x0000000000431d94 : mov ebx, 0x4e6f0ff3 ; retf
0x0000000000431db2 : mov ebx, 0x4f7f0ff3 ; retf
0x00000000004022bd : mov ebx, 0x80 ; call rax
0x0000000000442834 : mov ebx, 0xafb8341 ; je 0x442843 ; ret
0x00000000004b7bfb : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000400930 : mov ebx, 0xe0ff006c ; nop dword ptr [rax] ; pop rbp ; ret
0x00000000004ba9a4 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000440cc6 : mov ebx, eax ; call rax
0x00000000004482b1 : mov ebx, eax ; jmp 0x448283
0x000000000044fb7f : mov ebx, eax ; mov rdi, r12 ; call r15
0x000000000044f076 : mov ebx, edi ; test rax, rax ; je 0x44f086 ; call rax
0x000000000046ab03 : mov ebx, esi ; sub rsp, 8 ; syscall
0x000000000047c866 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x00000000004bf13c : mov ecx, 0x41380e0a ; ret
0x00000000004bc399 : mov ecx, 0x4b ; add byte ptr [rax], al ; retf 0x4bb9
0x00000000004b8839 : mov ecx, 0x5b92ac50 ; retf
0x00000000004ba30e : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x000000000046ae80 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x0000000000403934 : mov ecx, 2 ; xor esi, esi ; mov eax, ecx ; syscall
0x000000000043581c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042fbc5 : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000464f3b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000428fc3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004ba7c4 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4ba7f9 ; retf 0x32dd
0x0000000000431f33 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432133 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432333 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043b2c0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043b301 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004354f3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435483 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435413 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435335 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004352c5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435255 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004351e5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435175 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435105 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435095 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004355d5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043b2a1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000047366d : mov ecx, dword ptr [rsp + 0x30] ; call r9
0x0000000000478447 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004783d5 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x00000000004670c8 : mov ecx, edi ; call rbx
0x000000000046d896 : mov ecx, edi ; mov r15, rax ; jmp 0x46d866
0x0000000000432981 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000432984 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004154b7 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000444aab : mov ecx, esi ; call rbx
0x0000000000473ff3 : mov ecx, esi ; cmp rcx, rdx ; jne 0x473fd8 ; ret
0x0000000000481105 : mov edi, 0x190 ; call 0x41dc07
0x0000000000442012 : mov edi, 0x1f0ffffd ; add bl, dh ; ret
0x0000000000442590 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000441bcd : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000041addc : mov edi, 0x4a223c ; call 0x417017
0x000000000041adc3 : mov edi, 0x4a226b ; call 0x417017
0x00000000004423a3 : mov edi, 0x4a4b5d ; mov eax, ebx ; syscall
0x00000000004423d2 : mov edi, 0x4a4b68 ; mov eax, ebx ; syscall
0x000000000044cb90 : mov edi, 0x4a5fa8 ; mov eax, ecx ; syscall
0x000000000044f4c5 : mov edi, 0x4a6aa0 ; mov eax, ecx ; syscall
0x00000000004655cd : mov edi, 0x4b279c ; call 0x4018d7
0x000000000040095c : mov edi, 0x4be2e0 ; call rax
0x0000000000470e86 : mov edi, 0x6cb100 ; call rax
0x0000000000470ef2 : mov edi, 0x6cb100 ; pop rbx ; pop rbp ; jmp rax
0x000000000047830f : mov edi, 0x6cb140 ; add rsp, 8 ; jmp rax
0x0000000000443f85 : mov edi, 0x6cb140 ; call rax
0x0000000000476a2f : mov edi, 0x6cb140 ; jmp rax
0x00000000004008e0 : mov edi, 0x6cbb50 ; jmp rax
0x0000000000403035 : mov edi, 0x6cbfe0 ; call rax
0x0000000000402d3f : mov edi, 0x6cbfe0 ; call rbx
0x0000000000402de6 : mov edi, 0x6cc060 ; call rax
0x000000000040368c : mov edi, 0x6cc0a0 ; call r15
0x0000000000403644 : mov edi, 0x6cc0a0 ; call rax
0x0000000000445881 : mov edi, 0x6cc6d8 ; call rax
0x000000000043e60a : mov edi, 0x6cc720 ; call rax
0x0000000000402d38 : mov edi, 0x6cc720 ; call rbx
0x000000000047aa72 : mov edi, 0x6cc9c0 ; call rax
0x000000000047ab9d : mov edi, 0x6cc9c4 ; call rdx
0x0000000000441ff6 : mov edi, 0x8b48fffd ; jge 0x442004 ; call rbx
0x0000000000441fe8 : mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x0000000000441fda : mov edi, 0x8b49fffd ; jge 0x441fe8 ; call rbx
0x00000000004a33dd : mov edi, 0xbd20fff8 ; clc ; call rax
0x00000000004a343d : mov edi, 0xc056fff8 ; clc ; call rsi
0x0000000000400c2d : mov edi, 0xdfff0ff ; retf 0xbff3
0x000000000049bf6a : mov edi, 1 ; call r14
0x0000000000401777 : mov edi, 1 ; call rax
0x000000000049c85c : mov edi, 1 ; jmp rax
0x0000000000409a65 : mov edi, dword ptr [rax + 0x10] ; mov qword ptr [rsp], rax ; call 0x405d69
0x0000000000409a8c : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rsp], rax ; call 0x405d69
0x0000000000409a76 : mov edi, dword ptr [rax + 8] ; mov qword ptr [rsp], rax ; call 0x405d69
0x0000000000440423 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045d0ee : mov edi, dword ptr [rbp - 0x4a0] ; call rax
0x000000000047643e : mov edi, dword ptr [rbp - 0x88] ; call rax
0x000000000049c51e : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x0000000000466975 : mov edi, dword ptr [rbp] ; call r12
0x000000000040e12d : mov edi, dword ptr [rbp] ; call r14
0x000000000044007a : mov edi, dword ptr [rbp] ; call rbx
0x0000000000442011 : mov edi, dword ptr [rdi + 0x1f0ffffd] ; add bl, dh ; ret
0x0000000000440028 : mov edi, dword ptr [rdi] ; call rbx
0x000000000044ed18 : mov edi, dword ptr [rdi] ; syscall
0x0000000000464f28 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x464ef4
0x00000000004b9626 : mov edi, dword ptr [rdx] ; ret
0x000000000047adb8 : mov edi, dword ptr [rip + 0x251c06] ; call rax
0x000000000047ac7b : mov edi, dword ptr [rip + 0x251d43] ; jmp rax
0x000000000043ffe7 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000447181 : mov edi, dword ptr [rsp + 0x10] ; call r12
0x000000000044050f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447475 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447dd8 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000044b9ca : mov edi, dword ptr [rsp + 0x18] ; call r14
0x00000000004481be : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000004478f5 : mov edi, dword ptr [rsp + 0x28] ; call r12
0x0000000000448620 : mov edi, dword ptr [rsp + 0x28] ; call r14
0x0000000000446f82 : mov edi, dword ptr [rsp + 0x28] ; call r15
0x00000000004479a9 : mov edi, dword ptr [rsp + 0x28] ; call rbx
0x000000000044b20a : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000449828 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000449c68 : mov edi, dword ptr [rsp + 0x30] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000448ba8 : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000448f4f : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000400bb7 : mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000400c0b : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000043f643 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x4f ; syscall
0x00000000004421b0 : mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x0000000000440470 : mov edi, dword ptr [rsp] ; call rbx
0x000000000049de4a : mov edi, dword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x0000000000473948 : mov edi, eax ; call 0x400354
0x0000000000473948 : mov edi, eax ; call 0x400359
0x000000000042115a : mov edi, eax ; call rcx
0x000000000046d899 : mov edi, eax ; jmp 0x46d863
0x000000000045222d : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x452221 ; mov rax, rsi ; ret
0x0000000000400487 : mov edi, eax ; mov eax, 3 ; syscall
0x0000000000400467 : mov edi, eax ; mov eax, ebp ; syscall
0x000000000043eb71 : mov edi, eax ; mov eax, r9d ; syscall
0x000000000041f7af : mov edi, eax ; mov rbp, r13 ; call 0x42c217
0x000000000042046c : mov edi, eax ; mov rbp, rax ; call 0x41c707
0x0000000000469cb7 : mov edi, eax ; mov rsi, r14 ; call 0x4267b7
0x00000000004204f8 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000004420de : mov edi, eax ; sub rdx, rsi ; mov eax, r12d ; syscall
0x000000000049ec4c : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000040ff9d : mov edi, ebp ; call 0x42c214
0x000000000047e2d6 : mov edi, ebp ; call qword ptr [rbx]
0x000000000040e36c : mov edi, ebp ; call r14
0x000000000044fbc7 : mov edi, ebp ; call r15
0x000000000041ea76 : mov edi, ebp ; call rax
0x0000000000440d10 : mov edi, ebp ; call rbx
0x000000000044eec1 : mov edi, ebp ; mov eax, r15d ; syscall
0x000000000044efd2 : mov edi, ebp ; mov eax, r8d ; syscall
0x0000000000450144 : mov edi, ebp ; mov rdx, rbp ; call r15
0x000000000041f3d7 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000044efa0 : mov edi, ebp ; xor eax, eax ; syscall
0x000000000041bdcf : mov edi, ebx ; call 0x418024
0x00000000004211c9 : mov edi, ebx ; call 0x41dc04
0x000000000044cb07 : mov edi, ebx ; call r12
0x0000000000444d7d : mov edi, ebx ; call r14
0x0000000000462929 : mov edi, ebx ; call r8
0x0000000000412187 : mov edi, ebx ; call rax
0x0000000000445941 : mov edi, ebx ; jmp 0x44590b
0x000000000049ea73 : mov edi, ebx ; jne 0x49ea65 ; pop rbx ; ret
0x00000000004003d3 : mov edi, ebx ; mov eax, 1 ; syscall
0x00000000004004a3 : mov edi, ebx ; mov eax, r10d ; syscall
0x0000000000414d04 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414e74 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000041abba : mov edi, ecx ; mov eax, 3 ; syscall
0x000000000041ab8e : mov edi, ecx ; mov eax, r8d ; syscall
0x0000000000451943 : mov edi, ecx ; mov qword ptr [rbp - 0x38], rcx ; call 0x41dc08
0x0000000000441cc7 : mov edi, edi ; call 0x41dfa4
0x0000000000410575 : mov edi, edi ; call rax
0x0000000000440d54 : mov edi, edi ; call rbx
0x0000000000465284 : mov edi, edi ; xor r8d, r8d ; call rbx
0x00000000004522b1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x452299 ; mov rax, rsi ; ret
0x000000000043e9e1 : mov edi, edx ; mov eax, esi ; syscall
0x000000000043e9f1 : mov edi, edx ; mov eax, r8d ; syscall
0x00000000004422fa : mov edi, esi ; call 0x40eda4
0x0000000000441d0c : mov edi, esi ; call 0x41dfa4
0x00000000004453ce : mov edi, esi ; call r15
0x0000000000440d34 : mov edi, esi ; call rbx
0x0000000000411957 : mov edi, esi ; mov eax, r9d ; syscall
0x000000000044fb82 : mov edi, esp ; call r15
0x0000000000440ceb : mov edi, esp ; call rbx
0x00000000004039e8 : mov edi, esp ; mov eax, 3 ; syscall
0x000000000043fe11 : mov edi, esp ; mov eax, 9 ; syscall
0x0000000000403c0c : mov edi, esp ; mov eax, r10d ; syscall
0x00000000004116d1 : mov edi, esp ; mov eax, r9d ; syscall
0x00000000004670c5 : mov edi, esp ; mov r9, r15 ; call rbx
0x0000000000445474 : mov edi, esp ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000004735b9 : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004735b8 : mov edi, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000042663f : mov edx, 0x42fb40 ; cmove rax, rdx ; ret
0x0000000000434d07 : mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000431f94 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000431fb2 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000004bdcb1 : mov edx, 0xbc90fffd ; std ; call rax
0x000000000049ae53 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x0000000000446cc7 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000046bcea : mov edx, 1 ; jmp 0x46bcc2
0x0000000000444af0 : mov edx, 8 ; mov eax, edx ; ret
0x0000000000463ec8 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000047ae91 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000412180 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000042ab3f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042926d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000047aea5 : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000041056e : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x000000000049dc49 : mov edx, dword ptr [rdi] ; mov rdi, rbp ; call rbx
0x0000000000472798 : mov edx, dword ptr [rdx + 8] ; add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x000000000043b2e2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043b2d3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043b323 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b333 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000431971 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000431d30 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004315c1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043b8d0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000435560 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043b921 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004353a1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000043b8b1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b291 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000041e389 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x000000000049bea9 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x000000000044216f : mov edx, eax ; mov eax, r12d ; syscall
0x0000000000450147 : mov edx, ebp ; call r15
0x000000000040ff9a : mov edx, ebp ; mov rdi, r13 ; call 0x42c217
0x000000000047e2d1 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e291 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044fbc1 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000469ca9 : mov edx, ebp ; mov rsi, r15 ; call 0x4267b7
0x000000000044fbdc : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x00000000004125b4 : mov edx, ebx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x000000000046ace1 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x0000000000442741 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x000000000044ef9d : mov edx, ecx ; mov rdi, r13 ; xor eax, eax ; syscall
0x000000000046ade6 : mov edx, esp ; syscall
0x000000000046b009 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000441236 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x0000000000446c05 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004ba5e6 : mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000413866 : mov esi, 0x4a1d70 ; call 0x400327
0x0000000000446bf7 : mov esi, 0x4a591a8a ; add byte ptr [rax - 0x7f], cl ; ret 0x5900
0x00000000004ba683 : mov esi, 0x6400fd4c ; retf 0xf64
0x00000000004b876a : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000403d39 : mov esi, 0x80 ; call 7
0x00000000004428b8 : mov esi, 0x80 ; syscall
0x000000000047674f : mov esi, 0x89fffffe ; ret 0x758b
0x000000000048a26f : mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000004a33c5 : mov esi, 0xbef0fff8 ; clc ; jmp rax
0x00000000004a34b9 : mov esi, 0xbf20fff8 ; clc ; jmp qword ptr [rax]
0x00000000004a33d9 : mov esi, 0xbf82fff8 ; clc ; jmp qword ptr [rax]
0x00000000004b7bfe : mov esi, 0xc2c1c0bf ; ret
0x000000000041481b : mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e344 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000440d76 : mov esi, 1 ; call rbx
0x0000000000440f63 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000440e2f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000440da7 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x00000000004411ed : mov esi, 1 ; mov rdi, rbp ; call rbx
0x0000000000462923 : mov esi, 1 ; mov rdi, rbx ; call r8
0x0000000000462238 : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000043ff61 : mov esi, 2 ; jmp rax
0x00000000004411e1 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000440f54 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000440e20 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000440d98 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000043ff7b : mov esi, 3 ; jmp rax
0x000000000044175c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000004417b3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000441833 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000441933 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x000000000049c51a : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c979 : mov esi, dword ptr [rbx] ; call r14
0x000000000049de4e : mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x000000000049c9c8 : mov esi, dword ptr [rdi] ; call r14
0x000000000040e12a : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x000000000046a658 : mov esi, dword ptr [rdx] ; syscall
0x000000000049dc45 : mov esi, dword ptr [rsi + 8] ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x0000000000432869 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000400bb3 : mov esi, dword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000444aa6 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450c11 : mov esi, dword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041ea71 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000004479a4 : mov esi, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x0000000000449823 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041e081 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x000000000046a657 : mov esi, dword ptr fs:[rdx] ; syscall
0x00000000004005d7 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e4 ; ret
0x00000000004125b7 : mov esi, ebp ; mov eax, r13d ; syscall
0x0000000000411954 : mov esi, ebp ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000043eb6e : mov esi, ebp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041f66e : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000046a9ec : mov esi, ebp ; xor edx, edx ; jmp 0x46a9ba
0x000000000047adb6 : mov esi, ebx ; mov edi, dword ptr [rip + 0x251c06] ; call rax
0x000000000044fbdf : mov esi, ebx ; mov rdi, r12 ; call r15
0x00000000004116ce : mov esi, ebx ; mov rdi, r12 ; mov eax, r9d ; syscall
0x0000000000421157 : mov esi, ebx ; mov rdi, rax ; call rcx
0x0000000000414d49 : mov esi, ecx ; jbe 0x414ced ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000403c09 : mov esi, ecx ; mov rdi, r12 ; mov eax, r10d ; syscall
0x0000000000469cac : mov esi, edi ; call 0x4267b4
0x000000000049c85a : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045d0eb : mov esi, edi ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000040e369 : mov esi, edi ; mov rdi, r13 ; call r14
0x0000000000452e6b : mov esi, edi ; mov rdi, rbx ; call rax
0x000000000043f27c : mov esi, edx ; mov eax, 4 ; syscall
0x000000000043f2cb : mov esi, edx ; mov eax, 5 ; syscall
0x000000000046ac8c : mov esi, edx ; mov eax, 6 ; syscall
0x000000000044efcf : mov esi, edx ; mov rdi, r13 ; mov eax, r8d ; syscall
0x0000000000469cba : mov esi, esi ; call 0x4267b4
0x00000000004421ad : mov esi, esi ; mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x000000000049c8b1 : mov esi, esi ; mov rdi, r12 ; call r15
0x00000000004670c2 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000450141 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000047e2d4 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e294 : mov esi, esp ; mov edi, ebp ; call rax
0x000000000044fb93 : mov esi, esp ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x00000000004204f5 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044fbc4 : mov esi, esp ; mov rdi, rbp ; call r15
0x000000000042021a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000041fa55 : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000047481b : mov esi, esp ; syscall
0x0000000000425ff1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000426021 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000426011 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004bc541 : mov esp, 0x4b ; add byte ptr [rax], al ; retf
0x00000000004a376c : mov esp, 0x62fff919 ; sbb ecx, edi ; call rdx
0x00000000004c1c9c : mov esp, 0xa0000039 ; ret 0xfff7
0x0000000000447f7a : mov esp, 0xbf004a5a ; retf
0x00000000004239d3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000042cc1b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000426001 : mov esp, 0xf80148c0 ; ret
0x000000000047417e : mov esp, dword ptr [rip + 0x6894800] ; ret
0x00000000004788fa : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049c5be : mov esp, ecx ; ret
0x000000000043ff14 : mov esp, edx ; mov rbp, rax ; call rax
0x000000000044aa3d : mov esp, esi ; jmp 0x44aa0f
0x00000000004b8a64 : mov gs, ebp ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4b8ad7 ; salc ; retf
0x00000000004b8a63 : mov gs, r13d ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4b8ad8 ; salc ; retf
0x000000000042cade : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000499f1b : mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000435810 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000463b78 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463bb8 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464b18 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000463b7c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464bb6 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000415699 : mov qword ptr [rax + 8], 0 ; ret
0x0000000000442d65 : mov qword ptr [rax + 8], rdx ; ret
0x00000000004640a4 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047aeb4 : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000463fe4 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047aea8 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000464e30 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000451945 : mov qword ptr [rbp - 0x38], rcx ; call 0x41dc06
0x00000000004422a9 : mov qword ptr [rbp - 0x40], r12 ; syscall
0x000000000045dc91 : mov qword ptr [rbp - 0x470], rax ; call 0x45a759
0x00000000004422a5 : mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x0000000000455087 : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x00000000004726b0 : mov qword ptr [rbp - 0xa8], r10 ; call rax
0x0000000000472899 : mov qword ptr [rbp - 0xa8], rsi ; call rax
0x0000000000471e6f : mov qword ptr [rbp - 0xc8], r10 ; call rax
0x000000000044d580 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478534 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000411bc6 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000047856d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000047476e : mov qword ptr [rbx + 0x10], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004123c8 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000004784d2 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000487e74 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000414be2 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047c8b2 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000414c5d : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000411b56 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x0000000000414f14 : mov qword ptr [rbx + 8], rax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004150ab : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047df55 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000488598 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000049c279 : mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x0000000000478fae : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000043baec : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043b45c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b43c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b49f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b4bf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b480 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000414b72 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000470e44 : mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000470e16 : mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042ca50 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000414ba2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000041878f : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c2d0 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000043baac : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043b3fc : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043bacc : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043b41c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000435337 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004352c7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435257 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004351e7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b9aa : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000435177 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b34a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b9ca : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000435107 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b35a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b9ea : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000435097 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b36a : mov qword ptr [rdi + 7], rdx ; ret
0x000000000047a2f3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000478f33 : mov qword ptr [rdi + 8], r9 ; ret
0x0000000000414b76 : mov qword ptr [rdi + 8], rax ; ret
0x000000000042679d : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000049c288 : mov qword ptr [rdi + rsi*8], rdx ; add rsp, 8 ; ret
0x0000000000431454 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431492 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000478e9e : mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004317db : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b47 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004319bb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ac7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431bab : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434a47 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431d7c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349b8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431f7c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434928 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043217c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434898 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000478e29 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000431458 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431496 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000043160b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431707 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431653 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434bc7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045c5c5 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042c826 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000478df8 : mov qword ptr [rdi], r9 ; ret
0x000000000043b936 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b326 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b336 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000043b347 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b357 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b367 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000042679a : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043b317 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000400597 : mov qword ptr [rdi], rcx ; ret
0x000000000043b923 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004353a3 : mov qword ptr [rdi], rdx ; ret
0x000000000043580d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043284d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000047a4c2 : mov qword ptr [rdi], rsi ; ret
0x000000000040faa2 : mov qword ptr [rdx + 0x130], rcx ; ret
0x000000000043aeca : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000004396ba : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000043aeea : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x00000000004396da : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000043af0a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000004396fa : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000043ad9a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000004395ea : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000416535 : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000043ad43 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000439593 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000047ae94 : mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004164a1 : mov qword ptr [rdx], rax ; ret
0x0000000000463ec5 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000401659 : mov qword ptr [rip + 0x2c8a30], rax ; xor eax, eax ; ret
0x0000000000401506 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000049dfa6 : mov qword ptr [rsi + 0x28], rax ; ret
0x000000000046e148 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x0000000000474181 : mov qword ptr [rsi], rax ; ret
0x0000000000401503 : mov qword ptr [rsi], rsi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000041b57a : mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000049c9c2 : mov qword ptr [rsp + 0x10], r9 ; mov rsi, qword ptr [r15] ; call r14
0x000000000044b9a0 : mov qword ptr [rsp + 0x40], rax ; call 0x478477
0x000000000047bc6f : mov qword ptr [rsp + 0x78], rbp ; call r12
0x000000000047be72 : mov qword ptr [rsp + 0x78], rbx ; call r12
0x000000000047bdc1 : mov qword ptr [rsp + 0x88], rbx ; call r14
0x000000000041b631 : mov qword ptr [rsp + 8], r8 ; mov qword ptr [rsp], rcx ; call rdx
0x00000000004092fe : mov qword ptr [rsp + 8], rax ; call 0x405d67
0x0000000000440425 : mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000409a68 : mov qword ptr [rsp], rax ; call 0x405d66
0x000000000043f396 : mov qword ptr [rsp], rax ; mov eax, 0 ; syscall
0x000000000046af06 : mov qword ptr [rsp], rax ; mov eax, 0x14 ; syscall
0x000000000043f3f6 : mov qword ptr [rsp], rax ; mov eax, 1 ; syscall
0x000000000043f336 : mov qword ptr [rsp], rax ; mov eax, 2 ; syscall
0x000000000046ad76 : mov qword ptr [rsp], rax ; mov eax, 3 ; syscall
0x000000000041b636 : mov qword ptr [rsp], rcx ; call rdx
0x0000000000409272 : mov qword ptr [rsp], rdx ; call 0x405d66
0x000000000044f65d : mov qword ptr fs:[rdx], rax ; ret
0x000000000043284c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000401505 : mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x0000000000442740 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000434d06 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x0000000000431fb1 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x0000000000434d86 : mov r11d, 0x46f00ff2 ; retf
0x0000000000431db1 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000044aa3c : mov r12, rsi ; jmp 0x44aa10
0x000000000043ff13 : mov r12d, edx ; mov rbp, rax ; call rax
0x00000000004408b8 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000049c519 : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c51d : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000046d898 : mov r15, rax ; jmp 0x46d864
0x000000000047366c : mov r9, qword ptr [rsp + 0x30] ; call r9
0x0000000000444aaa : mov r9, r14 ; call rbx
0x00000000004670c7 : mov r9, r15 ; call rbx
0x0000000000411b60 : mov rax, -1 ; pop rbx ; ret
0x0000000000412bd2 : mov rax, -1 ; ret
0x000000000044f810 : mov rax, 0xf ; syscall
0x00000000004667f0 : mov rax, 1 ; ret
0x0000000000466800 : mov rax, 2 ; ret
0x0000000000466810 : mov rax, 3 ; ret
0x0000000000466820 : mov rax, 4 ; ret
0x0000000000466830 : mov rax, 5 ; ret
0x0000000000466840 : mov rax, 6 ; ret
0x0000000000466850 : mov rax, 7 ; ret
0x0000000000475fa4 : mov rax, qword ptr [r13] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000414c9b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410c12 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414e77 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000415197 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000487af2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004154bb : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000464f63 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047e9ec : mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000478350 : mov rax, qword ptr [rax + 8] ; ret
0x000000000044f67e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000455461 : mov rax, qword ptr [rax*8 + 0x4b2ca0] ; jmp rax
0x00000000004554b2 : mov rax, qword ptr [rax*8 + 0x4b2da0] ; jmp rax
0x00000000004575a2 : mov rax, qword ptr [rax*8 + 0x4b2ea0] ; jmp rax
0x00000000004560d5 : mov rax, qword ptr [rax*8 + 0x4b31a0] ; jmp rax
0x00000000004602b0 : mov rax, qword ptr [rax*8 + 0x4b3620] ; jmp rax
0x00000000004615d4 : mov rax, qword ptr [rax*8 + 0x4b3720] ; jmp rax
0x0000000000461ab8 : mov rax, qword ptr [rax*8 + 0x4b3820] ; jmp rax
0x0000000000460346 : mov rax, qword ptr [rax*8 + 0x4b3b20] ; jmp rax
0x000000000049c215 : mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x00000000004408bb : mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000445476 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000471c60 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047aeb0 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000439590 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004a0647 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a0660 ; call rax
0x0000000000464f60 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004167e0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c220 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000049c2a0 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c2e0 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c340 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c330 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c2f0 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044dc9b : mov rax, qword ptr [rdi*8 + 0x6cba40] ; ret
0x00000000004782e0 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4782f8 ; ret
0x000000000041649e : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000416490 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x416491 ; ret
0x0000000000474119 : mov rax, qword ptr [rip + 0x258c50] ; ret
0x000000000044cb50 : mov rax, qword ptr [rip + 0x27fba9] ; ret
0x00000000004457e0 : mov rax, qword ptr [rip + 0x287ae1] ; ret
0x00000000004167c0 : mov rax, qword ptr [rip + 0x2b38f9] ; ret
0x000000000049cb3b : mov rax, qword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x000000000049cb70 : mov rax, qword ptr [rsi + 8] ; add rsp, 8 ; ret
0x000000000049c315 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400c0f : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447479 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447ddc : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000040e1a6 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000047876b : mov rax, qword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x0000000000416c93 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420909 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041cba4 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041ca34 : mov rax, r8 ; pop rbx ; ret
0x0000000000432964 : mov rax, r8 ; ret
0x000000000046b214 : mov rax, r9 ; jne 0x46b26e ; ret
0x000000000046b295 : mov rax, r9 ; ret
0x0000000000412b39 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463808 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004637db : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004748f1 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c449 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004132ac : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474d67 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040fb38 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fc1d : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043fd2d : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000411bca : mov rax, rbx ; pop rbx ; ret
0x000000000041bfad : mov rax, rcx ; ret
0x00000000004167f0 : mov rax, rdi ; ret
0x0000000000487e1d : mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000047b022 : mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000041dcb7 : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417474 : mov rax, rdx ; add rsp, 8 ; ret
0x000000000047279e : mov rax, rdx ; call rax
0x000000000041e641 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041785b : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000043e487 : mov rax, rdx ; pop rbx ; ret
0x0000000000426d18 : mov rax, rdx ; ret
0x000000000046aa32 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487c47 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ec93 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000452233 : mov rax, rsi ; ret
0x000000000043dcba : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x000000000049c5b9 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000041f7b1 : mov rbp, r13 ; call 0x42c215
0x00000000004788fc : mov rbp, r9 ; nop ; jmp rdx
0x000000000042046e : mov rbp, rax ; call 0x41c705
0x000000000043ff16 : mov rbp, rax ; call rax
0x0000000000440cc5 : mov rbx, rax ; call rax
0x00000000004482b0 : mov rbx, rax ; jmp 0x448284
0x000000000044fb7e : mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000044f075 : mov rbx, rdi ; test rax, rax ; je 0x44f087 ; call rax
0x000000000046ab02 : mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000043b300 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000478446 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004783d4 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000046d895 : mov rcx, r15 ; mov r15, rax ; jmp 0x46d867
0x0000000000432980 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000432983 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000473ff2 : mov rcx, rsi ; cmp rcx, rdx ; jne 0x473fd9 ; ret
0x000000000044046f : mov rdi, qword ptr [r12] ; call rbx
0x000000000040e12c : mov rdi, qword ptr [r13] ; call r14
0x0000000000440079 : mov rdi, qword ptr [r13] ; call rbx
0x000000000043ffe6 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000440027 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000440422 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045d0ed : mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000047643d : mov rdi, qword ptr [rbp - 0x88] ; call rax
0x0000000000466974 : mov rdi, qword ptr [rbp] ; call r12
0x00000000004401ae : mov rdi, qword ptr [rbp] ; call rbx
0x000000000044ed17 : mov rdi, qword ptr [rdi] ; syscall
0x0000000000464f27 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464ef5
0x0000000000447180 : mov rdi, qword ptr [rsp + 0x10] ; call r12
0x000000000044b9c9 : mov rdi, qword ptr [rsp + 0x18] ; call r14
0x00000000004478f4 : mov rdi, qword ptr [rsp + 0x28] ; call r12
0x000000000044861f : mov rdi, qword ptr [rsp + 0x28] ; call r14
0x0000000000446f81 : mov rdi, qword ptr [rsp + 0x28] ; call r15
0x00000000004479a8 : mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000044b209 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000449827 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000448ba7 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004421af : mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x000000000049de49 : mov rdi, qword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000044fb81 : mov rdi, r12 ; call r15
0x0000000000440cea : mov rdi, r12 ; call rbx
0x00000000004039e7 : mov rdi, r12 ; mov eax, 3 ; syscall
0x000000000043fe10 : mov rdi, r12 ; mov eax, 9 ; syscall
0x0000000000403c0b : mov rdi, r12 ; mov eax, r10d ; syscall
0x00000000004116d0 : mov rdi, r12 ; mov eax, r9d ; syscall
0x00000000004670c4 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000445473 : mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000040ff9c : mov rdi, r13 ; call 0x42c215
0x000000000040e36b : mov rdi, r13 ; call r14
0x0000000000440d0f : mov rdi, r13 ; call rbx
0x000000000044eec0 : mov rdi, r13 ; mov eax, r15d ; syscall
0x000000000044efd1 : mov rdi, r13 ; mov eax, r8d ; syscall
0x0000000000450143 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000044ef9f : mov rdi, r13 ; xor eax, eax ; syscall
0x00000000004422f9 : mov rdi, r14 ; call 0x40eda5
0x0000000000441d0b : mov rdi, r14 ; call 0x41dfa5
0x00000000004453cd : mov rdi, r14 ; call r15
0x0000000000440d33 : mov rdi, r14 ; call rbx
0x0000000000411956 : mov rdi, r14 ; mov eax, r9d ; syscall
0x0000000000441cc6 : mov rdi, r15 ; call 0x41dfa5
0x0000000000410574 : mov rdi, r15 ; call rax
0x0000000000440d53 : mov rdi, r15 ; call rbx
0x0000000000465283 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x0000000000400486 : mov rdi, r8 ; mov eax, 3 ; syscall
0x0000000000400466 : mov rdi, r8 ; mov eax, ebp ; syscall
0x000000000043eb70 : mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041abb9 : mov rdi, r9 ; mov eax, 3 ; syscall
0x000000000041ab8d : mov rdi, r9 ; mov eax, r8d ; syscall
0x0000000000473947 : mov rdi, rax ; call 0x400355
0x0000000000421159 : mov rdi, rax ; call rcx
0x000000000041f7ae : mov rdi, rax ; mov rbp, r13 ; call 0x42c218
0x000000000042046b : mov rdi, rax ; mov rbp, rax ; call 0x41c708
0x0000000000469cb6 : mov rdi, rax ; mov rsi, r14 ; call 0x4267b8
0x00000000004204f7 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000004420dd : mov rdi, rax ; sub rdx, rsi ; mov eax, r12d ; syscall
0x000000000049ec4b : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000044fbc6 : mov rdi, rbp ; call r15
0x000000000041ea75 : mov rdi, rbp ; call rax
0x00000000004411f2 : mov rdi, rbp ; call rbx
0x000000000041f3d6 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000041bdce : mov rdi, rbx ; call 0x418025
0x00000000004211c8 : mov rdi, rbx ; call 0x41dc05
0x000000000044cb06 : mov rdi, rbx ; call r12
0x0000000000444d7c : mov rdi, rbx ; call r14
0x0000000000462928 : mov rdi, rbx ; call r8
0x0000000000412186 : mov rdi, rbx ; call rax
0x0000000000445940 : mov rdi, rbx ; jmp 0x44590c
0x000000000049ea72 : mov rdi, rbx ; jne 0x49ea66 ; pop rbx ; ret
0x00000000004003d2 : mov rdi, rbx ; mov eax, 1 ; syscall
0x00000000004004a2 : mov rdi, rbx ; mov eax, r10d ; syscall
0x0000000000414d03 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414e73 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000451942 : mov rdi, rcx ; mov qword ptr [rbp - 0x38], rcx ; call 0x41dc09
0x000000000043e9e0 : mov rdi, rdx ; mov eax, esi ; syscall
0x000000000043e9f0 : mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000049bea8 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000049dc48 : mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x000000000047ae90 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000047aea4 : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004315c0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004353a0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000041e388 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x000000000047e2d0 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e290 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044ef9c : mov rdx, r9 ; mov rdi, r13 ; xor eax, eax ; syscall
0x000000000044216e : mov rdx, rax ; mov eax, r12d ; syscall
0x0000000000450146 : mov rdx, rbp ; call r15
0x000000000040ff99 : mov rdx, rbp ; mov rdi, r13 ; call 0x42c218
0x0000000000469ca8 : mov rdx, rbp ; mov rsi, r15 ; call 0x4267b8
0x00000000004125b3 : mov rdx, rbx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x000000000046ace0 : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x000000000046ade5 : mov rdx, rsp ; syscall
0x000000000049de4d : mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000049c9c7 : mov rsi, qword ptr [r15] ; call r14
0x000000000040e129 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x000000000049c978 : mov rsi, qword ptr [rbx] ; call r14
0x0000000000444aa5 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450c10 : mov rsi, qword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041ea70 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000041e080 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000044efce : mov rsi, r10 ; mov rdi, r13 ; mov eax, r8d ; syscall
0x000000000047e2d3 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e293 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044fb92 : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x000000000044fbc3 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000420219 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000041fa54 : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000411953 : mov rsi, r13 ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000041f66d : mov rsi, r13 ; mov rdi, rbx ; call rax
0x0000000000469cb9 : mov rsi, r14 ; call 0x4267b5
0x000000000049c8b0 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004670c1 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000469cab : mov rsi, r15 ; call 0x4267b5
0x000000000040e368 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000452e6a : mov rsi, r15 ; mov rdi, rbx ; call rax
0x0000000000403c08 : mov rsi, r9 ; mov rdi, r12 ; mov eax, r10d ; syscall
0x00000000004005d6 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e5 ; ret
0x00000000004125b6 : mov rsi, rbp ; mov eax, r13d ; syscall
0x000000000043eb6d : mov rsi, rbp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000046a9eb : mov rsi, rbp ; xor edx, edx ; jmp 0x46a9bb
0x000000000047adb5 : mov rsi, rbx ; mov edi, dword ptr [rip + 0x251c06] ; call rax
0x000000000044fbde : mov rsi, rbx ; mov rdi, r12 ; call r15
0x00000000004116cd : mov rsi, rbx ; mov rdi, r12 ; mov eax, r9d ; syscall
0x0000000000421156 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x0000000000414d48 : mov rsi, rcx ; jbe 0x414cee ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049c859 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000043f27b : mov rsi, rdx ; mov eax, 4 ; syscall
0x000000000043f2ca : mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000046ac8b : mov rsi, rdx ; mov eax, 6 ; syscall
0x000000000047481a : mov rsi, rsp ; syscall
0x00000000004788f9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049c5bd : mov rsp, rcx ; ret
0x0000000000435835 : mov word ptr [r9 - 2], cx ; ret
0x0000000000442b89 : mov word ptr [rax + rcx*4], gs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042678d : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000004c6f35 : mov word ptr [rax], es ; add byte ptr [rax - 0x67], cl ; std ; call rcx
0x00000000004be36c : mov word ptr [rax], es ; add byte ptr [rax], al ; jo 0x4be3a2 ; hlt ; call rdi
0x0000000000467420 : mov word ptr [rax], es ; jle 0x4673f2 ; add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x000000000043ba2c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043b39c : mov word ptr [rdi + 0x10], cx ; ret
0x000000000043bb34 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043b484 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000004355d7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043b8f8 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043b2d8 : mov word ptr [rdi + 4], dx ; ret
0x000000000043b94a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043b31a : mov word ptr [rdi + 8], dx ; ret
0x0000000000432882 : mov word ptr [rdi + rdx - 2], cx ; ret
0x0000000000431b5c : mov word ptr [rdi - 2], cx ; ret
0x0000000000431974 : mov word ptr [rdi - 2], dx ; ret
0x0000000000431b58 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000043b2a3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043dc35 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004355db : mov word ptr [rdi], cx ; ret
0x000000000043b8b3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000435643 : mov word ptr [rdi], dx ; ret
0x0000000000435832 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x000000000043287f : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000043ae18 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000439658 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000004736f0 : mov word ptr [rdx - 0x74b3ffdb], ss ; and byte ptr [rax - 0x77], cl ; ret
0x000000000043adc3 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000439613 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004bfd6c : mov word ptr [rdx], ds ; add byte ptr [rax], al ; adc byte ptr [rdi - 0xb], cl ; jmp qword ptr [rcx]
0x00000000004c19b2 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x000000000043dc38 : mov word ptr [rsi - 2], cx ; ret
0x00000000004c79b0 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x00000000004c64a0 : mov word ptr [rsi], es ; add qword ptr [r15], 3 ; mov bl, 2 ; ret
0x00000000004c7a60 : mov word ptr [rsi], es ; add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000044f764 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x000000000043287e : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000048aa6d : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00000000004bdcc8 : movabs al, byte ptr [0x38fffdc2b0fffdc2] ; ret 0xfffd
0x00000000004c9221 : movabs al, byte ptr [0x41380e0a01940301] ; ret
0x00000000004c0979 : movabs al, byte ptr [0x41380e0a01cf0301] ; ret
0x00000000004465b1 : movabs al, byte ptr [0x6b3d8b4c00000010] ; ret 6
0x000000000045edd9 : movabs al, byte ptr [0x840fc08548000000] ; retf 3
0x00000000004a34cc : movabs al, byte ptr [0xa0fff8c220fff8c1] ; ret 0xfff8
0x00000000004a366c : movabs al, byte ptr [0xb0fff8c7e0fff8dc] ; retf 0xfff8
0x00000000004a34d4 : movabs al, byte ptr [0xc0fff8c330fff8c2] ; ret
0x000000000048ee65 : movabs al, byte ptr [0xc74900758b48fffe] ; ret 0xc001
0x0000000000464f23 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x000000000040077b : movabs byte ptr [0x2d05c7347401e580], al ; retf 0x2c
0x00000000004ba723 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x0000000000417581 : movabs byte ptr [0xe8ffffff50e9ffff], al ; ret 0xff67
0x00000000004ba381 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x00000000004b87c7 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x00000000004b907a : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x00000000004300e2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004300de : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000043018c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043b370 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043bbed : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043b53d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004352af : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043523f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004351cf : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043515f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bb8d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043b4dd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004350ef : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bbad : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043b4fd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043507f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bbcd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043b51d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043569f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043562f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355bf : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043554f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354df : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043546f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004353ff : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043538f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043531f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004266ec : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x426709 ; ret
0x0000000000426705 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000043480b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000043487b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043ba04 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b384 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b3c7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b3b7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b438 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b3f8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b418 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b398 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b539 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b4d9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b4f9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b519 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043502a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000435084 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b371 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043bbee : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043b53e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000004352b0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435240 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004351d0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435160 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bb8e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043b4de : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000004350f0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bbae : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043b4fe : movq qword ptr [rdi + 0xe], mm2 ; ret
0x0000000000435080 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bbce : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043b51e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000004356a0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435630 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355c0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435550 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354e0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435470 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435400 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435390 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435320 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004266ed : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x426708 ; ret
0x0000000000426706 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043480c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000043487c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434fb7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f37 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ea7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e27 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434da7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d27 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ca7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c27 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ba7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434b27 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434aa7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434a27 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434997 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434907 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434877 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043ba05 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b385 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b3d8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b3c8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b3b8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b439 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b3f9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b419 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b399 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b53a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b4da : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b4fa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b51a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043502b : movq qword ptr [rdi], mm0 ; ret
0x0000000000435085 : movq qword ptr [rdi], mm1 ; ret
0x00000000004b94a2 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000043f3e8 : movsb byte ptr [rdi], byte ptr [rsi] ; push rax ; add byte ptr [rax], al ; ret
0x000000000041ac68 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b8385 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x000000000047471c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004174c7 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004ba99d : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004bad35 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004ba5f1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000415a0a : movsd dword ptr [rdi], dword ptr [rsi] ; mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000478e52 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000400707 : movsd dword ptr [rdi], dword ptr [rsi] ; test eax, 0x415d002c ; pop rsp ; ret
0x00000000004b9081 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000491843 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004917fd : movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004778b1 : movsx eax, dl ; neg eax ; ret
0x000000000043fe58 : movsxd r10, r10d ; syscall
0x0000000000421571 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000432c46 : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042fbc2 : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000049b999 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000049b411 : movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x0000000000499ee9 : movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x000000000049b0b8 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000042e50d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043b139 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000049a111 : movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x0000000000442354 : movsxd rdi, dword ptr [rbp - 0x58] ; mov eax, 3 ; syscall
0x0000000000442441 : movsxd rdi, dword ptr [rbp - 0x68] ; mov eax, 3 ; syscall
0x0000000000412359 : movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x0000000000411b70 : movsxd rdi, dword ptr [rdi + 0x70] ; mov eax, 3 ; syscall
0x0000000000412bb6 : movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x00000000004a3239 : movsxd rdi, eax ; push qword ptr [rax] ; clc ; call rax
0x000000000041331b : movsxd rdi, ebp ; mov eax, 3 ; syscall
0x000000000043f582 : movsxd rdi, ebx ; mov eax, 0x48 ; syscall
0x000000000044cc0a : movsxd rdi, ebx ; mov eax, 3 ; syscall
0x000000000040dd04 : movsxd rdi, ecx ; syscall
0x000000000043f45a : movsxd rdi, edi ; mov eax, 0x48 ; syscall
0x000000000044fa87 : movsxd rdi, edi ; mov eax, 0xe ; syscall
0x000000000044f568 : movsxd rdi, edi ; mov eax, 3 ; syscall
0x000000000044f907 : movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000044ee11 : movsxd rdi, esi ; mov eax, 3 ; syscall
0x0000000000403a35 : movsxd rdi, esp ; mov eax, 3 ; syscall
0x0000000000403a34 : movsxd rdi, r12d ; mov eax, 3 ; syscall
0x000000000044ee10 : movsxd rdi, r14d ; mov eax, 3 ; syscall
0x000000000044f567 : movsxd rdi, r15d ; mov eax, 3 ; syscall
0x000000000042fc8f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000413266 : movsxd rdx, ecx ; mov eax, 2 ; syscall
0x000000000043fe59 : movsxd rdx, edx ; syscall
0x000000000043d11c : movsxd rsi, esi ; ret 0x7520
0x00000000004917fe : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000491844 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000044f7ec : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047af5c : movzx eax, al ; neg eax ; ret
0x000000000047ad06 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046adc5 : movzx eax, al ; ret
0x0000000000413eec : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415b86 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000411dad : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004150af : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000041302a : movzx eax, byte ptr [rax] ; ret
0x000000000049ce99 : movzx eax, byte ptr [rcx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000422908 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042e520 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000426180 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422923 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000414d4d : movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000411dc0 : movzx eax, byte ptr [rdx] ; ret
0x0000000000413eed : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e397 : movzx eax, cl ; pop rbx ; ret
0x000000000043e3bf : movzx eax, dl ; pop rbx ; ret
0x000000000043d77a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43d779 ; ret
0x000000000043d82a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43d829 ; ret
0x000000000042f3c4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000422920 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042e523 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040dcaf : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40dc97 ; ret
0x000000000042e3f1 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000422a4f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042e283 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000043d144 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000043d1a4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000043d194 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043d184 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043d174 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043d164 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000043d154 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000434fd0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f177 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000043d12b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000004356b0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000426183 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004261a9 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000434f50 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000435640 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000466971 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x000000000046adc4 : movzx rax, al ; ret
0x0000000000465a57 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000463177 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041693f : neg eax ; ret
0x0000000000410438 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000041340c : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004346fb : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000047bb1e : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000462e6b : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042e82c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000481106 : nop ; add dword ptr [rax], eax ; add al, ch ; int1 ; retf 0xfff9
0x000000000041b13a : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000468236 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x00000000004befe5 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4beffd ; ret
0x00000000004beff3 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000043e5df : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000444c6f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000425fef : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000004886bf : nop ; call rax
0x00000000004c8b40 : nop ; cmp bh, ch ; call rcx
0x00000000004a3274 : nop ; jl 0x4a3272 ; jmp rax
0x00000000004c7531 : nop ; jmp qword ptr [rsi]
0x00000000004788ff : nop ; jmp rdx
0x00000000004a3258 : nop ; jo 0x4a325a ; push qword ptr [rax] ; jb 0x4a325e ; call rax
0x00000000004bdca4 : nop ; mov bl, 0xfd ; call rax
0x000000000043178f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000043196f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000046ad2f : nop ; mov eax, 0x15 ; syscall
0x000000000043fedf : nop ; mov eax, 0x1c ; syscall
0x000000000046ac3f : nop ; mov eax, 0x66 ; syscall
0x000000000043febf : nop ; mov eax, 0xa ; syscall
0x00000000004427d4 : nop ; mov eax, 0xca ; syscall
0x0000000000416def : nop ; mov eax, 0xffffffff ; ret
0x00000000004100cf : nop ; mov eax, dword ptr [rdx] ; ret
0x000000000046b00f : nop ; mov eax, edi ; ret
0x0000000000431d2f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043b8cf : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000044273f : nop ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000411b5f : nop ; mov rax, -1 ; pop rbx ; ret
0x0000000000415b0f : nop ; mov rax, -1 ; ret
0x0000000000417104 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004482af : nop ; mov rbx, rax ; jmp 0x448285
0x00000000004482ae : nop ; mov rbx, rax ; jmp 0x448286
0x000000000044593f : nop ; mov rdi, rbx ; jmp 0x44590d
0x000000000041ea6f : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000043b36f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004a3238 : nop ; movsxd rdi, eax ; push qword ptr [rax] ; clc ; call rax
0x000000000044ee0f : nop ; movsxd rdi, r14d ; mov eax, 3 ; syscall
0x00000000004c7530 : nop ; nop ; jmp qword ptr [rsi]
0x00000000004933ad : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004bdc64 : nop ; push rsp ; std ; jmp rax
0x000000000043db0f : nop ; ret
0x0000000000409acc : nop ; ret 0xffff
0x00000000004a3638 : nop ; retf
0x000000000047ed69 : nop ; retf 0x4b
0x0000000000425d1d : nop ; salc ; add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x00000000004a368c : nop ; sar al, cl ; jmp rax
0x00000000004a38d0 : nop ; sbb al, 0xf9 ; jmp qword ptr [rax]
0x00000000004c2a00 : nop ; sbb bh, al ; call qword ptr [rax]
0x00000000004bdc94 : nop ; stosb byte ptr [rdi], al ; std ; call rax
0x0000000000444293 : nop ; sub byte ptr [rax], al ; test eax, eax ; je 0x4442a7 ; ret
0x00000000004164df : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004261af : nop ; xor eax, eax ; ret
0x000000000042606f : nop ; xor rax, rax ; ret
0x000000000047831b : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000047e17b : nop dword ptr [rax + rax] ; call rbx
0x000000000043b2ab : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004008e8 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x000000000047ac83 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000412bdb : nop dword ptr [rax + rax] ; ret
0x000000000041339b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004667bc : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000047dfd9 : nop dword ptr [rax] ; call rax
0x0000000000499e9d : nop dword ptr [rax] ; mov eax, 0x26 ; syscall
0x000000000043fcbd : nop dword ptr [rax] ; mov eax, 0x61 ; syscall
0x00000000004672fd : nop dword ptr [rax] ; mov eax, 0xc9 ; syscall
0x000000000041691c : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000410b5d : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000042c7a4 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000041e384 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000400935 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000041e744 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000043e57c : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000406415 : nop dword ptr [rax] ; ret
0x000000000049e4dd : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004113a4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000047e17a : nop word ptr [rax + rax] ; call rbx
0x0000000000412bda : nop word ptr [rax + rax] ; ret
0x000000000041339a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000444b31 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000429ed7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b54f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046aed2 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000046ae81 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000041bfa9 : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041c8ba : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000496c90 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046ae4f : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000422906 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041ca32 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x000000000041b638 : or al, 0x24 ; call rdx
0x0000000000443f81 : or al, 0x24 ; je 0x443f95 ; mov edi, 0x6cb140 ; call rax
0x0000000000400bba : or al, 0x41 ; call rsp
0x000000000044589f : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004785f0 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000400c0e : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000047466b : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047b043 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000047b51f : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x00000000004624da : or al, 0x7e ; ret
0x0000000000462cca : or al, 0x7e ; retf
0x00000000004628c3 : or al, 0x7e ; retf 0xffb8
0x00000000004c61ec : or al, 0x7f ; add byte ptr [rax], al ; jo 0x4c6186 ; cli ; call rsi
0x000000000045d459 : or al, 0x83 ; ret
0x0000000000458d5c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000421573 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000428fc4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432c48 : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042fbc4 : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000048a02b : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000046b008 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042e50f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043b13b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004c90ec : or al, 0xae ; add byte ptr [rax], al ; push rax ; push rax ; std ; jmp qword ptr [rbx]
0x000000000042fbc8 : or al, 0xb ; jmp r9
0x000000000043b13f : or al, 0xb ; jmp rcx
0x000000000049a113 : or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x00000000004bddf8 : or al, 0xd8 ; std ; jmp rsp
0x00000000004351d3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004266f3 : or al, 0xf3 ; ret
0x0000000000462bfb : or al, 0xf6 ; ret 0xf04
0x000000000045d3dc : or al, 0xf6 ; ret 0xf08
0x00000000004c7a74 : or al, 7 ; or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004bedb5 : or al, byte ptr [rax] ; add al, bl ; push rsp ; call qword ptr [rax]
0x00000000004bedcd : or al, byte ptr [rax] ; add al, dl ; push rsp ; call qword ptr [rdx]
0x000000000044fbf1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000422b9d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a0e1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422bc1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004becfd : or al, byte ptr [rax] ; add byte ptr [rax - 2], al ; hlt ; call qword ptr [rbx]
0x000000000049bf8e : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004422f5 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x40eda9
0x000000000043fec1 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004247a8 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004084d6 : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x0000000000408dbc : or al, byte ptr [rbx - 0x7bf0fd07] ; retf
0x000000000047d5e0 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000489b57 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x00000000004c6bb3 : or al, byte ptr [rcx] ; ret
0x0000000000496e97 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000409302 : or al, ch ; pop rax ; retf 0xffff
0x0000000000408f97 : or al, ch ; ret
0x000000000040c398 : or al, ch ; ret 0xff99
0x0000000000465548 : or al, ch ; ret 1
0x0000000000409218 : or al, ch ; retf
0x000000000043fad0 : or al, ch ; retf 0xfde4
0x000000000040ac90 : or al, ch ; retf 0xffb0
0x0000000000409315 : or al, ch ; retf 0xffff
0x00000000004a3644 : or bh, 0xf8 ; call rax
0x0000000000442d68 : or bl, al ; nop word ptr [rax + rax] ; ret
0x0000000000435393 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044fa97 : or bl, dh ; ret
0x000000000040a545 : or byte ptr [eax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000414f16 : or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x0000000000472631 : or byte ptr [r8 + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x00000000004105e7 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000047420f : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004395e8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047e426 : or byte ptr [r8 - 0x77], cl ; ret
0x000000000040ea42 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000040b632 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0xffed
0x00000000004408e7 : or byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000497072 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046a1e3 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x000000000049b997 : or byte ptr [r9 + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004396a7 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000046444f : or byte ptr [r9 - 0x77], r9b ; ret
0x000000000047b3f3 : or byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x77] ; retf
0x00000000004105e8 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000416d6b : or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000472632 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000041ca27 : or byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x00000000004168f7 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000442595 : or byte ptr [rax + 0x39], cl ; ret
0x000000000041bea9 : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000479235 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x0000000000470cf6 : or byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000047b8bf : or byte ptr [rax + 0x39], cl ; retf 0xf40
0x000000000041d69a : or byte ptr [rax + 0x440f4802], ch ; retf 0x8348
0x000000000043f646 : or byte ptr [rax + 0x4f], bh ; syscall
0x00000000004c5af2 : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000004c238c : or byte ptr [rax + 0xb], cl ; ret
0x00000000004696a6 : or byte ptr [rax + 0xf], cl ; retf 0x8948
0x0000000000475bab : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000040401c : or byte ptr [rax + 1], cl ; ret
0x000000000041b1d7 : or byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000467e0c : or byte ptr [rax - 0x39], cl ; ret
0x000000000042608b : or byte ptr [rax - 0x73], cl ; add eax, 0x1d ; ret
0x000000000042609f : or byte ptr [rax - 0x73], cl ; add eax, 0x8449 ; ret
0x0000000000418af3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000474118 : or byte ptr [rax - 0x75], cl ; add eax, 0x258c50 ; ret
0x0000000000440421 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x000000000043e95c : or byte ptr [rax - 0x75], cl ; cmp ebp, eax ; retf
0x0000000000409271 : or byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call 0x405d67
0x0000000000409a78 : or byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405d67
0x000000000040e10a : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000409323 : or byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405d68
0x00000000004395ed : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000474210 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043fd2c : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041b635 : or byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rdx
0x00000000004395e9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041f3d5 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000041785a : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000047de87 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000472f60 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040ea43 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000472f09 : or byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000040e231 : or byte ptr [rax - 0x77], cl ; xor ecx, dword ptr [rax + 0x29] ; retf 0xc148
0x0000000000472f5f : or byte ptr [rax - 0x77], r9b ; ret 0x8948
0x000000000043fa44 : or byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; ret
0x000000000040b633 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xffed
0x000000000040b401 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xfff7
0x000000000041ca68 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000044fc14 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000440817 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000042c836 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042c8be : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000046305e : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x00000000004731c8 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045c582 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000410ee8 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000041069d : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x0000000000422dfc : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041a05c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x0000000000417704 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004176c5 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x0000000000422dfd : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a281 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422e21 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041a05d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf
0x000000000041569c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041db66 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000049cad2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000444af1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000044f902 : or byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000043e440 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049e686 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000442721 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000424928 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040a546 : or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x00000000004423a1 : or byte ptr [rax], al ; mov edi, 0x4a4b5d ; mov eax, ebx ; syscall
0x00000000004423d0 : or byte ptr [rax], al ; mov edi, 0x4a4b68 ; mov eax, ebx ; syscall
0x000000000044f4c3 : or byte ptr [rax], al ; mov edi, 0x4a6aa0 ; mov eax, ecx ; syscall
0x000000000044eebe : or byte ptr [rax], al ; mov rdi, r13 ; mov eax, r15d ; syscall
0x00000000004bcc11 : or byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000042b93e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049d870 : or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x0000000000478bdc : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000047e0b9 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x0000000000447ed8 : or byte ptr [rbp - 0x161c8637], al ; retf
0x0000000000489eb3 : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000047415c : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x00000000004a0ec4 : or byte ptr [rbx + 0x358b0022], ah ; retf 0x22a2
0x0000000000475e2d : or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x000000000041dd60 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000405ab3 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401935 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412b6a : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x000000000049ca56 : or byte ptr [rbx + 0x634801eb], al ; ret
0x00000000004c70fb : or byte ptr [rbx + rcx + 2], al ; retf 0xe0a
0x0000000000457a67 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040f841 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000047d5cf : or byte ptr [rbx - 0xaf4b], cl ; dec dword ptr [rax - 0x77] ; retf 0x1b8
0x00000000004428b4 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000470e19 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000045efc5 : or byte ptr [rbx], ch ; add r8b, bpl ; ret 0xfa28
0x000000000047a42b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000046a1e4 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x000000000045c3c9 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000047f3ca : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000049b998 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004c7a76 : or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004c089f : or byte ptr [rcx + 0xb], al ; ret
0x000000000046201b : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000047ff3b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004794d0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000400485 : or byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, 3 ; syscall
0x000000000040e367 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x000000000047a432 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000049c973 : or byte ptr [rcx - 0x73], cl ; sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x00000000004118ca : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004396a8 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000004573b8 : or byte ptr [rcx - 0x77], cl ; push rbp ; or cl, ch ; retf 0xfffe
0x0000000000464450 : or byte ptr [rcx - 0x77], cl ; ret
0x0000000000489a12 : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x000000000041d5f9 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040e25a : or byte ptr [rcx - 0x7d], cl ; ret
0x000000000044fe93 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x0000000000448af9 : or byte ptr [rcx - 0xa], al ; ret
0x000000000041cf0f : or byte ptr [rcx], al ; call 0x4199b4
0x000000000045b2a1 : or byte ptr [rcx], al ; ret 0xd529
0x000000000049d576 : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049cd9f : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x000000000044292e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000451be0 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000041789b : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004bafbe : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004712d7 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x0000000000470ef1 : or byte ptr [rdi + 0x6cb100], bh ; pop rbx ; pop rbp ; jmp rax
0x0000000000478181 : or byte ptr [rdi + 0x6cb140], bh ; call rax
0x000000000040368b : or byte ptr [rdi + 0x6cc0a0], bh ; call r15
0x00000000004bf913 : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000004c4cac : or byte ptr [rdi + 0xb], al ; jae 0x4c4cc0 ; ret
0x00000000004820d8 : or byte ptr [rdi + rcx - 0x4a], al ; sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047193f : or byte ptr [rdi], 0x84 ; retf 3
0x0000000000449e83 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000044d0c9 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x00000000004150ae : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000462651 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000487e59 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000414f17 : or byte ptr [rdi], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000049c926 : or byte ptr [rdi], cl ; ret 0xfc3
0x000000000043018b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000044dd54 : or byte ptr [rdi], cl ; test dh, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000455ba6 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000049c925 : or byte ptr [rdi], r9b ; ret 0xfc3
0x00000000004c50a8 : or byte ptr [rdx], al ; cli ; call rsi
0x00000000004be7d8 : or byte ptr [rsi - 0xc], ah ; call qword ptr [rax]
0x00000000004004cc : or byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000476a46 : or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004bccf0 : or byte ptr ss:[rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000048831a : or cl, byte ptr [rax + 0x24] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000047b1a7 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000044cc50 : or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x0000000000411d9e : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000004125e7 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x0000000000464eef : or cl, byte ptr [rax - 0x77] ; ret
0x00000000004118d0 : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000042534a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000452727 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000049d18c : or cl, byte ptr [rbp + 0x39] ; retf 0xdb77
0x0000000000489ff3 : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000463ec7 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x0000000000400538 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000489eb9 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004081d8 : or cl, ch ; ret
0x0000000000462a62 : or cl, ch ; ret 0xfffc
0x0000000000407fd8 : or cl, ch ; retf
0x00000000004573bc : or cl, ch ; retf 0xfffe
0x00000000004880e5 : or cl, cl ; cmove rax, rdx ; ret
0x00000000004c6b08 : or cl, dh ; cli ; jmp qword ptr [rdx]
0x00000000004ba9a2 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004352b3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000049e065 : or dh, bl ; ret
0x00000000004ba7ca : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000047e177 : or dh, byte ptr [rbp - 0x4d] ; nop word ptr [rax + rax] ; call rbx
0x000000000041ba83 : or dh, dh ; ret 0x7404
0x000000000041b9fe : or dh, dh ; ret 0xf04
0x000000000040290e : or dh, dh ; ret 0xfdf
0x000000000040dbe7 : or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x00000000004022ba : or dword ptr [rax - 0x73], ecx ; mov ebx, 0x80 ; call rax
0x000000000047643c : or dword ptr [rax - 0x75], ecx ; mov ebp, 0xffffff78 ; call rax
0x00000000004237de : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000422d2d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b7ef : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422c87 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004101ff : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000043fe54 : or dword ptr [rax], eax ; add byte ptr [rax], al ; movsxd r10, r10d ; syscall
0x000000000043fe14 : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004935fe : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004b29d7 : or dword ptr [rax], ecx ; retf
0x00000000004ba113 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000489fd3 : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000042f946 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00000000004123e0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000478d2c : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x000000000041fd26 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041ff0c : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x0000000000401774 : or dword ptr [rcx], esi ; idiv byte ptr [rdi + 1] ; call rax
0x0000000000478666 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000048f5dd : or dword ptr [rdi], ecx ; xchg dword ptr [rax], esp ; add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x00000000004ba96e : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000044d51b : or dword ptr [rdx], 0xf390fffd ; ret
0x0000000000474a79 : or dword ptr [rip + 0x2566f0], 1 ; pop rbx ; ret
0x000000000041cf0c : or dword ptr [rsi + rax + 8], 1 ; call 0x4199b7
0x0000000000496f8f : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c6bb0 : or eax, 0x10a0303 ; ret
0x00000000004c6c10 : or eax, 0x1370303 ; ret
0x000000000043bb91 : or eax, 0x1c478d48 ; ret
0x0000000000415852 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000004c6ba0 : or eax, 0x34b0303 ; ret
0x00000000004c6bd8 : or eax, 0x35b0303 ; ret
0x000000000046204a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000462752 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000042ce12 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x000000000044018f : or eax, 0x49fffdde ; mov edi, dword ptr [rsi] ; call rbx
0x000000000048a047 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000429d37 : or eax, 0x83480000 ; ret 0x4910
0x0000000000429da1 : or eax, 0x83480000 ; ret 0xe910
0x00000000004a0e5d : or eax, 0x834825eb ; ret 0x4810
0x00000000004244a8 : or eax, 0x894d0000 ; retf
0x00000000004ae0f9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000004ae105 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004ba953 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004ba5f3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000440d4e : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000435163 : or eax, 0xf7f0ff3 ; ret
0x000000000044449c : or eax, 0xffffffff ; ret
0x00000000004c7a77 : or eax, dword ptr [r11] ; add dword ptr es:[rdx], ecx ; ret
0x000000000045e07f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000422acd : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429f41 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422af1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043fea1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000424628 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044d544 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00000000004c7a78 : or eax, dword ptr [rbx] ; add dword ptr es:[rdx], ecx ; ret
0x00000000004c415b : or eax, dword ptr [rdx] ; retf
0x00000000004c60fc : or eax, dword ptr [rdx] ; retf 0xc0a
0x00000000004c70fd : or eax, dword ptr [rdx] ; retf 0xe0a
0x00000000004c8f41 : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x000000000045e07e : or eax, dword ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004164d4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041ddc0 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; retf 0x2a
0x00000000004c92e8 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x0000000000435323 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000047a69e : or ebx, esi ; ret
0x000000000041d3fa : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418c44 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000040fc1c : or ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000447c95 : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000004bcc19 : or ecx, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000048a00f : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004c4c76 : or ecx, dword ptr [rdx + 0xa] ; ret
0x000000000042c824 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004c6cb1 : or edi, ebx ; jmp rsi
0x00000000004c4cae : or esi, dword ptr [rbx + 0xa] ; ret
0x00000000004beff0 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000435243 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004123e1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004c7fb9 : or esp, edi ; call qword ptr [rax]
0x00000000004c7fd1 : or esp, edi ; call qword ptr [rdx]
0x000000000041cf0b : or qword ptr [rsi + rax + 8], 1 ; call 0x4199b8
0x0000000000435392 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435322 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004352b2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c4cad : or r14d, dword ptr [r11 + 0xa] ; ret
0x0000000000435242 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c8f40 : or r8d, dword ptr [r14 + rcx + 0x38] ; ret
0x00000000004c70fc : or r8d, dword ptr [rdx] ; retf 0xe0a
0x000000000042c823 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x000000000044cc4f : or r9b, byte ptr [r8 + 0x39] ; ret 0x3a76
0x0000000000462a61 : or r9b, r13b ; ret 0xfffc
0x00000000004c4c75 : or r9d, dword ptr [r10 + 0xa] ; ret
0x00000000004c6c0f : or rax, 0x1370303 ; ret
0x00000000004c6b9f : or rax, 0x34b0303 ; ret
0x00000000004c6bd7 : or rax, 0x35b0303 ; ret
0x0000000000462049 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000462751 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000044449b : or rax, 0xffffffffffffffff ; ret
0x00000000004c60fb : or rax, qword ptr [r10] ; retf 0xc0a
0x0000000000496d72 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c415a : or rax, qword ptr [rdx] ; retf
0x000000000040f7d0 : out 0, eax ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000046eb6f : out 0x25, al ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000469f4e : out 0x29, al ; add byte ptr es:[rax + 0x39], cl ; retf
0x000000000044fb83 : out 0x41, eax ; call rdi
0x00000000004116d2 : out 0x44, eax ; mov eax, ecx ; syscall
0x0000000000403c0d : out 0x44, eax ; mov eax, edx ; syscall
0x0000000000475b59 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000044fb94 : out 0x48, al ; mov edi, dword ptr [rsp + 0x28] ; call r15
0x00000000004204f6 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044fbc5 : out 0x48, al ; mov edi, ebp ; call r15
0x0000000000445475 : out 0x48, eax ; mov eax, dword ptr [rbp - 0x58] ; call rax
0x00000000004670c6 : out 0x4d, eax ; mov ecx, edi ; call rbx
0x000000000041fa56 : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x0000000000415ba3 : out 0x5b, al ; ret
0x00000000004735ba : out 0x5b, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000042021b : out 0x5d, al ; pop r12 ; jmp rax
0x00000000004ba1e0 : out 0x78, al ; jnp 0x4ba242 ; retf
0x000000000047e2d5 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x000000000047e295 : out 0x89, al ; out dx, eax ; call rax
0x000000000040339b : out 0x89, eax ; ret 0x8948
0x000000000047417d : out 0x8b, eax ; and eax, 0x6894800 ; ret
0x00000000004b8771 : out 0xb3, al ; retf 0xe80
0x00000000004039e9 : out 0xb8, eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000043fe12 : out 0xb8, eax ; or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004b94a0 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000049e358 : out 0xe8, eax ; ret 0xffe7
0x000000000049d3af : out 0xe8, eax ; retf
0x0000000000434b2a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434baa : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004bb1c8 : out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000004a353d : out 0xf8, al ; call qword ptr [rax]
0x00000000004a355d : out 0xf8, al ; push rax ; out 0xf8, eax ; call rax
0x00000000004a3561 : out 0xf8, eax ; call rax
0x00000000004a35c1 : out 0xf8, eax ; jmp qword ptr [rax]
0x00000000004a35e1 : out 0xf8, eax ; jmp rax
0x000000000043fa3a : out 0xfd, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000049e681 : out 2, al ; jne 0x49e694 ; mov eax, 8 ; ret
0x000000000042c699 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000041d3fd : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00000000004009a9 : out dx, al ; call rax
0x00000000004a350d : out dx, al ; clc ; call rax
0x00000000004ba5f7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000041dd3e : out dx, al ; fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000476c0e : out dx, al ; jae 0x476c17 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004125b8 : out dx, al ; mov eax, r13d ; syscall
0x00000000004317da : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000049c214 : out dx, al ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000043fe0f : out dx, al ; mov rdi, r12 ; mov eax, 9 ; syscall
0x0000000000411955 : out dx, al ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000043eb6f : out dx, al ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041f66f : out dx, al ; mov rdi, rbx ; call rax
0x0000000000434f3a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b69e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004ba952 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004ba1df : out dx, al ; out 0x78, al ; jnp 0x4ba243 ; retf
0x0000000000483b80 : out dx, al ; retf
0x00000000004c4ac9 : out dx, al ; stc ; call qword ptr [rsi]
0x000000000046a9ed : out dx, al ; xor edx, edx ; jmp 0x46a9b9
0x000000000041b783 : out dx, eax ; add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x000000000041e555 : out dx, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000418c47 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000049ec4d : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000040ff9e : out dx, eax ; call 0x42c213
0x000000000047e2d7 : out dx, eax ; call qword ptr [rbx]
0x000000000040e36d : out dx, eax ; call r14
0x000000000044fbc8 : out dx, eax ; call r15
0x000000000041ea77 : out dx, eax ; call rax
0x0000000000440d11 : out dx, eax ; call rbx
0x00000000004bb245 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000044eec2 : out dx, eax ; mov eax, r15d ; syscall
0x000000000044efd3 : out dx, eax ; mov eax, r8d ; syscall
0x000000000043160a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431706 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431652 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450145 : out dx, eax ; mov rdx, rbp ; call r15
0x0000000000434fba : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b79d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f3d8 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000415b4e : out dx, eax ; pop rbx ; ret
0x000000000042e993 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42e96b
0x000000000042ea11 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42e9e9
0x000000000042eea3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ee7b
0x000000000042ef21 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eef9
0x000000000042e593 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e5a8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e5bd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000426ebd : out dx, eax ; ret
0x000000000043d8c3 : out dx, eax ; ret 0xf66
0x0000000000409a6d : out dx, eax ; ret 0xffff
0x000000000043d8a6 : out dx, eax ; retf 0x4466
0x00000000004ba91b : out dx, eax ; retf 0xab0d
0x0000000000469cbd : out dx, eax ; retf 0xfffb
0x000000000042151a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042faac : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fa95 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fa7e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e53a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044efa1 : out dx, eax ; xor eax, eax ; syscall
0x00000000004296ae : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043bcee : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004bada3 : outsb dx, byte ptr [rsi] ; ja 0x4bad2c ; ret 0x48f
0x0000000000409aee : outsb dx, byte ptr [rsi] ; ret 0xffff
0x00000000004b97d2 : outsb dx, byte ptr [rsi] ; retf
0x00000000004b8ae4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004ba118 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004bdbd1 : outsb dx, byte ptr [rsi] ; std ; jmp rax
0x0000000000426b5a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000004216c8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000042717e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000431d92 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x0000000000431f92 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000042f8ad : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042f94d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042f472 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000042f4f2 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x0000000000465a5a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042f8b2 : outsd dx, dword ptr [rsi] ; ret
0x00000000004b94a6 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000431f47 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000042f952 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000465aaa : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000431e12 : outsd dx, dword ptr [rsi] ; retf
0x0000000000429059 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x0000000000432012 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x000000000042ee9a : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042e98a : outsd dx, dword ptr [rsi] ; retf 0xff3
0x00000000004b94a5 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000041ad9f : paddd mm7, mm7 ; dec dword ptr [rax - 0x39] ; ret 0xffd0
0x00000000004229c2 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004667b4 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000046679f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000004229c1 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004ba8a5 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004ba8a6 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004c727d : pop qword ptr [rax] ; add al, dl ; sub bh, bl ; call rsp
0x00000000004427e5 : pop r10 ; ret
0x00000000004bad2f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000041e74a : pop r12 ; jmp rax
0x00000000004204fc : pop r12 ; jmp rcx
0x000000000043ff5f : pop r12 ; mov esi, 2 ; jmp rax
0x000000000043ff79 : pop r12 ; mov esi, 3 ; jmp rax
0x00000000004735bd : pop r12 ; pop r13 ; jmp rax
0x000000000048ee0c : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048ed8a : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044172b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402203 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004015df : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401702 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040f685 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000405ab6 : pop r12 ; pop r13 ; ret
0x000000000047b44c : pop r12 ; pop r14 ; ret
0x000000000046b3b1 : pop r12 ; pop rbp ; ret
0x000000000040060a : pop r12 ; ret
0x00000000004735bf : pop r13 ; jmp rax
0x000000000048ee0e : pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048ed8c : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044172d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402205 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004015e1 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401704 : pop r13 ; pop r14 ; ret
0x000000000040f687 : pop r13 ; pop rbp ; ret
0x0000000000405ab8 : pop r13 ; ret
0x000000000048ee10 : pop r14 ; fmul st(0) ; ret
0x000000000048ed8e : pop r14 ; fmulp st(1) ; ret
0x000000000044172f : pop r14 ; pop r15 ; jmp rax
0x0000000000402207 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004015e3 : pop r14 ; pop r15 ; ret
0x0000000000401706 : pop r14 ; ret
0x0000000000441731 : pop r15 ; jmp rax
0x0000000000402209 : pop r15 ; pop rbp ; ret
0x00000000004015e5 : pop r15 ; ret
0x0000000000418791 : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004bf718 : pop rax ; cmc ; call qword ptr [rax]
0x00000000004c68c8 : pop rax ; fdivp st(2) ; call rsi
0x0000000000418792 : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004bccb8 : pop rax ; or byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004784d6 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000004c3968 : pop rax ; pushfq ; clc ; jmp rbx
0x0000000000409b04 : pop rax ; ret 0xffff
0x00000000004bac83 : pop rax ; retf
0x000000000048811f : pop rax ; retf 0x6c
0x0000000000409304 : pop rax ; retf 0xffff
0x00000000004c3ff5 : pop rbp ; add byte ptr [rax], al ; sbb ch, bl ; clc ; call qword ptr [rdx]
0x00000000004791ca : pop rbp ; enter -0x74b8, 0x14 ; ret
0x00000000004ba725 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000041dd62 : pop rbp ; jmp rax
0x0000000000400f3b : pop rbp ; mov bh, 0x2c ; add dh, dh ; ret 0x7420
0x0000000000400963 : pop rbp ; mov byte ptr [rip + 0x2cb1f5], 1 ; ret
0x0000000000418bb2 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000004008df : pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x00000000004b9080 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000041e749 : pop rbp ; pop r12 ; jmp rax
0x00000000004204fb : pop rbp ; pop r12 ; jmp rcx
0x000000000043ff5e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000043ff78 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00000000004735bc : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000048ee0b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048ed89 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044172a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004015de : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401701 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405ab5 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b44b : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400609 : pop rbp ; pop r12 ; ret
0x000000000048ee0f : pop rbp ; pop r14 ; fmul st(0) ; ret
0x000000000048ed8d : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x000000000044172e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000402206 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004015e2 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401705 : pop rbp ; pop r14 ; ret
0x000000000040f688 : pop rbp ; pop rbp ; ret
0x000000000047a438 : pop rbp ; pop rbx ; ret
0x000000000043f22f : pop rbp ; push rdx ; add byte ptr [rax], al ; ret
0x00000000004004d1 : pop rbp ; ret
0x00000000004791d2 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x00000000004bdc75 : pop rbp ; std ; jmp qword ptr [rax]
0x0000000000412b6c : pop rbp ; sub rax, rdx ; ret
0x00000000004c7a66 : pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004b8078 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000043e3ec : pop rbx ; and eax, 0x3fc00 ; ret
0x000000000043e41f : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004b8076 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000487afa : pop rbx ; jmp rax
0x000000000041109e : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000474a97 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000043e483 : pop rbx ; mov eax, eax ; ret
0x0000000000462f7a : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a5de : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000476a2e : pop rbx ; mov edi, 0x6cb140 ; jmp rax
0x0000000000414d06 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414e76 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000463807 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420218 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000040f684 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000046b3b0 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041dd61 : pop rbx ; pop rbp ; jmp rax
0x000000000041e748 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004204fa : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000043ff5d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000043ff77 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00000000004735bb : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000401700 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405ab4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b44a : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400608 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004d0 : pop rbx ; pop rbp ; ret
0x0000000000412b6b : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000400cd5 : pop rbx ; ret
0x00000000004bb360 : pop rbx ; ret 0x6f9
0x00000000004204a1 : pop rbx ; ret 0xffff
0x00000000004b883d : pop rbx ; retf
0x00000000004bdd40 : pop rbx ; retf 0xfffd
0x00000000004bdc71 : pop rbx ; std ; call rax
0x0000000000466c19 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000044082a : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000047ac78 : pop rbx ; xor esi, esi ; mov edi, dword ptr [rip + 0x251d43] ; jmp rax
0x0000000000446bfa : pop rcx ; add byte ptr [rax - 0x7f], cl ; ret 0x5900
0x00000000004c3be5 : pop rcx ; add byte ptr [rax], al ; call 0x184c34a7
0x0000000000491ae4 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004bd030 : pop rcx ; and byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000474859 : pop rcx ; dec dword ptr [rax + 0x63] ; ret
0x0000000000488d4f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000042ee73 : pop rcx ; ret 0x29
0x0000000000430188 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042be2d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000475065 : pop rdi ; add r8b, bpl ; ret
0x0000000000431ba9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004319b9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004ba61e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000441732 : pop rdi ; jmp rax
0x00000000004b95e1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000049e1fe : pop rdi ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004317d9 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431609 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431705 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431651 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000040220a : pop rdi ; pop rbp ; ret
0x00000000004015e6 : pop rdi ; ret
0x0000000000418da1 : pop rdi ; sbb ch, byte ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004c3d25 : pop rdx ; add byte ptr [rax], al ; test al, 0xba ; clc ; jmp qword ptr [rsi]
0x00000000004a32e9 : pop rdx ; clc ; jmp qword ptr [rax]
0x00000000004ba201 : pop rdx ; je 0x4ba1cb ; ret 0xacfc
0x00000000004ba313 : pop rdx ; leave ; retf
0x00000000004bb1c7 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000004427e4 : pop rdx ; pop r10 ; ret
0x00000000004784d7 : pop rdx ; pop rbx ; ret
0x0000000000442809 : pop rdx ; pop rsi ; ret
0x000000000041e412 : pop rdx ; ret
0x00000000004140c2 : pop rdx ; retf
0x00000000004bad30 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000042e994 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42e96a
0x000000000042ea12 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42e9e8
0x000000000042eea4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ee7a
0x000000000042ef22 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eef8
0x000000000042bd2e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000473a93 : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004260ac : pop rsi ; add dword ptr [rax], eax ; ret
0x000000000048ee11 : pop rsi ; fmul st(0) ; ret
0x000000000048ed8f : pop rsi ; fmulp st(1) ; ret
0x000000000042c835 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000441730 : pop rsi ; pop r15 ; jmp rax
0x0000000000402208 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004015e4 : pop rsi ; pop r15 ; ret
0x0000000000401707 : pop rsi ; ret
0x00000000004298c0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c3fdd : pop rsp ; add byte ptr [rax], al ; and ch, bl ; clc ; call qword ptr [rax]
0x00000000004c3fc5 : pop rsp ; add byte ptr [rax], al ; sbb ch, bl ; clc ; call qword ptr [rbx]
0x000000000042a5c0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000047be74 : pop rsp ; and al, 0x78 ; call r12
0x000000000041e74b : pop rsp ; jmp rax
0x00000000004204fd : pop rsp ; jmp rcx
0x000000000043ff60 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000043ff7a : pop rsp ; mov esi, 3 ; jmp rax
0x0000000000422e20 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004735be : pop rsp ; pop r13 ; jmp rax
0x000000000048ee0d : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048ed8b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044172c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402204 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004015e0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401703 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040f686 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000405ab7 : pop rsp ; pop r13 ; ret
0x000000000047b44d : pop rsp ; pop r14 ; ret
0x000000000046b3b2 : pop rsp ; pop rbp ; ret
0x000000000040060b : pop rsp ; ret
0x000000000047a319 : pop rsp ; retf 0x4df0
0x00000000004bff3c : pop rsp ; sbb al, 0 ; add byte ptr [rax + 0x55], dh ; cmc ; call qword ptr [rcx]
0x00000000004ba387 : pop rsp ; sbb ebp, ebx ; retf
0x00000000004442b9 : pop rsp ; sub byte ptr [rax], al ; pop rbx ; ret
0x00000000004168c8 : pop rsp ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043feef : popfq ; add byte ptr [r8], r8b ; ret
0x00000000004c7fe5 : popfq ; add byte ptr [rax], al ; cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x00000000004c7ffd : popfq ; add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x00000000004a3371 : popfq ; clc ; inc eax ; sahf ; clc ; jmp rax
0x000000000045c9da : popfq ; cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004ba30c : popfq ; jrcxz 0x4ba2d1 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000049b7b9 : popfq ; ret 0xf45
0x00000000004bb0c2 : popfq ; retf 0xde4f
0x0000000000494370 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045f989 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x0000000000435082 : psllq mm1, qword ptr [r15] ; jg 0x43509d ; ret
0x0000000000435083 : psllq mm1, qword ptr [rdi] ; jg 0x43509c ; ret
0x000000000043b3b6 : psllq mm1, qword ptr [rdi] ; jg 0x43b3ca ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b3b5 : psllq mm1, qword ptr [rdi] ; jg 0x43b3cb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b417 : psllq mm1, qword ptr [rdi] ; jg 0x43b42c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004b90e4 : push -0x30 ; retf 0xe72e
0x000000000047e6e0 : push -0x37fa74b8 ; retf 0x24
0x00000000004bdce8 : push -0x3f00023e ; ret 0xfffd
0x000000000044cb02 : push -0x47 ; add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x00000000004b876e : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004ba915 : push -0x57d3205 ; call 0xffffffffab597415
0x00000000004b8921 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000452c2f : push -0x76000005 ; ret 0x8941
0x0000000000477610 : push -0x76b70000 ; ret
0x000000000047bd2e : push -0x7a000006 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000487906 : push -0x7ab70007 ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004436b0 : push -0x7ab7ffb5 ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000480f5f : push -0x7c000006 ; ret 0x8908
0x0000000000485a7a : push -0x9000007 ; ret 0xf02
0x000000000043bcd4 : push -0x9ffffff ; ret 0x7501
0x00000000004bdbc9 : push -3 ; jmp qword ptr [rax]
0x00000000004ba115 : push 0x1b6e41b5 ; std ; retf
0x0000000000469fca : push 0x29 ; add byte ptr es:[rax + 0x39], cl ; retf
0x000000000049c108 : push 0x48 ; add esp, 0x18 ; ret
0x000000000041f66c : push 0x48ee894c ; mov edi, ebx ; call rax
0x00000000004bdbc5 : push 0x6a50fffd ; std ; jmp qword ptr [rax]
0x00000000004bada2 : push 0x6e ; ja 0x4bad2d ; ret 0x48f
0x0000000000415916 : push 0x74c98548 ; sub dword ptr [rax + 0x39], ecx ; retf
0x0000000000476972 : push 0x75400025 ; cmp bl, dh ; ret
0x00000000004ba682 : push 0xfd4cbe ; retf 0xf64
0x000000000048590c : push 0xffffff9 ; xchg eax, esp ; ret
0x000000000045a521 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000004bdcbb : push qword ptr [rax + 0x38fffd9d] ; ret 0xfffd
0x00000000004bdccb : push qword ptr [rax + 0x38fffdc2] ; ret 0xfffd
0x00000000004a38d7 : push qword ptr [rax + 0x40fff91b] ; sbb edi, ecx ; call rax
0x00000000004a3243 : push qword ptr [rax + 0x68] ; clc ; call qword ptr [rax]
0x00000000004a3263 : push qword ptr [rax + 0x75] ; clc ; call qword ptr [rax]
0x00000000004a3a63 : push qword ptr [rax + rdx - 7] ; jmp rsp
0x00000000004a3c8b : push qword ptr [rax - 0x3f000684] ; jl 0x4a3c94 ; call rax
0x00000000004a3bf7 : push qword ptr [rax - 0x3f00068a] ; jbe 0x4a3c00 ; call rax
0x00000000004a32b3 : push qword ptr [rax - 0x3f0007c1] ; clc ; call rax
0x00000000004a328b : push qword ptr [rax - 0x7c] ; clc ; inc eax ; test eax, edi ; call qword ptr [rax]
0x00000000004a3927 : push qword ptr [rax] ; adc cl, bh ; jmp qword ptr [rax + 0x16fff90f]
0x00000000004a323b : push qword ptr [rax] ; clc ; call rax
0x00000000004a3153 : push qword ptr [rax] ; clc ; inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x00000000004a31a7 : push qword ptr [rax] ; div bh ; call qword ptr [rax]
0x00000000004a3557 : push qword ptr [rax] ; in al, 0xf8 ; call qword ptr [rax]
0x00000000004a35db : push qword ptr [rax] ; in eax, 0xf8 ; call qword ptr [rax]
0x00000000004a325b : push qword ptr [rax] ; jb 0x4a325b ; call rax
0x00000000004a35f3 : push qword ptr [rax] ; loope 0x4a35f7 ; inc dword ptr [rax] ; jrcxz 0x4a35fb ; jmp rax
0x00000000004a358f : push qword ptr [rax] ; loopne 0x4a3593 ; push rax ; loope 0x4a3597 ; call rax
0x00000000004a353b : push qword ptr [rax] ; out 0xf8, al ; call qword ptr [rax]
0x00000000004a34d7 : push qword ptr [rax] ; ret
0x00000000004a31e3 : push qword ptr [rax] ; sbb eax, 0x1eb0fff8 ; clc ; jmp rax
0x000000000043d658 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000410bfb : push qword ptr [rbp + 2] ; pop rbx ; ret
0x00000000004154fd : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000464aa5 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000464a4d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000415ba1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000004429b2 : push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415b49 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000466d6a : push qword ptr [rbx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000004a340f : push qword ptr [rcx - 0x3e] ; clc ; push rcx ; ret 0xfff8
0x0000000000468f87 : push qword ptr [rcx] ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x5a], 0xbf ; ret
0x00000000004110d1 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000474989 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000045a522 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x000000000040dd0d : push qword ptr [rdi + 0x20] ; ret
0x000000000043f468 : push qword ptr [rdi + 0x35] ; ret
0x000000000043f50c : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x000000000043f28a : push qword ptr [rdi + 3] ; ret
0x000000000043f2d9 : push qword ptr [rdi + 4] ; ret
0x000000000046acef : push qword ptr [rdi + 6] ; ret
0x000000000044fa95 : push qword ptr [rdi + 8] ; ret
0x000000000046a90c : push qword ptr [rdi + 9] ; pop rbx ; ret
0x0000000000415026 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004a3833 : push qword ptr [rdi + rbx + 0x1f44fff9] ; stc ; call rsp
0x00000000004a36ef : push qword ptr [rsi + 0x19] ; stc ; jmp rsi
0x000000000046abbd : push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x0000000000414c5f : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b87cc : push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004a3908 : push rax ; adc al, 0xf9 ; call rax
0x00000000004a3918 : push rax ; adc bh, cl ; call rax
0x0000000000463b7a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000004164e1 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041b140 : push rax ; adc dh, dh ; ret 0xf0f
0x00000000004a3af7 : push rax ; adc eax, 0x1560fff9 ; stc ; jmp rax
0x00000000004a3910 : push rax ; adc edi, ecx ; call rax
0x00000000004182b4 : push rax ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000493ced : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000443b69 : push rax ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000414c60 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043f3bd : push rax ; add byte ptr [rax], al ; ret
0x000000000041a57f : push rax ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000425cc5 : push rax ; add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045d3bb : push rax ; and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000444b38 : push rax ; call rbx
0x00000000004a32c3 : push rax ; clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x000000000045df75 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004bdd33 : push rax ; enter -3, 0x60 ; leave ; std ; call rdx
0x000000000041b18c : push rax ; imul byte ptr [rdx] ; add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x00000000004a3538 : push rax ; in al, 0xf8 ; push qword ptr [rax] ; out 0xf8, al ; call qword ptr [rax]
0x00000000004a362c : push rax ; in al, dx ; clc ; inc dword ptr [rax] ; xabort -1 ; retf 0xfff8
0x00000000004a3c07 : push rax ; jbe 0x4a3c0c ; inc dword ptr [rax] ; ja 0x4a3c10 ; call qword ptr [rax]
0x00000000004a3cbb : push rax ; jge 0x4a3cbc ; call qword ptr [rax]
0x00000000004a3c97 : push rax ; jl 0x4a3c98 ; call qword ptr [rax]
0x00000000004a3cdb : push rax ; jle 0x4a3cdc ; call qword ptr [rax]
0x00000000004783dc : push rax ; jmp qword ptr [rax]
0x000000000049cb63 : push rax ; jne 0x49cb5c ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049cbc3 : push rax ; jne 0x49cbbc ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004a35d8 : push rax ; jrcxz 0x4a35da ; push qword ptr [rax] ; in eax, 0xf8 ; call qword ptr [rax]
0x00000000004bdc80 : push rax ; lahf ; std ; call qword ptr [rax - 0x2f00025f]
0x00000000004b883a : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000004a3554 : push rax ; loop 0x4a3556 ; push qword ptr [rax] ; in al, 0xf8 ; call qword ptr [rax]
0x00000000004a3593 : push rax ; loope 0x4a3593 ; call rax
0x00000000004bdca0 : push rax ; mov cl, 0xfd ; call qword ptr [rax - 0x2f00024d]
0x0000000000446c0a : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004a34b4 : push rax ; mov ebp, 0xbe20fff8 ; clc ; jmp qword ptr [rax]
0x00000000004bdcb0 : push rax ; mov edx, 0xbc90fffd ; std ; call rax
0x0000000000487f76 : push rax ; mov rax, rbx ; pop rbx ; ret
0x000000000044b9c8 : push rax ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x0000000000418af2 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00000000004573b7 : push rax ; or byte ptr [rcx - 0x77], cl ; push rbp ; or cl, ch ; retf 0xfffe
0x000000000041ba82 : push rax ; or dh, dh ; ret 0x7404
0x000000000041b9fd : push rax ; or dh, dh ; ret 0xf04
0x0000000000422d2c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a355f : push rax ; out 0xf8, eax ; call rax
0x00000000004a35c0 : push rax ; out 0xf8, eax ; jmp qword ptr [rax]
0x000000000046697e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004bdbc8 : push rax ; push -3 ; jmp qword ptr [rax]
0x00000000004c90f0 : push rax ; push rax ; std ; jmp qword ptr [rbx]
0x0000000000446c0c : push rax ; push rsp ; ret
0x000000000041ce5c : push rax ; retf
0x00000000004880f4 : push rax ; retf 0x6c
0x0000000000457b9b : push rax ; rol byte ptr [rax - 0x79f0f606], 1 ; retf 0
0x00000000004a36e8 : push rax ; sbb bh, cl ; jmp rax
0x00000000004103c2 : push rax ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf 0xbd75
0x00000000004164d6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000464b1a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004c90f1 : push rax ; std ; jmp qword ptr [rbx]
0x00000000004bdc90 : push rax ; test al, 0xfd ; call qword ptr [rax - 0x2f000256]
0x0000000000415b9d : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000004b87cd : push rax ; xor byte ptr [rcx], ah ; retf
0x000000000049ec57 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000047992f : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000440671 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000004748c8 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000474a62 : push rbp ; and eax, 0x89485300 ; ret
0x00000000004bff41 : push rbp ; cmc ; call qword ptr [rcx]
0x00000000004954b8 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004573bb : push rbp ; or cl, ch ; retf 0xfffe
0x000000000046ab00 : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000004c6456 : push rbp ; ret
0x0000000000465281 : push rbp ; ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x0000000000425fea : push rbp ; xor rax, rax ; ret
0x0000000000400ad9 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047ad04 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046da16 : push rbx ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000423709 : push rbx ; add qword ptr [rax], rax ; ret
0x000000000046f6c6 : push rbx ; add r8b, bpl ; ret 0xf921
0x00000000004c5e01 : push rbx ; cli ; jmp rsp
0x000000000041640d : push rbx ; cmp byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x000000000044d542 : push rbx ; je 0x44d559 ; cmp esi, 3 ; je 0x44d559 ; pop rbx ; ret
0x0000000000464a19 : push rbx ; je 0x464a7d ; pop rbp ; pop r12 ; ret
0x0000000000464abe : push rbx ; je 0x464b22 ; pop rbp ; pop r12 ; ret
0x000000000046ab01 : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000462bfa : push rbx ; or al, 0xf6 ; ret 0xf04
0x0000000000416d6a : push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000004150ad : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000040d859 : push rbx ; ret
0x0000000000416411 : push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x0000000000416436 : push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0xdfeb
0x0000000000414004 : push rbx ; sub cl, ch ; ret 0xfffe
0x0000000000412181 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004ba1fc : push rbx ; xchg eax, edx ; jae 0x4ba1db ; push rsi ; pop rdx ; je 0x4ba1d0 ; ret 0xacfc
0x000000000043f329 : push rcx ; add byte ptr [rax], al ; ret
0x000000000047b31f : push rcx ; add cl, byte ptr [rax - 0x7d] ; jmp 0xffffffffcbd0fb31
0x00000000004b9485 : push rcx ; call qword ptr [rsi]
0x000000000043599d : push rcx ; jl 0x4359ee ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435b04 : push rcx ; jl 0x435b55 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000049d86f : push rcx ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x00000000004a3413 : push rcx ; ret 0xfff8
0x00000000004a081b : push rcx ; retf
0x0000000000489eb5 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000043b8fa : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000004351e9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000475b25 : push rdi ; add dword ptr [rax + 0xf], ecx ; retf 0x2948
0x000000000043b9ac : push rdi ; add eax, 0xc478d48 ; ret
0x000000000049b3bd : push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000431498 : push rdi ; clc ; ret
0x0000000000431610 : push rdi ; cld ; ret
0x0000000000432137 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434ac9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434a49 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043489a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000414ba4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043492a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000045d458 : push rdi ; or al, 0x83 ; ret
0x000000000045d3db : push rdi ; or al, 0xf6 ; ret 0xf08
0x000000000047a42a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000047ff3a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000047a431 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000043bb90 : push rdi ; or eax, 0x1c478d48 ; ret
0x0000000000487905 : push rdi ; push -0x7ab70007 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000042f8ae : push rdi ; ret
0x0000000000401102 : push rdi ; ret 0
0x000000000042f94e : push rdi ; ret 0xff3
0x000000000042f473 : push rdi ; retf
0x000000000041f7b5 : push rdi ; retf 0
0x000000000042f4f3 : push rdi ; retf 0xcab2
0x0000000000441e45 : push rdi ; sar ebp, -1 ; mov rdi, qword ptr [r14] ; call rbx
0x0000000000432337 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431b5a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000431f37 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000041c57a : push rdi ; sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff9
0x000000000041056f : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000465a5b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000049ecbd : push rdx ; add al, bpl ; retf
0x00000000004c34e5 : push rdx ; add byte ptr [rax], al ; call 0x124c2d6c
0x000000000043f230 : push rdx ; add byte ptr [rax], al ; ret
0x000000000046b04a : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049e0fa : push rdx ; in al, dx ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004c5af5 : push rdx ; ret
0x0000000000456d0a : push rdx ; retf 0
0x00000000004a3794 : push rdx ; sbb al, 0xf9 ; jmp rdx
0x0000000000446c06 : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004bdc61 : push rdx ; std ; call qword ptr [rax - 0x1f0002ac]
0x000000000042e594 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043de99 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x43def0 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000463fe2 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004c3965 : push rsi ; add byte ptr [rax], al ; pop rax ; pushfq ; clc ; jmp rbx
0x0000000000435481 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004354f1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000043b345 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435411 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000043b2e3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042664b : push rsi ; add r11b, sil ; ret
0x000000000042e5a9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004315c2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431d31 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431965 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431b45 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431d25 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431785 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004bada0 : push rsi ; cli ; push 0x6e ; ja 0x4bad2f ; ret 0x48f
0x000000000043d196 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000045c652 : push rsi ; hlt ; add byte ptr es:[rax + 0x63], cl ; retf 0x8948
0x000000000043d186 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000043d156 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000004a343c : push rsi ; mov edi, 0xc056fff8 ; clc ; call rsi
0x000000000042c8bd : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004ba200 : push rsi ; pop rdx ; je 0x4ba1cc ; ret 0xacfc
0x0000000000403316 : push rsi ; ret
0x0000000000485a7d : push rsi ; ret 0xf02
0x000000000045eef8 : push rsi ; ret 0xf10
0x00000000004a3450 : push rsi ; ret 0xfff8
0x00000000004a3448 : push rsi ; sar eax, -1 ; salc ; sar eax, -1 ; push rsi ; ret 0xfff8
0x000000000043d166 : push rsi ; sub eax, edx ; ret
0x00000000004b87c8 : push rsi ; xchg eax, ebp ; jge 0x4b87ad ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000042e5be : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c2734 : push rsp ; add byte ptr [rax], r8b ; mov byte ptr [rdx], al ; clc ; call rsp
0x000000000041b57c : push rsp ; and al, 0x10 ; call rax
0x0000000000464fd3 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x0000000000466bde : push rsp ; and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004478f1 : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x0000000000446f7e : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000467241 : push rsp ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000044b9c6 : push rsp ; and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041e38a : push rsp ; and al, 0x68 ; call rax
0x000000000041f66a : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000044861c : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044b206 : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000491840 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004917fa : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000041ae85 : push rsp ; and eax, 0x950f4100 ; ret
0x00000000004bedb9 : push rsp ; call qword ptr [rax]
0x00000000004bedd1 : push rsp ; call qword ptr [rdx]
0x00000000004c6f34 : push rsp ; mov word ptr [rax], es ; add byte ptr [rax - 0x67], cl ; std ; call rcx
0x00000000004951b9 : push rsp ; or eax, 0x894d0000 ; retf
0x000000000041bd0a : push rsp ; ret
0x0000000000478ca2 : push rsp ; retf 0x45f8
0x000000000047a2b0 : push rsp ; retf 0x48f8
0x00000000004708df : push rsp ; retf 0xeb08
0x00000000004a385c : push rsp ; sbb edi, ecx ; jmp rsp
0x00000000004bdc65 : push rsp ; std ; jmp rax
0x00000000004c0f34 : push rsp ; sub al, 0 ; add byte ptr [rax], ch ; sal ch, cl ; call rdx
0x00000000004ba9ca : push rsp ; syscall
0x0000000000429580 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004c7fb5 : pushfq ; add byte ptr [rax], al ; cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x00000000004c7fcd : pushfq ; add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x0000000000447100 : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004c38d9 : pushfq ; clc ; call qword ptr [rdx]
0x00000000004c3969 : pushfq ; clc ; jmp rbx
0x000000000041413c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000042a280 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c727c : pushfq ; pop qword ptr [rax] ; add al, dl ; sub bh, bl ; call rsp
0x00000000004686a3 : pushfq ; ret 0xb60f
0x000000000049b780 : pushfq ; ret 0xf45
0x00000000004a3654 : rcl ah, 0xf8 ; call qword ptr [rax]
0x00000000004a3648 : rcl al, 1 ; clc ; jmp qword ptr [rax]
0x00000000004a369c : rcl bh, 1 ; clc ; jmp qword ptr [rax]
0x0000000000443ba8 : rcl byte ptr [rax + 0x4a], 1 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000492a6d : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046f6c5 : rcl byte ptr [rbx + 0x4b], 1 ; add al, ch ; ret 0xf921
0x00000000004bab11 : rcl byte ptr [rdi], cl ; retf
0x00000000004a38fc : rcl byte ptr [rip + 0x1550fff9], 1 ; stc ; call rax
0x000000000042664a : rcl byte ptr [rsi + 0x43], 1 ; add bl, dh ; ret
0x000000000040127c : rcl dword ptr [rax], cl ; add byte ptr [rax + 2], dil ; syscall
0x00000000004ba63a : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x00000000004ba1ff : rcl dword ptr [rsi + 0x5a], cl ; je 0x4ba1cd ; ret 0xacfc
0x00000000004ba639 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004ba1fb : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4ba1d1 ; ret 0xacfc
0x0000000000441fcc : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004a36a8 : rcr bl, 0xf8 ; call qword ptr [rax]
0x000000000049855d : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004631ca : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000044082c : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000462f7c : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000047a437 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000004bdc74 : rcr byte ptr [rbp - 3], 1 ; jmp qword ptr [rax]
0x0000000000442930 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00000000004175bf : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041eb8e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047b449 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ed2e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049c457 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax + rax] ; ret
0x000000000045c3cb : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000041e643 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000041785d : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000049237d : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ba61d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000045c9d9 : rcr dword ptr [rbp - 0x38b70004], cl ; ret 0xffb0
0x0000000000478939 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004ba971 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000432986 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004005d9 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e2 ; ret
0x00000000004002e1 : ret
0x0000000000400624 : ret 0
0x00000000004ae500 : ret 0x10
0x000000000044f70b : ret 0x100
0x0000000000462baf : ret 0x107
0x0000000000476466 : ret 0x10eb
0x000000000041bd32 : ret 0x110
0x000000000047a40c : ret 0x114d
0x00000000004473b8 : ret 0x1189
0x000000000044614b : ret 0x11e9
0x000000000048353a : ret 0x12
0x00000000004748cc : ret 0x1272
0x000000000040b1da : ret 0x12d
0x000000000040abda : ret 0x133
0x000000000040a7da : ret 0x137
0x000000000049d623 : ret 0x1374
0x000000000046dcfd : ret 0x1376
0x000000000040a0da : ret 0x13e
0x000000000046ae91 : ret 0x1477
0x000000000041b421 : ret 0x148
0x0000000000415bb2 : ret 0x149
0x0000000000419d33 : ret 0x14c
0x0000000000435d5c : ret 0x14d
0x00000000004074da : ret 0x16a
0x0000000000423a3a : ret 0x17
0x0000000000435c99 : ret 0x180f
0x000000000044f1a6 : ret 0x1874
0x0000000000426055 : ret 0x1876
0x00000000004176f5 : ret 0x18eb
0x0000000000468235 : ret 0x190
0x0000000000488ac2 : ret 0x1a75
0x00000000004bab7a : ret 0x1ad4
0x00000000004b930d : ret 0x1b49
0x000000000041db6f : ret 0x1be
0x00000000004b01d0 : ret 0x1d4
0x00000000004b0968 : ret 0x1d5
0x0000000000400c85 : ret 0x1d89
0x0000000000447d03 : ret 0x1e76
0x0000000000449897 : ret 0x1f0f
0x000000000041e7ce : ret 0x1f76
0x000000000044f627 : ret 0x200
0x0000000000446efc : ret 0x2176
0x00000000004a0f26 : ret 0x22
0x00000000004237d8 : ret 0x2288
0x00000000004a0446 : ret 0x22b5
0x000000000042fab2 : ret 0x2373
0x000000000043f347 : ret 0x23e8
0x00000000004af1d8 : ret 0x24
0x0000000000470fdc : ret 0x25
0x00000000004146d9 : ret 0x2501
0x000000000041dd1d : ret 0x2575
0x000000000046d4aa : ret 0x25f8
0x0000000000468a3a : ret 0x263e
0x0000000000468432 : ret 0x2644
0x0000000000467f3a : ret 0x2649
0x0000000000401426 : ret 0x2773
0x0000000000465856 : ret 0x2774
0x0000000000431266 : ret 0x280f
0x0000000000426045 : ret 0x2876
0x000000000047f4d8 : ret 0x28f5
0x000000000042ee74 : ret 0x29
0x0000000000485dfd : ret 0x2941
0x00000000004105dd : ret 0x2948
0x000000000049b70a : ret 0x2949
0x00000000004329d1 : ret 0x294c
0x00000000004126eb : ret 0x294d
0x000000000041e503 : ret 0x2a
0x000000000041e6db : ret 0x2a75
0x000000000041be6e : ret 0x2b07
0x000000000041953e : ret 0x2b12
0x000000000041a052 : ret 0x2b25
0x000000000041701a : ret 0x2b40
0x000000000041027f : ret 0x2b48
0x00000000004463ee : ret 0x2b49
0x00000000004159da : ret 0x2b6b
0x000000000043e352 : ret 0x2b77
0x0000000000411c7a : ret 0x2b8a
0x000000000043dff7 : ret 0x2c76
0x00000000004834c4 : ret 0x2e
0x0000000000462795 : ret 0x2e66
0x00000000004462d5 : ret 0x3101
0x0000000000403836 : ret 0x3145
0x000000000046fe82 : ret 0x314c
0x00000000004af6c8 : ret 0x33
0x0000000000489dba : ret 0x33b
0x0000000000403fe1 : ret 0x348
0x000000000044c32b : ret 0x349
0x000000000041d12a : ret 0x350
0x0000000000488b18 : ret 0x357e
0x00000000004ba45a : ret 0x3827
0x000000000047bc22 : ret 0x3840
0x000000000040fc9f : ret 0x3841
0x000000000044058f : ret 0x3845
0x0000000000426035 : ret 0x3876
0x00000000004436b9 : ret 0x3880
0x0000000000414fbb : ret 0x389
0x00000000004b8ae6 : ret 0x38ae
0x000000000041962a : ret 0x38b
0x000000000044fc01 : ret 0x3948
0x000000000041cff2 : ret 0x3949
0x000000000044d146 : ret 0x394c
0x0000000000452ac8 : ret 0x394d
0x000000000043d772 : ret 0x3a01
0x000000000042fa9b : ret 0x3a73
0x000000000044cc53 : ret 0x3a76
0x0000000000442921 : ret 0x3b01
0x000000000046731a : ret 0x3bba
0x000000000040e6fe : ret 0x3ce8
0x0000000000445b15 : ret 0x3d83
0x000000000046a1d2 : ret 0x3e9
0x000000000049b48f : ret 0x3ee9
0x00000000004190d2 : ret 0x4007
0x000000000040262a : ret 0x401
0x0000000000466a26 : ret 0x408d
0x000000000047819f : ret 0x40bf
0x0000000000445f00 : ret 0x4101
0x00000000004550e0 : ret 0x4108
0x0000000000456ba8 : ret 0x4110
0x000000000041c70c : ret 0x4117
0x000000000046f01c : ret 0x412f
0x0000000000446cce : ret 0x41c3
0x000000000042e42a : ret 0x4266
0x0000000000468332 : ret 0x428d
0x000000000044cc4a : ret 0x4372
0x000000000044d6db : ret 0x4389
0x0000000000445dbf : ret 0x438b
0x00000000004112d3 : ret 0x4401
0x0000000000455667 : ret 0x440f
0x0000000000464797 : ret 0x4410
0x000000000047b711 : ret 0x448d
0x0000000000489a15 : ret 0x44c6
0x0000000000462512 : ret 0x4502
0x000000000046d9a8 : ret 0x4574
0x0000000000463058 : ret 0x45f6
0x00000000004b3870 : ret 0x461a
0x00000000004b95e4 : ret 0x474c
0x000000000049d873 : ret 0x4776
0x000000000045a4d3 : ret 0x47e9
0x0000000000402a3a : ret 0x4801
0x000000000042c6a1 : ret 0x4802
0x000000000042c77d : ret 0x4803
0x00000000004043c0 : ret 0x4804
0x000000000042c74d : ret 0x4805
0x000000000042c735 : ret 0x4806
0x0000000000423763 : ret 0x4808
0x000000000044f1b4 : ret 0x4809
0x0000000000458994 : ret 0x480f
0x000000000041af89 : ret 0x4810
0x000000000044cb20 : ret 0x4811
0x0000000000453112 : ret 0x481e
0x000000000041aecb : ret 0x4820
0x000000000045bbdc : ret 0x482d
0x00000000004446cf : ret 0x4830
0x0000000000401422 : ret 0x4838
0x000000000042e336 : ret 0x4840
0x0000000000423878 : ret 0x48c3
0x00000000004674cd : ret 0x48d
0x0000000000473c04 : ret 0x48e9
0x00000000004bada6 : ret 0x48f
0x00000000004030ce : ret 0x4901
0x000000000044bf03 : ret 0x4904
0x000000000042c9be : ret 0x4906
0x0000000000457218 : ret 0x4908
0x000000000046a269 : ret 0x4909
0x0000000000422ad2 : ret 0x4910
0x0000000000420d46 : ret 0x4920
0x000000000041fcc0 : ret 0x4930
0x000000000047e614 : ret 0x4976
0x0000000000420a22 : ret 0x4a23
0x000000000046cad2 : ret 0x4b30
0x0000000000405a45 : ret 0x4c01
0x000000000042c901 : ret 0x4c02
0x000000000044ca0f : ret 0x4c04
0x0000000000485b45 : ret 0x4c08
0x0000000000452806 : ret 0x4c40
0x00000000004489d0 : ret 0x4c88
0x00000000004bf5d9 : ret 0x4c92
0x0000000000446de1 : ret 0x4d02
0x00000000004ba807 : ret 0x4e27
0x0000000000469a87 : ret 0x4eb
0x0000000000444b88 : ret 0x4ee9
0x00000000004459de : ret 0x4f74
0x000000000042fa84 : ret 0x5173
0x000000000044efb3 : ret 0x527e
0x0000000000462dd8 : ret 0x5389
0x000000000046af17 : ret 0x53e8
0x000000000045b0cb : ret 0x53e9
0x000000000047b9ad : ret 0x5438
0x0000000000491866 : ret 0x5488
0x000000000044cfca : ret 0x5489
0x000000000045ad23 : ret 0x548b
0x00000000004b8a6c : ret 0x5508
0x000000000040564f : ret 0x5525
0x00000000004211b2 : ret 0x575
0x000000000046dd0b : ret 0x576
0x00000000004bad38 : ret 0x5803
0x000000000040e8bb : ret 0x589
0x0000000000446bff : ret 0x5900
0x00000000004b8740 : ret 0x591c
0x00000000004b94a7 : ret 0x5ae4
0x0000000000449cc1 : ret 0x5c77
0x00000000004bb1d2 : ret 0x62c1
0x000000000045c593 : ret 0x6348
0x00000000004118f2 : ret 0x6349
0x000000000043f407 : ret 0x63e8
0x000000000049a6c0 : ret 0x65e9
0x0000000000489de7 : ret 0x6610
0x0000000000425fc2 : ret 0x6620
0x00000000004238c5 : ret 0x66c3
0x00000000004748de : ret 0x674
0x00000000004b875f : ret 0x67b2
0x000000000047d72d : ret 0x6876
0x000000000049da72 : ret 0x68e8
0x000000000043ed1d : ret 0x6b8
0x000000000049b767 : ret 0x6be9
0x000000000044f49d : ret 0x6de8
0x00000000004bb361 : ret 0x6f9
0x0000000000432a1e : ret 0x7280
0x00000000004762b9 : ret 0x728d
0x000000000043e1bb : ret 0x72e9
0x0000000000415501 : ret 0x7401
0x000000000041e8cf : ret 0x7402
0x000000000041ba85 : ret 0x7404
0x0000000000410df3 : ret 0x7408
0x0000000000400f40 : ret 0x7420
0x0000000000458d62 : ret 0x7450
0x000000000043bcd9 : ret 0x7501
0x000000000043bce6 : ret 0x7502
0x0000000000426779 : ret 0x7504
0x000000000043d114 : ret 0x7508
0x000000000043bcab : ret 0x7510
0x0000000000426774 : ret 0x7518
0x000000000043bcb8 : ret 0x7520
0x000000000043bcc5 : ret 0x7540
0x0000000000473251 : ret 0x758b
0x000000000042e972 : ret 0x7677
0x00000000004463e2 : ret 0x774
0x0000000000478bfa : ret 0x777
0x000000000049b55b : ret 0x77e9
0x000000000041b3ba : ret 0x7ae9
0x0000000000446f2a : ret 0x7b8
0x0000000000425f52 : ret 0x7e20
0x00000000004216cc : ret 0x7f10
0x0000000000461a16 : ret 0x7f3c
0x0000000000432d3e : ret 0x80
0x00000000004228a9 : ret 0x8000
0x0000000000469a8c : ret 0x8001
0x00000000004729c5 : ret 0x8005
0x000000000047d5e6 : ret 0x8008
0x000000000046a472 : ret 0x8010
0x0000000000473afe : ret 0x8018
0x00000000004703c8 : ret 0x804
0x000000000046c710 : ret 0x8116
0x000000000048709b : ret 0x8148
0x000000000045ace4 : ret 0x8166
0x0000000000419e8c : ret 0x820f
0x00000000004041a0 : ret 0x8301
0x000000000047db21 : ret 0x8308
0x000000000042e540 : ret 0x830f
0x000000000043e080 : ret 0x8341
0x0000000000402b20 : ret 0x8348
0x000000000041b483 : ret 0x8349
0x000000000047fc89 : ret 0x8364
0x0000000000411240 : ret 0x840
0x000000000046b2f2 : ret 0x8401
0x0000000000417709 : ret 0x840f
0x000000000043e120 : ret 0x8444
0x000000000049b6d7 : ret 0x8445
0x000000000045c585 : ret 0x8504
0x0000000000462c66 : ret 0x8508
0x0000000000412e02 : ret 0x850f
0x0000000000468595 : ret 0x8545
0x00000000004191a2 : ret 0x8548
0x000000000044efc5 : ret 0x854d
0x0000000000459b5c : ret 0x858b
0x00000000004573fd : ret 0x85c6
0x000000000045544a : ret 0x85c7
0x000000000049a958 : ret 0x85e9
0x0000000000400c1e : ret 0x860f
0x000000000044f915 : ret 0x870f
0x00000000004b807e : ret 0x871e
0x0000000000461a1d : ret 0x875
0x0000000000426065 : ret 0x876
0x0000000000489a10 : ret 0x87e
0x000000000044e9aa : ret 0x87e9
0x000000000047e3d4 : ret 0x87f6
0x0000000000447f11 : ret 0x8804
0x000000000045e252 : ret 0x880f
0x000000000044ee67 : ret 0x8840
0x0000000000447312 : ret 0x8901
0x0000000000470d8e : ret 0x8908
0x0000000000400cc6 : ret 0x890f
0x000000000044d0cf : ret 0x8941
0x0000000000400669 : ret 0x8944
0x00000000004112bb : ret 0x8945
0x000000000040339d : ret 0x8948
0x000000000041006d : ret 0x8949
0x0000000000403c07 : ret 0x894c
0x0000000000445edf : ret 0x894d
0x00000000004794cb : ret 0x894e
0x000000000048369c : ret 0x89e9
0x000000000047822e : ret 0x8b
0x000000000046275a : ret 0x8b04
0x000000000046afe3 : ret 0x8b05
0x00000000004ba8ae : ret 0x8b36
0x000000000044f23a : ret 0x8b41
0x0000000000401594 : ret 0x8b48
0x0000000000410a36 : ret 0x8b49
0x000000000047944e : ret 0x8b4a
0x0000000000411590 : ret 0x8b4c
0x000000000046df63 : ret 0x8be9
0x00000000004804c5 : ret 0x8d01
0x000000000045272a : ret 0x8d04
0x0000000000459890 : ret 0x8d0f
0x000000000040d45f : ret 0x8d48
0x00000000004033b6 : ret 0x8d49
0x0000000000465dd8 : ret 0x8d4a
0x0000000000411546 : ret 0x8d4c
0x000000000041c76c : ret 0x8d4e
0x0000000000410581 : ret 0x8e0f
0x00000000004015be : ret 0x900
0x00000000004212f5 : ret 0x90c3
0x000000000041251b : ret 0x938b
0x0000000000485a50 : ret 0x940f
0x000000000048a666 : ret 0x941
0x0000000000465af8 : ret 0x94c
0x000000000047acff : ret 0x950f
0x0000000000455ba9 : ret 0x9522
0x0000000000403a48 : ret 0x953d
0x00000000004b96d3 : ret 0x9576
0x0000000000481800 : ret 0x9589
0x000000000041b3d1 : ret 0x976
0x0000000000488b99 : ret 0x9e74
0x0000000000410498 : ret 0x9e9
0x0000000000474009 : ret 0x9f75
0x00000000004add00 : ret 0xa
0x00000000004917d0 : ret 0xa074
0x00000000004b93c3 : ret 0xa514
0x00000000004b9847 : ret 0xac65
0x000000000049dd2e : ret 0xace8
0x00000000004ba204 : ret 0xacfc
0x000000000043e1a6 : ret 0xaf0f
0x000000000041bd6f : ret 0xb48b
0x0000000000402989 : ret 0xb60f
0x000000000046834b : ret 0xb70f
0x000000000043ec50 : ret 0xb8
0x000000000045fee9 : ret 0xb848
0x000000000044f005 : ret 0xb87f
0x0000000000426647 : ret 0xb8c3
0x0000000000467282 : ret 0xb8e9
0x00000000004848e2 : ret 0xb908
0x00000000004b970e : ret 0xb9b9
0x00000000004563cd : ret 0xbb41
0x0000000000478d22 : ret 0xbc41
0x000000000049baf5 : ret 0xbc80
0x000000000046099e : ret 0xbd83
0x0000000000484ad0 : ret 0xbe08
0x00000000004b9464 : ret 0xbe57
0x000000000045adb8 : ret 0xbf07
0x0000000000483eb1 : ret 0xbf08
0x0000000000422769 : ret 0xc000
0x000000000048ee6e : ret 0xc001
0x000000000048ee22 : ret 0xc002
0x0000000000412d43 : ret 0xc031
0x000000000046b850 : ret 0xc084
0x0000000000425e10 : ret 0xc085
0x0000000000443076 : ret 0xc141
0x000000000040ea46 : ret 0xc148
0x00000000004673ed : ret 0xc269
0x000000000045b286 : ret 0xc283
0x000000000042f954 : ret 0xc2b2
0x000000000043e3c1 : ret 0xc35b
0x000000000043f3a7 : ret 0xc3e8
0x00000000004b7c02 : ret 0xc4c3
0x00000000004b9018 : ret 0xc4ff
0x0000000000432ab8 : ret 0xc580
0x000000000049b70d : ret 0xc5e9
0x00000000004826d0 : ret 0xc6e9
0x00000000004211f1 : ret 0xc6eb
0x00000000004381b0 : ret 0xc748
0x000000000041c01c : ret 0xc789
0x0000000000414fac : ret 0xc883
0x000000000047d233 : ret 0xc931
0x00000000004434f9 : ret 0xc985
0x0000000000468fbe : ret 0xc9be
0x0000000000423731 : ret 0xc9ff
0x000000000048125d : ret 0xcb73
0x00000000004b8aaa : ret 0xcca7
0x00000000004bab8d : ret 0xcd11
0x000000000041d401 : ret 0xce31
0x0000000000404e54 : ret 0xce80
0x0000000000480b35 : ret 0xce83
0x0000000000418c4b : ret 0xcf31
0x00000000004597cb : ret 0xcfe8
0x00000000004ae100 : ret 0xd
0x000000000047bb3a : ret 0xd021
0x000000000044241f : ret 0xd029
0x000000000043292c : ret 0xd073
0x000000000040565e : ret 0xd089
0x00000000004643d5 : ret 0xd108
0x0000000000486a69 : ret 0xd129
0x000000000049a326 : ret 0xd284
0x0000000000485967 : ret 0xd309
0x0000000000488f7b : ret 0xd348
0x000000000045b2a3 : ret 0xd529
0x0000000000486ae0 : ret 0xd629
0x000000000046713d : ret 0xd721
0x00000000004869f2 : ret 0xd729
0x000000000043e1ab : ret 0xd889
0x00000000004ba625 : ret 0xd8f
0x00000000004778b3 : ret 0xd8f7
0x0000000000400806 : ret 0xd975
0x000000000047b900 : ret 0xda38
0x000000000040f9b5 : ret 0xdaf7
0x0000000000448441 : ret 0xdb85
0x00000000004ba706 : ret 0xdcd9
0x000000000046a9d0 : ret 0xdd72
0x00000000004b9682 : ret 0xde5d
0x0000000000410b75 : ret 0xde74
0x000000000049b2d2 : ret 0xde89
0x00000000004b8411 : ret 0xde9e
0x0000000000486eb8 : ret 0xdee9
0x0000000000422629 : ret 0xe000
0x000000000043bc69 : ret 0xe074
0x0000000000446f1d : ret 0xe077
0x000000000044318b : ret 0xe083
0x000000000044b4a3 : ret 0xe183
0x00000000004442d2 : ret 0xe1eb
0x00000000004473ab : ret 0xe277
0x000000000040dc9c : ret 0xe281
0x0000000000400dc2 : ret 0xe283
0x000000000046ad87 : ret 0xe3e8
0x0000000000403426 : ret 0xe4e8
0x00000000004664a0 : ret 0xe575
0x00000000004176e7 : ret 0xe675
0x0000000000457dd3 : ret 0xe680
0x00000000004ba826 : ret 0xe71f
0x0000000000401418 : ret 0xe72
0x0000000000452c60 : ret 0xe783
0x000000000046e1c5 : ret 0xe874
0x0000000000459745 : ret 0xe87f
0x0000000000454fe2 : ret 0xe883
0x000000000046e5ae : ret 0xe8c0
0x00000000004007be : ret 0xe8c1
0x0000000000425563 : ret 0xe901
0x0000000000402c52 : ret 0xe902
0x0000000000449e89 : ret 0xe904
0x000000000047b531 : ret 0xe907
0x00000000004237c6 : ret 0xe908
0x00000000004293e6 : ret 0xe910
0x0000000000453209 : ret 0xe920
0x000000000041fd63 : ret 0xe96e
0x00000000004b8b87 : ret 0xe970
0x0000000000488adc : ret 0xe974
0x000000000041ff0f : ret 0xe977
0x000000000043e34a : ret 0xea81
0x0000000000457d57 : ret 0xeac0
0x0000000000400ca1 : ret 0xeac1
0x0000000000422af6 : ret 0xeb10
0x000000000041fd2f : ret 0xeb5b
0x000000000040e6ba : ret 0xeb72
0x00000000004022e8 : ret 0xebe8
0x00000000004bb338 : ret 0xec2
0x000000000047f469 : ret 0xec75
0x00000000004708f8 : ret 0xed75
0x000000000044affe : ret 0xed85
0x0000000000445e5f : ret 0xee75
0x00000000004598ac : ret 0xee8
0x00000000004bafda : ret 0xef32
0x0000000000418776 : ret 0xef75
0x00000000004224e9 : ret 0xf000
0x000000000040d628 : ret 0xf001
0x000000000040293a : ret 0xf01
0x000000000041a156 : ret 0xf02
0x000000000041ba00 : ret 0xf04
0x000000000045d3de : ret 0xf08
0x000000000045a267 : ret 0xf0e9
0x000000000046b456 : ret 0xf0eb
0x000000000041b143 : ret 0xf0f
0x0000000000421682 : ret 0xf10
0x0000000000462185 : ret 0xf229
0x000000000044fe96 : ret 0xf301
0x000000000045d41a : ret 0xf40
0x000000000046851d : ret 0xf43
0x000000000049b781 : ret 0xf45
0x00000000004643fa : ret 0xf48
0x000000000045a824 : ret 0xf4c
0x0000000000402c5b : ret 0xf4e9
0x000000000046abce : ret 0xf631
0x0000000000421499 : ret 0xf66
0x000000000043df6c : ret 0xf685
0x000000000041bd53 : ret 0xf710
0x0000000000479f35 : ret 0xf74
0x0000000000426aec : ret 0xf748
0x0000000000465f40 : ret 0xf749
0x000000000048b9ca : ret 0xf75e
0x00000000004329de : ret 0xf80
0x00000000004223a9 : ret 0xf800
0x00000000004b82f0 : ret 0xf869
0x00000000004a3790 : ret 0xf91c
0x000000000046f6ca : ret 0xf921
0x00000000004045da : ret 0xf929
0x000000000045efca : ret 0xfa28
0x0000000000459c69 : ret 0xfa80
0x000000000048aa76 : ret 0xfa81
0x0000000000405672 : ret 0xfac1
0x000000000044679a : ret 0xfb9b
0x0000000000422269 : ret 0xfc00
0x000000000048bfb6 : ret 0xfc01
0x000000000048bf6a : ret 0xfc02
0x000000000043f49a : ret 0xfc3
0x0000000000446ff0 : ret 0xfd83
0x0000000000441bda : ret 0xfdc3
0x000000000047392a : ret 0xfde8
0x0000000000402910 : ret 0xfdf
0x0000000000422129 : ret 0xfe00
0x000000000043e0a3 : ret 0xfe83
0x00000000004328fe : ret 0xfec5
0x0000000000421fe9 : ret 0xff00
0x00000000004348f1 : ret 0xff2
0x000000000042e35a : ret 0xff3
0x000000000041758a : ret 0xff67
0x0000000000421ea9 : ret 0xff80
0x0000000000488db6 : ret 0xff81
0x0000000000488d6a : ret 0xff82
0x000000000040c39a : ret 0xff99
0x0000000000487050 : ret 0xff9f
0x00000000004527f2 : ret 0xffb0
0x0000000000400540 : ret 0xffb8
0x0000000000403d40 : ret 0xffbf
0x0000000000421d69 : ret 0xffc0
0x00000000004003e6 : ret 0xffd0
0x000000000042102e : ret 0xffdf
0x0000000000421c29 : ret 0xffe0
0x000000000040874a : ret 0xffe2
0x000000000049e35a : ret 0xffe7
0x000000000044163a : ret 0xffe8
0x000000000044153a : ret 0xffe9
0x0000000000459f0c : ret 0xffee
0x000000000040ef3c : ret 0xffef
0x000000000040dbee : ret 0xfff0
0x00000000004c1ca1 : ret 0xfff7
0x00000000004219a9 : ret 0xfff8
0x000000000041c581 : ret 0xfff9
0x000000000043f059 : ret 0xfffb
0x0000000000421869 : ret 0xfffc
0x0000000000441ccb : ret 0xfffd
0x0000000000405408 : ret 0xfffe
0x0000000000409a6e : ret 0xffff
0x000000000040ffa1 : ret 1
0x0000000000419d1a : ret 2
0x000000000042f712 : ret 3
0x0000000000426119 : ret 4
0x000000000041a666 : ret 5
0x0000000000418dc0 : ret 6
0x00000000004b21a4 : ret 7
0x000000000040a54e : ret 8
0x000000000043c71a : ret 9
0x0000000000400761 : retf
0x0000000000404ad7 : retf 0
0x000000000043297d : retf 0x1073
0x0000000000447070 : retf 0x1089
0x00000000004ae660 : retf 0x11
0x000000000047fe4d : retf 0x114d
0x0000000000448e0b : retf 0x1308
0x000000000041d4c0 : retf 0x1373
0x0000000000409cd2 : retf 0x142
0x0000000000449054 : retf 0x148
0x0000000000446e74 : retf 0x1489
0x0000000000448997 : retf 0x149
0x0000000000432c17 : retf 0x14c
0x0000000000423b12 : retf 0x16
0x00000000004490be : retf 0x1608
0x00000000004075d2 : retf 0x169
0x000000000047a33d : retf 0x194d
0x0000000000442742 : retf 0x19b8
0x0000000000418d08 : retf 0x1b73
0x000000000047d5d8 : retf 0x1b8
0x00000000004811ab : retf 0x1ba
0x00000000004b0208 : retf 0x1d4
0x00000000004b09a8 : retf 0x1d5
0x0000000000429307 : retf 0x1f0f
0x00000000004429a2 : retf 0x1f8
0x000000000049e542 : retf 0x1fc
0x00000000004190fa : retf 0x2173
0x0000000000420bf2 : retf 0x21b
0x0000000000407476 : retf 0x22
0x000000000041d779 : retf 0x2273
0x00000000004a0eca : retf 0x22a2
0x000000000047f463 : retf 0x2348
0x000000000047e6e5 : retf 0x24
0x00000000004707c4 : retf 0x25
0x000000000047a6ed : retf 0x252a
0x0000000000471cba : retf 0x2582
0x000000000046d311 : retf 0x25cc
0x000000000046d0c2 : retf 0x2601
0x0000000000468da6 : retf 0x2645
0x000000000045f5ed : retf 0x26db
0x000000000045a69a : retf 0x272c
0x0000000000430079 : retf 0x280f
0x00000000004432f9 : retf 0x2893
0x0000000000490b2f : retf 0x2941
0x0000000000410dc7 : retf 0x2948
0x00000000004100ba : retf 0x294c
0x000000000041ddbc : retf 0x2a
0x00000000004b94fc : retf 0x2a91
0x000000000041ffa6 : retf 0x2aa7
0x000000000041f1b6 : retf 0x2ab5
0x000000000041c932 : retf 0x2ade
0x000000000044d632 : retf 0x2af
0x000000000041caed : retf 0x2b06
0x0000000000400784 : retf 0x2c
0x00000000004b897a : retf 0x2c90
0x00000000004010f9 : retf 0x2cb5
0x000000000046a171 : retf 0x2d75
0x000000000040ec25 : retf 0x2e66
0x000000000044cc5e : retf 0x2f72
0x0000000000469d3b : retf 0x2f74
0x000000000048d362 : retf 0x306
0x000000000045aca0 : retf 0x30be
0x000000000043fe4f : retf 0x3140
0x00000000004344ba : retf 0x3148
0x00000000004ba765 : retf 0x3159
0x00000000004ba7cd : retf 0x32dd
0x00000000004af708 : retf 0x33
0x00000000004b9083 : retf 0x33e6
0x0000000000443977 : retf 0x348
0x00000000004598b8 : retf 0x349
0x00000000004438ea : retf 0x34c
0x00000000004b95b1 : retf 0x3617
0x0000000000434496 : retf 0x377
0x0000000000449627 : retf 0x3948
0x0000000000470563 : retf 0x3980
0x00000000004bdb69 : retf 0x3b9a
0x0000000000420a12 : retf 0x3bc
0x000000000045bf95 : retf 0x3be9
0x00000000004babc6 : retf 0x3d8a
0x00000000004b845b : retf 0x3ec
0x000000000041dbdd : retf 0x41
0x0000000000470a54 : retf 0x4108
0x00000000004a3359 : retf 0x42
0x000000000042e40c : retf 0x4266
0x000000000047f25a : retf 0x42f6
0x00000000004a4658 : retf 0x43ec
0x000000000042905a : retf 0x4466
0x00000000004888c0 : retf 0x4489
0x0000000000404eb5 : retf 0x44f6
0x00000000004b31e0 : retf 0x456e
0x0000000000478ca3 : retf 0x45f8
0x0000000000416415 : retf 0x476
0x000000000041c23f : retf 0x4801
0x000000000046d4cf : retf 0x4802
0x000000000040dacb : retf 0x4803
0x000000000040da7b : retf 0x4804
0x000000000040d92f : retf 0x4805
0x000000000040daa3 : retf 0x4806
0x000000000040daf3 : retf 0x4807
0x000000000040da08 : retf 0x4808
0x000000000040d993 : retf 0x4809
0x000000000040db93 : retf 0x480a
0x000000000040db67 : retf 0x480b
0x000000000040d9d5 : retf 0x480c
0x000000000040d963 : retf 0x480d
0x000000000049dd73 : retf 0x4810
0x0000000000425ebe : retf 0x4890
0x000000000047a2b1 : retf 0x48f8
0x000000000047ec8d : retf 0x4b
0x0000000000442b9b : retf 0x4b53
0x000000000041c380 : retf 0x4b83
0x00000000004bc3a0 : retf 0x4bb9
0x000000000047ab1e : retf 0x4bc5
0x000000000047bc8b : retf 0x4c01
0x000000000041b597 : retf 0x4c04
0x000000000048611f : retf 0x4c8b
0x0000000000418122 : retf 0x4d01
0x0000000000413c5d : retf 0x4d80
0x000000000047a308 : retf 0x4de8
0x0000000000478ba1 : retf 0x4df0
0x000000000047a32c : retf 0x4df8
0x000000000046395d : retf 0x5077
0x0000000000447a7e : retf 0x5355
0x00000000004917ca : retf 0x5489
0x000000000044cc38 : retf 0x5576
0x000000000040ead3 : retf 0x6411
0x0000000000430163 : retf 0x6601
0x00000000004302b3 : retf 0x6602
0x0000000000430403 : retf 0x6603
0x0000000000430553 : retf 0x6604
0x00000000004306a3 : retf 0x6605
0x00000000004307f3 : retf 0x6606
0x0000000000430943 : retf 0x6607
0x0000000000430a93 : retf 0x6608
0x0000000000430be3 : retf 0x6609
0x0000000000430d33 : retf 0x660a
0x0000000000430e83 : retf 0x660b
0x0000000000430fd3 : retf 0x660c
0x0000000000431123 : retf 0x660d
0x0000000000431273 : retf 0x660e
0x00000000004313c3 : retf 0x660f
0x00000000004344b5 : retf 0x676
0x00000000004baae5 : retf 0x67ca
0x0000000000467428 : retf 0x694d
0x0000000000432ab3 : retf 0x6a77
0x000000000046ace2 : retf 0x6b8
0x00000000004880f5 : retf 0x6c
0x00000000004b8ae2 : retf 0x6ee8
0x0000000000432ca2 : retf 0x70e
0x000000000045f2f2 : retf 0x72
0x00000000004ba9a6 : retf 0x7272
0x0000000000478482 : retf 0x76
0x00000000004ba17f : retf 0x76a5
0x000000000047a276 : retf 0x77f
0x00000000004b9002 : retf 0x79f5
0x000000000046a196 : retf 0x7a80
0x0000000000462b09 : retf 0x7a8b
0x000000000043449e : retf 0x8148
0x000000000043236d : retf 0x820f
0x00000000004195bc : retf 0x8304
0x0000000000432c31 : retf 0x830f
0x000000000048b451 : retf 0x8341
0x000000000041c9f9 : retf 0x8348
0x0000000000422c45 : retf 0x8349
0x00000000004662e2 : retf 0x840f
0x0000000000448111 : retf 0x8440
0x000000000048a4a5 : retf 0x8445
0x00000000004b98f0 : retf 0x8481
0x000000000040f322 : retf 0x850f
0x000000000040217a : retf 0x8545
0x000000000040e221 : retf 0x8548
0x0000000000432c6c : retf 0x870f
0x0000000000478ac1 : retf 0x877
0x000000000047b220 : retf 0x880f
0x000000000047c8e8 : retf 0x8820
0x0000000000448dc3 : retf 0x8880
0x0000000000420972 : retf 0x8902
0x0000000000410dff : retf 0x8920
0x000000000046a25d : retf 0x8941
0x0000000000486dda : retf 0x8945
0x0000000000402b52 : retf 0x8948
0x0000000000405325 : retf 0x8949
0x000000000040ef94 : retf 0x894c
0x0000000000446ce9 : retf 0x894d
0x000000000040455a : retf 0x8b48
0x000000000040e3f5 : retf 0x8b49
0x0000000000409ca5 : retf 0x8b4c
0x000000000045a992 : retf 0x8d
0x000000000046838d : retf 0x8d0f
0x000000000046748c : retf 0x8d41
0x0000000000400499 : retf 0x8d48
0x000000000041b42a : retf 0x8d49
0x0000000000423684 : retf 0x8d4a
0x000000000043b1ed : retf 0x8d4c
0x0000000000486e19 : retf 0x8d4f
0x0000000000481438 : retf 0x8d89
0x00000000004493ee : retf 0x8e0f
0x0000000000422a03 : retf 0x9066
0x00000000004ba24e : retf 0x93a2
0x000000000049183a : retf 0x948
0x000000000048ad3a : retf 0x950f
0x000000000045c5a0 : retf 0x97e
0x00000000004ba5eb : retf 0x99e0
0x00000000004ba95a : retf 0x9d7d
0x000000000047bb62 : retf 0x9e0f
0x00000000004bb265 : retf 0xa020
0x00000000004b87c5 : retf 0xa1eb
0x00000000004ba84b : retf 0xa2fe
0x000000000040f3da : retf 0xa375
0x00000000004ba91c : retf 0xab0d
0x00000000004bae6e : retf 0xae32
0x000000000042d622 : retf 0xb
0x0000000000449c25 : retf 0xb0e9
0x00000000004b9669 : retf 0xb51a
0x0000000000426342 : retf 0xb60f
0x00000000004674df : retf 0xb70f
0x000000000049d9b2 : retf 0xb9e9
0x000000000047821e : retf 0xba
0x00000000004ba973 : retf 0xbb9a
0x00000000004103ca : retf 0xbd75
0x00000000004ba9bd : retf 0xbf4b
0x0000000000400c32 : retf 0xbff3
0x000000000046254e : retf 0xc001
0x00000000004132d1 : retf 0xc031
0x00000000004c60fe : retf 0xc0a
0x00000000004ba63d : retf 0xc0fe
0x000000000040e237 : retf 0xc148
0x0000000000465abe : retf 0xc149
0x0000000000432aef : retf 0xc1c4
0x000000000045a4b2 : retf 0xc3
0x00000000004631e4 : retf 0xc748
0x000000000048b271 : retf 0xc77
0x0000000000403de1 : retf 0xc80f
0x000000000040054a : retf 0xc883
0x0000000000403aed : retf 0xc90f
0x000000000042f4f4 : retf 0xcab2
0x00000000004b7c0a : retf 0xcccb
0x0000000000409d11 : retf 0xd
0x0000000000456a7f : retf 0xd039
0x0000000000489693 : retf 0xd0eb
0x0000000000458d32 : retf 0xd189
0x00000000004b9426 : retf 0xd1cb
0x000000000043e490 : retf 0xd231
0x0000000000447427 : retf 0xd285
0x00000000004bab37 : retf 0xd39
0x000000000049d454 : retf 0xd3eb
0x000000000047bb47 : retf 0xd989
0x000000000040dd1d : retf 0xdaf7
0x000000000049d18f : retf 0xdb77
0x00000000004bb0c3 : retf 0xde4f
0x000000000041cda6 : retf 0xde9
0x0000000000405a8e : retf 0xdf75
0x00000000004b96f3 : retf 0xdf7f
0x000000000041643a : retf 0xdfeb
0x00000000004ae260 : retf 0xe
0x0000000000448da3 : retf 0xe083
0x00000000004c11a3 : retf 0xe0a
0x00000000004569d6 : retf 0xe0c1
0x00000000004b919e : retf 0xe152
0x000000000044946c : retf 0xe281
0x000000000049b26b : retf 0xe283
0x00000000004729bd : retf 0xe2c1
0x0000000000426769 : retf 0xe475
0x00000000004b977c : retf 0xe496
0x0000000000453707 : retf 0xe677
0x00000000004b90e6 : retf 0xe72e
0x00000000004b8773 : retf 0xe80
0x0000000000480b1b : retf 0xe873
0x0000000000470635 : retf 0xe875
0x0000000000443624 : retf 0xe901
0x00000000004435f4 : retf 0xe902
0x00000000004435e4 : retf 0xe904
0x00000000004435d4 : retf 0xe908
0x0000000000413ca8 : retf 0xe980
0x00000000004ba72c : retf 0xea91
0x000000000044416b : retf 0xeac0
0x000000000043e3f9 : retf 0xeac1
0x0000000000421641 : retf 0xead3
0x0000000000468211 : retf 0xeaf7
0x00000000004708e0 : retf 0xeb08
0x00000000004b884d : retf 0xeb83
0x00000000004bb041 : retf 0xebbf
0x000000000045c6bc : retf 0xebff
0x000000000040b3aa : retf 0xf
0x0000000000432eac : retf 0xf01
0x000000000043302c : retf 0xf02
0x000000000047bb42 : retf 0xf029
0x00000000004331ac : retf 0xf03
0x000000000043332c : retf 0xf04
0x00000000004334ac : retf 0xf05
0x000000000043362c : retf 0xf06
0x00000000004337ac : retf 0xf07
0x000000000043392c : retf 0xf08
0x0000000000433aac : retf 0xf09
0x0000000000433c2c : retf 0xf0a
0x0000000000433dac : retf 0xf0b
0x0000000000433f2c : retf 0xf0c
0x00000000004340ac : retf 0xf0d
0x000000000043422c : retf 0xf0e
0x00000000004343ac : retf 0xf0f
0x00000000004804bb : retf 0xf189
0x000000000042ac2d : retf 0xf1c5
0x000000000047b8c2 : retf 0xf40
0x0000000000425788 : retf 0xf41
0x000000000041ebc3 : retf 0xf44
0x00000000004239d0 : retf 0xf48
0x000000000041d069 : retf 0xf4c
0x00000000004ba688 : retf 0xf64
0x0000000000416a96 : retf 0xf66
0x000000000048b11d : retf 0xf741
0x000000000042e55a : retf 0xf748
0x0000000000476ac2 : retf 0xf8ad
0x00000000004a387c : retf 0xf91e
0x000000000042acff : retf 0xf9c5
0x0000000000457f7d : retf 0xfac1
0x000000000046dbe2 : retf 0xfb8b
0x0000000000476342 : retf 0xfcc9
0x000000000044e672 : retf 0xfd51
0x00000000004257b2 : retf 0xfdab
0x00000000004bdd04 : retf 0xfdc5
0x00000000004402d2 : retf 0xfddc
0x000000000043fad2 : retf 0xfde4
0x000000000044f4f2 : retf 0xfefd
0x0000000000434d11 : retf 0xff2
0x000000000040f6c2 : retf 0xff21
0x000000000042e98b : retf 0xff3
0x000000000041704f : retf 0xff31
0x000000000040d092 : retf 0xff8c
0x0000000000417fe2 : retf 0xff97
0x000000000041d2d2 : retf 0xffa1
0x000000000040ac92 : retf 0xffb0
0x00000000004628c5 : retf 0xffb8
0x0000000000409292 : retf 0xffca
0x0000000000461662 : retf 0xffe5
0x00000000004514c1 : retf 0xffe6
0x000000000040b639 : retf 0xffed
0x0000000000404d4c : retf 0xfff0
0x000000000048b87c : retf 0xfff2
0x0000000000400a67 : retf 0xfff5
0x00000000004c1ac1 : retf 0xfff6
0x000000000040b407 : retf 0xfff7
0x000000000045d693 : retf 0xfff8
0x000000000048110c : retf 0xfff9
0x0000000000453952 : retf 0xfffa
0x0000000000404ab9 : retf 0xfffb
0x000000000043ef51 : retf 0xfffc
0x000000000041f1e0 : retf 0xfffd
0x0000000000410603 : retf 0xfffe
0x0000000000409278 : retf 0xffff
0x000000000041d0ca : retf 1
0x0000000000415d1c : retf 2
0x000000000044b822 : retf 3
0x00000000004ad708 : retf 4
0x00000000004199fa : retf 5
0x000000000044127a : retf 6
0x000000000042ab8a : retf 7
0x00000000004b23b4 : retf 8
0x000000000042e6ab : retf 9
0x000000000043d835 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000043e485 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x0000000000466f9b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004164e7 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000004778be : rol bl, 1 ; mov eax, 1 ; ret
0x00000000004261ad : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000042e332 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000465852 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000041ef4f : rol byte ptr [rax + 0x755f067b], 1 ; retf 0x8948
0x00000000004b1ba0 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000447c98 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000489eb6 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000457b9c : rol byte ptr [rax - 0x79f0f606], 1 ; retf 0
0x00000000004606a5 : rol byte ptr [rax], 0 ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000042e87d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049c1b6 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000044f9fb : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000047a861 : rol byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000042cd42 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000004820b1 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000046b221 : rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46b218 ; ret
0x000000000047893b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000442cd6 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x0000000000416938 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00000000004a32bc : rol byte ptr [rbx - 8], 1 ; jmp rax
0x0000000000466812 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004729ba : rol byte ptr [rbx], 0x89 ; retf 0xe2c1
0x000000000043e341 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000044c5fb : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000004408b7 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000004a32b8 : rol byte ptr [rcx - 8], 0xff ; rol byte ptr [rbx - 8], 1 ; jmp rax
0x00000000004667f2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000043e156 : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x000000000044e112 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000043e1b7 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043e1a2 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000043292e : rol byte ptr [rcx], 1 ; ret 0x148
0x0000000000466852 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000466802 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000444b36 : rol byte ptr [rdx], 0x50 ; call rbx
0x000000000047c877 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x0000000000466842 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000049975d : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042ade5 : rol ch, 1 ; jns 0x42adc4 ; retf 0xead3
0x000000000042af35 : rol ch, 1 ; jns 0x42af14 ; retf 0xead3
0x000000000042b085 : rol ch, 1 ; jns 0x42b064 ; retf 0xead3
0x000000000042b1d5 : rol ch, 1 ; jns 0x42b1b4 ; retf 0xead3
0x000000000042b325 : rol ch, 1 ; jns 0x42b304 ; retf 0xead3
0x000000000042b475 : rol ch, 1 ; jns 0x42b454 ; retf 0xead3
0x000000000042b5c5 : rol ch, 1 ; jns 0x42b5a4 ; retf 0xead3
0x000000000042b715 : rol ch, 1 ; jns 0x42b6f4 ; retf 0xead3
0x000000000042b865 : rol ch, 1 ; jns 0x42b844 ; retf 0xead3
0x000000000042b9b5 : rol ch, 1 ; jns 0x42b994 ; retf 0xead3
0x000000000042bb05 : rol ch, 1 ; jns 0x42bae4 ; retf 0xead3
0x000000000042bc55 : rol ch, 1 ; jns 0x42bc34 ; retf 0xead3
0x000000000042bda5 : rol ch, 1 ; jns 0x42bd84 ; retf 0xead3
0x000000000042bef5 : rol ch, 1 ; jns 0x42bed4 ; retf 0xead3
0x000000000042c045 : rol ch, 1 ; jns 0x42c024 ; retf 0xead3
0x00000000004961e5 : rol ch, 1 ; jns 0x4961c4 ; retf 0xead3
0x0000000000496365 : rol ch, 1 ; jns 0x496344 ; retf 0xead3
0x00000000004964e5 : rol ch, 1 ; jns 0x4964c4 ; retf 0xead3
0x0000000000496665 : rol ch, 1 ; jns 0x496644 ; retf 0xead3
0x00000000004967e5 : rol ch, 1 ; jns 0x4967c4 ; retf 0xead3
0x0000000000496965 : rol ch, 1 ; jns 0x496944 ; retf 0xead3
0x0000000000496ae5 : rol ch, 1 ; jns 0x496ac4 ; retf 0xead3
0x0000000000496c65 : rol ch, 1 ; jns 0x496c44 ; retf 0xead3
0x0000000000496de5 : rol ch, 1 ; jns 0x496dc4 ; retf 0xead3
0x0000000000496f65 : rol ch, 1 ; jns 0x496f44 ; retf 0xead3
0x00000000004970e5 : rol ch, 1 ; jns 0x4970c4 ; retf 0xead3
0x0000000000497265 : rol ch, 1 ; jns 0x497244 ; retf 0xead3
0x00000000004973e5 : rol ch, 1 ; jns 0x4973c4 ; retf 0xead3
0x0000000000497565 : rol ch, 1 ; jns 0x497544 ; retf 0xead3
0x00000000004976e5 : rol ch, 1 ; jns 0x4976c4 ; retf 0xead3
0x00000000004b7c00 : rol cl, 0xc2 ; ret
0x000000000046831f : rol cl, cl ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000004bdce4 : rol dl, 1 ; std ; ljmp ptr [rax - 0x3e] ; std ; inc eax ; ret 0xfffd
0x000000000046679c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000426765 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000403e48 : rol dword ptr [rax + 0x7549027a], 1 ; retf
0x0000000000434490 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000432c9b : rol dword ptr [rax], 0 ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; retf 0x70e
0x00000000004674d8 : rol dword ptr [rbp + 0x7418dc9], -0x77 ; retf 0xb70f
0x0000000000400593 : rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x00000000004c2676 : rol dword ptr [rdx + 0xe], 8 ; retf 0
0x0000000000441ecb : rol eax, 1 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000046b293 : rol ebx, 0x4c ; mov eax, ecx ; ret
0x000000000044437d : rol ecx, -0x1f ; add edx, ebx ; loopne 0x4443e7 ; pop rbp ; ret
0x0000000000426032 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x426079 ; add rax, rdi ; ret
0x00000000004239d7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000041098a : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000473b49 : ror byte ptr [rax + 0x29], cl ; ret 0x3949
0x0000000000446eea : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000460554 : ror byte ptr [rax + 0x29], cl ; retf 0xc148
0x000000000049d578 : ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049cda1 : ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x000000000049c922 : ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000046ae9c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46aecf ; ret
0x00000000004427b8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000479336 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000401415 : ror byte ptr [rax + 0x39], 1 ; ret 0xe72
0x000000000049b0b7 : ror byte ptr [rax + 0x63], 0x44 ; test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000047bb3c : ror byte ptr [rax + 0x63], 1 ; ror dword ptr [rax + 1], cl ; retf 0xf029
0x00000000004436b5 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000467ca0 : ror byte ptr [rax + 0xf], 0xaf ; ret
0x000000000044f55d : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000046dc2e : ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000044f54e : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000479ebe : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x000000000042cc1c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000426002 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000488b96 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000488ad9 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000004239d4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004adfa8 : ror byte ptr [rax + rax], 0 ; ret
0x00000000004261a5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000488336 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000000004692ea : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc37fdbfd
0x000000000045dd8a : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000047b4d8 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000425ff2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000426022 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000426012 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000041bd07 : ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000041c026 : ror byte ptr [rax - 0x73], 1 ; push rsp ; ret
0x00000000004154ba : ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004791d3 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x0000000000412975 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000046a105 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x000000000040dc99 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000004598a9 : ror byte ptr [rax - 0x77], 1 ; ret 0xee8
0x000000000046acdf : ror byte ptr [rax - 0x77], 1 ; retf 0x6b8
0x00000000004109f9 : ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 0x29], cl ; retf
0x0000000000420c42 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000041789d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004133c1 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4133d6 ; ret
0x000000000047acf9 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000040fccf : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046adc0 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000041cba6 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000478668 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000049cdee : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000472182 : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000472f0c : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000456f12 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000047a73a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000490bfe : ror byte ptr [rax - 0x7d], cl ; in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x000000000047608d : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000449483 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000469d5e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004489c4 : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000047a9ea : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004880e4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000046dc9d : ror byte ptr [rbp + rcx*4 + 0x4a], cl ; dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000049d86c : ror byte ptr [rbp - 0x75], 0x51 ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x000000000041b427 : ror byte ptr [rcx + 0x21], 1 ; retf 0x8d49
0x0000000000447d00 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446ef9 : ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x0000000000447380 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000048d0df : ror byte ptr [rcx + 0x39], cl ; retf
0x0000000000403c34 : ror byte ptr [rcx + rcx*4 - 0x19], 1 ; mov eax, 3 ; syscall
0x000000000046b213 : ror byte ptr [rcx + rcx*4 - 0x38], 0x75 ; ret
0x0000000000465282 : ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000044f7ee : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000472635 : ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000043dff4 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2c76
0x000000000041158a : ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x0000000000426929 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000044f812 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000498e5d : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004426bc : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000468348 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x000000000041dd9d : ror byte ptr [rdi], 0x84 ; cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046b047 : ror byte ptr [rdi], 0x84 ; push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047eef6 : ror byte ptr [rdi], 0x84 ; ret
0x000000000041126e : ror byte ptr [rdi], 0x84 ; retf
0x000000000046f5c7 : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000040b636 : ror byte ptr [rdi], 0x84 ; retf 0xffed
0x000000000040b404 : ror byte ptr [rdi], 0x84 ; retf 0xfff7
0x0000000000463de1 : ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x00000000004798cf : ror byte ptr [rdi], 0x84 ; retf 1
0x000000000045eddf : ror byte ptr [rdi], 0x84 ; retf 3
0x000000000044674c : ror byte ptr [rdi], 0x84 ; test dword ptr [rdx], 0x83480000 ; ret
0x000000000043813a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000438176 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000459f09 : ror byte ptr [rdi], 0x85 ; ret 0xffee
0x000000000044ba00 : ror byte ptr [rdi], 0x85 ; retf 2
0x000000000044f926 : ror byte ptr [rdi], 0x88 ; retf
0x0000000000457f17 : ror byte ptr [rdi], 0x8a ; ret 8
0x0000000000490ab8 : ror byte ptr [rdi], 0x8f ; ret
0x000000000044241c : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047c26c : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x000000000047b9aa : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x000000000041b3b7 : ror byte ptr [rdi], 0x94 ; ret 0x7ae9
0x0000000000461a13 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000047acfc : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000485964 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000047b8fd : ror byte ptr [rdi], 0x94 ; ret 0xda38
0x000000000046727f : ror byte ptr [rdi], 0x95 ; ret 0xb8e9
0x000000000046713a : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x000000000040f9b2 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x0000000000466d6e : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x000000000040fc9c : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x000000000040dcae : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40dc98 ; ret
0x00000000004a3ae8 : ror byte ptr [rdi], 1 ; stc ; inc dword ptr [rax + 0xf] ; stc ; call rax
0x00000000004191c9 : ror byte ptr [rdi], 1 ; test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000046d925 : ror byte ptr [rdi], cl ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000484207 : ror byte ptr [rdi], cl ; test bh, bl ; retf 0xffff
0x000000000047bc1f : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x000000000047bd33 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000457f16 : ror byte ptr cs:[rdi], 0x8a ; ret 8
0x000000000047f35c : ror dl, 0x4b ; add bl, ch ; retf 0x1f0f
0x000000000043449b : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000041b424 : ror dword ptr [rax + 0x29], 1 ; ror byte ptr [rcx + 0x21], 1 ; retf 0x8d49
0x00000000004106a3 : ror dword ptr [rax + 0x29], cl ; ret
0x00000000004109fc : ror dword ptr [rax + 0x29], cl ; retf
0x000000000041ca2a : ror dword ptr [rax + 0x39], 1 ; retf
0x000000000047bb5f : ror dword ptr [rax + 0x39], 1 ; retf 0x9e0f
0x0000000000467e90 : ror dword ptr [rax + 0xf], -0x51 ; retf
0x000000000040e21d : ror dword ptr [rax + 0xf], 1 ; retf 0x8548
0x000000000047d056 : ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x000000000047bb3f : ror dword ptr [rax + 1], cl ; retf 0xf029
0x00000000004238a4 : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000004239c9 : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf 0xf48
0x00000000004658ba : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000472f5c : ror dword ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047a1c3 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000045a4d0 : ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x0000000000432982 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047e181 : ror dword ptr [rax - 0x77], cl ; ret
0x0000000000414b3d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x414b37 ; ret
0x0000000000463b3d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x463b37 ; ret
0x000000000040ec38 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000405442 : ror dword ptr [rax - 0x7d], cl ; ret
0x000000000044efc2 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000042c825 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x0000000000441cc5 : ror dword ptr [rcx + rcx*4 - 1], cl ; call 0x41dfa6
0x0000000000441d0a : ror dword ptr [rcx + rcx*4 - 9], cl ; call 0x41dfa6
0x000000000043bc67 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000488f78 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x000000000046823b : ror dword ptr [rdi], -0x6c ; ret
0x000000000042f0e8 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f7f4 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f5c6 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x000000000042f546 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042f884 : ror dword ptr [rdi], -0x7b ; je 0x42f894 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f37b : ror dword ptr [rdi], -0x7b ; jno 0x42f390 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f443 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f0c0 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004808a5 : ror dword ptr [rdi], -0x7d ; retf
0x0000000000414b3c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x414b38 ; ret
0x0000000000463b3c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x463b38 ; ret
0x0000000000446ef4 : sahf ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x00000000004712ef : sahf ; and eax, 0x48c03100 ; add esp, 8 ; ret
0x00000000004a3375 : sahf ; clc ; jmp rax
0x00000000004016bc : sahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042b7ee : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479811 : sahf ; ret 0x148
0x00000000004b8ae5 : sahf ; ret 0x38ae
0x0000000000451110 : sahf ; ret 0x8348
0x000000000047bb64 : sahf ; ret 0xe8c1
0x000000000049b793 : sahf ; ret 0xf45
0x00000000004b961c : sahf ; retf
0x0000000000463ddc : sahf ; sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x000000000041693e : sal bh, 0xd8 ; ret
0x000000000043e499 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x00000000004228a7 : sal bh, 1 ; ret 0x8000
0x0000000000422767 : sal bh, 1 ; ret 0xc000
0x0000000000422627 : sal bh, 1 ; ret 0xe000
0x00000000004224e7 : sal bh, 1 ; ret 0xf000
0x00000000004223a7 : sal bh, 1 ; ret 0xf800
0x0000000000422267 : sal bh, 1 ; ret 0xfc00
0x0000000000422127 : sal bh, 1 ; ret 0xfe00
0x0000000000421fe7 : sal bh, 1 ; ret 0xff00
0x0000000000421ea7 : sal bh, 1 ; ret 0xff80
0x0000000000421d67 : sal bh, 1 ; ret 0xffc0
0x0000000000421c27 : sal bh, 1 ; ret 0xffe0
0x0000000000421ae7 : sal bh, 1 ; ret 0xfff0
0x00000000004219a7 : sal bh, 1 ; ret 0xfff8
0x0000000000421867 : sal bh, 1 ; ret 0xfffc
0x0000000000421727 : sal bh, 1 ; ret 0xfffe
0x000000000045a524 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000466f8f : sal bl, 1 ; ret
0x0000000000473662 : sal byte ptr [rbp + 0x4b], 0x89 ; ret
0x0000000000425fe8 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000049e063 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000049e048 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x0000000000458d5e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000004427d1 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x00000000004133c4 : sal byte ptr [rbp + 9], cl ; ret
0x00000000004427e1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x0000000000416495 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000043d9a0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000414b40 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000042e4db : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040dcb3 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000047415f : sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x0000000000468f8c : sal byte ptr [rbp - 0x5a], 0xbf ; ret
0x0000000000466fcb : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000047e2bd : sal byte ptr [rbx - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x00000000004a3260 : sal byte ptr [rbx - 8], 1 ; push qword ptr [rax + 0x75] ; clc ; call qword ptr [rax]
0x000000000041d4b7 : sal byte ptr [rcx + rbp*2 + 0x48], 0x8d ; adc byte ptr [rax + 0x39], cl ; retf 0x1373
0x000000000042391c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000004731a7 : sal byte ptr [rcx + rsi + 0x4c], 0x89 ; retf 0x894c
0x00000000004427b6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000440cc2 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x00000000004a3c38 : sal byte ptr [rdi - 7], 0xff ; sal byte ptr [rdi - 7], 1 ; jmp rax
0x00000000004a3c3c : sal byte ptr [rdi - 7], 1 ; jmp rax
0x000000000046581b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000004237d3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000004a3bfc : sal byte ptr [rsi - 7], 0xff ; sal byte ptr [rsi - 7], 1 ; jmp rax
0x00000000004a3c00 : sal byte ptr [rsi - 7], 1 ; jmp rax
0x000000000046d721 : sal byte ptr [rsp + 0x48], 0x83 ; ret
0x000000000040dbe9 : sal byte ptr [rsp + rbp*2 + 0x48], 0xc7 ; ret 0xfff0
0x000000000047b041 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000004c0f39 : sal ch, cl ; call rdx
0x0000000000478bdf : sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x0000000000473ff7 : sal dword ptr [rbp - 0x2a], 1 ; ret
0x00000000004154b8 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000400c2b : sal ebx, 1 ; mov edi, 0xdfff0ff ; retf 0xbff3
0x0000000000432985 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000425d1e : salc ; add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x000000000043bca6 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000044dd57 : salc ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042fb69 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000049eac1 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a3699 : salc ; clc ; call rax
0x000000000043dc1b : salc ; clc ; ret
0x000000000043f27d : salc ; mov eax, 4 ; syscall
0x000000000043f2cc : salc ; mov eax, 5 ; syscall
0x000000000046ac8d : salc ; mov eax, 6 ; syscall
0x000000000044efd0 : salc ; mov rdi, r13 ; mov eax, r8d ; syscall
0x0000000000473ff9 : salc ; ret
0x00000000004a3454 : salc ; ret 0xfff8
0x0000000000409186 : salc ; retf
0x00000000004a344c : salc ; sar eax, -1 ; push rsi ; ret 0xfff8
0x00000000004bdee9 : salc ; std ; jmp rsp
0x000000000041efb2 : salc ; sub al, byte ptr [rax] ; test rax, rax ; je 0x41efc4 ; call rax
0x0000000000474521 : sar al, 0xff ; xor eax, eax ; ret
0x00000000004a3649 : sar al, 1 ; jmp qword ptr [rax]
0x00000000004a368d : sar al, cl ; jmp rax
0x00000000004bedd0 : sar bh, 1 ; hlt ; call qword ptr [rdx]
0x0000000000485a4a : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x0000000000483e0c : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000484453 : sar bl, 0xff ; dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000044d6d3 : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x0000000000471451 : sar byte ptr [rax + 3], 0x5b ; ret
0x000000000047a69c : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000449e81 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00000000004a3cb8 : sar byte ptr [rbp - 7], 1 ; push rax ; jge 0x4a3cbf ; call qword ptr [rax]
0x000000000044f630 : sar byte ptr [rcx - 0x76b7ff94], 0x15 ; std ; ret
0x000000000044dbf9 : sar byte ptr [rcx - 0x7ab7ff94], 0xc0 ; je 0x44dc0d ; call rax
0x00000000004442cd : sar byte ptr [rcx], cl ; ret
0x0000000000475062 : sar byte ptr [rdi + 0x4b5f7c], 0xe8 ; ret
0x00000000004750ec : sar byte ptr [rdi + 0x4bc5d8], 0x83 ; ret
0x00000000004bdc40 : sar byte ptr [rdi], 0xfd ; call qword ptr [rax]
0x000000000046bce9 : sar byte ptr [rdx + 1], 0xeb ; retf
0x0000000000478870 : sar byte ptr [rdx - 0x7cb7ff94], 0xc4 ; ret
0x00000000004411ec : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x000000000047c84c : sar byte ptr [rsi + 9], 1 ; ret
0x00000000004b947f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a3cd8 : sar byte ptr [rsi - 7], 1 ; push rax ; jle 0x4a3cdf ; call qword ptr [rax]
0x000000000044f62f : sar byte ptr ds:[rcx - 0x76b7ff94], 0x15 ; std ; ret
0x0000000000441ed9 : sar ch, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x0000000000441ecc : sar ch, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004c2e11 : sar ch, 1 ; jmp qword ptr [rdx]
0x0000000000413267 : sar dword ptr [rax + 2], 1 ; syscall
0x0000000000435763 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x43576e ; ret
0x000000000040053e : sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000402d3e : sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x00000000004a340d : sar eax, -1 ; jno 0x4a33dc ; clc ; push rcx ; ret 0xfff8
0x00000000004a3489 : sar eax, -1 ; mov ebx, 0x3bfff8c1 ; ret 0xfff8
0x00000000004a344d : sar eax, -1 ; push rsi ; ret 0xfff8
0x00000000004a3449 : sar eax, -1 ; salc ; sar eax, -1 ; push rsi ; ret 0xfff8
0x00000000004a3689 : sar eax, 1 ; call qword ptr [rax - 0x1f00072e]
0x0000000000464cac : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000047cc7b : sar eax, 3 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000441da4 : sar ebp, -1 ; mov rdi, qword ptr [r12] ; call rbx
0x0000000000441e46 : sar ebp, -1 ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004b91e3 : sar ecx, 1 ; jnp 0x4b91a4 ; ret
0x00000000004261a7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000464cab : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000004261a6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004bff3d : sbb al, 0 ; add byte ptr [rax + 0x55], dh ; cmc ; call qword ptr [rcx]
0x000000000043fee1 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004942ca : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000494223 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000004c29fc : sbb al, 0x47 ; add byte ptr [rax], al ; nop ; sbb bh, al ; call qword ptr [rax]
0x00000000004126e5 : sbb al, 0x4a ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000412439 : sbb al, 0x4a ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000418b83 : sbb al, 0x74 ; add eax, 0x5c415d5b ; ret
0x0000000000467c9e : sbb al, 0x89 ; ror byte ptr [rax + 0xf], 0xaf ; ret
0x00000000004632b3 : sbb al, 0x8b ; adc dword ptr [rax - 0x77], ecx ; retf
0x00000000004ba4e2 : sbb al, 0x8c ; retf
0x00000000004c7ffc : sbb al, 0x9d ; add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x0000000000470c39 : sbb al, 0xb8 ; retf 0
0x000000000049c976 : sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x00000000004a36d5 : sbb al, 0xf9 ; call qword ptr [rax]
0x00000000004a38d1 : sbb al, 0xf9 ; jmp qword ptr [rax]
0x00000000004a3795 : sbb al, 0xf9 ; jmp rdx
0x000000000047be70 : sbb al, 2 ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004bfd6d : sbb al, byte ptr [rax] ; add byte ptr [rax], dl ; cmc ; jmp qword ptr [rcx]
0x00000000004944aa : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000460c55 : sbb al, byte ptr [rcx - 0x7d] ; ret
0x00000000004944a9 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045a4b0 : sbb al, ch ; retf 0xc3
0x000000000046dbe0 : sbb al, ch ; retf 0xfb8b
0x00000000004c2a01 : sbb bh, al ; call qword ptr [rax]
0x00000000004a37a5 : sbb bh, cl ; jmp qword ptr [rdx]
0x00000000004a36e9 : sbb bh, cl ; jmp rax
0x00000000004c5551 : sbb bh, dl ; jmp qword ptr [rax]
0x00000000004c7029 : sbb bl, bh ; call qword ptr [rax]
0x0000000000446bf9 : sbb bl, byte ptr [rcx + 0x4a] ; add byte ptr [rax - 0x7f], cl ; ret 0x5900
0x00000000004b9272 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000004b7f65 : sbb bl, byte ptr [rsi] ; ret
0x00000000004784d4 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000046e398 : sbb byte ptr [r8 + 1], cl ; retf
0x000000000049ec5b : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000041073a : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000047acf6 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004718ab : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000004784d5 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000417103 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x000000000048dbb8 : sbb byte ptr [rax + 0x63], cl ; retf
0x00000000004109f6 : sbb byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 0x29], cl ; retf
0x000000000043e99a : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000046e399 : sbb byte ptr [rax + 1], cl ; retf
0x00000000004481c1 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x00000000004103c3 : sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf 0xbd75
0x000000000041811b : sbb byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x0000000000409a8e : sbb byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405d67
0x00000000004092fd : sbb byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405d68
0x000000000040d90a : sbb byte ptr [rax - 0x77], cl ; cmp ch, cl ; retf 0xfffb
0x00000000004011fc : sbb byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x0000000000414ba1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000490906 : sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000416412 : sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x000000000049100e : sbb byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000416437 : sbb byte ptr [rax - 0x77], cl ; retf 0xdfeb
0x0000000000410491 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000041de37 : sbb byte ptr [rax - 0x77], cl ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000412513 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000049ec5c : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000042c69e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000449564 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042c69d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000047862b : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000041545f : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043f221 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000049468a : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000464fd5 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; call rbx
0x0000000000444aa9 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000416cb3 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000042cae1 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000410b59 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004164d7 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004bdc70 : sbb byte ptr [rbx - 3], 0xff ; rcr byte ptr [rbp - 3], 1 ; jmp qword ptr [rax]
0x000000000044fe51 : sbb byte ptr [rcx + 0x29], cl ; retf
0x0000000000464b1b : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004717c9 : sbb byte ptr [rcx + 3], cl ; add al, 0x24 ; call rax
0x000000000041b579 : sbb byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x10 ; call rax
0x00000000004650b3 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000041ca33 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000410a33 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x000000000041073b : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00000000004a38ec : sbb byte ptr [rcx], 0xf9 ; jmp qword ptr [rax]
0x0000000000465107 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047acf7 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000497e9d : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004041f4 : sbb byte ptr [rdi], cl ; retf
0x000000000041e552 : sbb byte ptr [rdi], cl ; test edi, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004c3fc8 : sbb ch, bl ; clc ; call qword ptr [rbx]
0x00000000004c3ff8 : sbb ch, bl ; clc ; call qword ptr [rdx]
0x0000000000418da2 : sbb ch, byte ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000412bc5 : sbb cl, byte ptr [rax - 0x39] ; ret 0xffd0
0x000000000042349d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429f3d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042308d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000422b99 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004233a9 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bb8a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b3aa : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042b79a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042afba : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042aa9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a27d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000422e1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429a5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000042315d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000423479 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b159 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423549 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a5bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429d9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042957d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042a75d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00000000004232fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000422aed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000422eed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042b64a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ae6a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bf7a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004233cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000422bbd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000004298bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422c5f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000422fbd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x00000000004299f3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a6f3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a213 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b54b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042be7b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042322d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042aa33 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429d33 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429853 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a553 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b69b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aebb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422c83 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004186df : sbb cl, ch ; retf
0x0000000000444292 : sbb dl, byte ptr [rax - 0x3f7affd8] ; je 0x4442a8 ; ret
0x0000000000477647 : sbb dl, dh ; jmp r11
0x00000000004945c8 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049cb4c : sbb dword ptr [rax - 0x80], eax ; call qword ptr [rax]
0x0000000000494551 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004945c9 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000442744 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004925ce : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004534a8 : sbb dword ptr [rbx - 0x4a743], eax ; call qword ptr [rax]
0x00000000004ba81d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000455106 : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000043d677 : sbb eax, -1 ; ret
0x00000000004429a5 : sbb eax, 0 ; leave ; ret
0x00000000004a38cd : sbb eax, 0x1c90fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a3709 : sbb eax, 0x1d46fff9 ; stc ; call rsi
0x00000000004a31e5 : sbb eax, 0x1eb0fff8 ; clc ; jmp rax
0x000000000049ebe0 : sbb eax, 0x22d99b ; jne 0x49ebd0 ; pop rbx ; ret
0x00000000004b9273 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x000000000049412d : sbb eax, 0x894d0000 ; retf
0x0000000000413868 : sbb eax, 0xb0e8004a ; retf 0xfffe
0x000000000040fb57 : sbb eax, 0xf48004a ; ret 0x8948
0x0000000000494371 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004943e9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049237e : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047893a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000049c921 : sbb eax, eax ; cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000043d675 : sbb eax, eax ; sbb eax, -1 ; ret
0x000000000043feae : sbb ebp, 0x45 ; add byte ptr [rax], al ; ret
0x00000000004ba388 : sbb ebp, ebx ; retf
0x000000000047b6a9 : sbb ebx, 0x89000001 ; ret
0x000000000045c590 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x0000000000446c07 : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000411c3a : sbb ecx, dword ptr [rdx] ; pop rbx ; ret
0x00000000004a3771 : sbb ecx, edi ; call rdx
0x00000000004a38ed : sbb ecx, edi ; jmp qword ptr [rax]
0x00000000004a36f1 : sbb ecx, edi ; jmp rsi
0x00000000004a36ed : sbb ecx, edi ; push qword ptr [rsi + 0x19] ; stc ; jmp rsi
0x00000000004ba119 : sbb edi, ebp ; retf
0x00000000004a37a1 : sbb edi, ecx ; call qword ptr [rdx + 0x22fff91a]
0x00000000004a371d : sbb edi, ecx ; call qword ptr [rsi]
0x00000000004a38dd : sbb edi, ecx ; call rax
0x00000000004a38d9 : sbb edi, ecx ; inc dword ptr [rax + 0x1b] ; stc ; call rax
0x00000000004a385d : sbb edi, ecx ; jmp rsp
0x000000000049680f : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049650f : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049740f : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c90ed : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; push rax ; push rax ; std ; jmp qword ptr [rbx]
0x0000000000425abd : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000049770f : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042bbde : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x0000000000496e0f : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ba7c9 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x0000000000496b0f : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x000000000042bcdd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042555d : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000488b5c : scasd eax, dword ptr [rdi] ; and al, 0xd5 ; and bl, bl ; add byte ptr [r8 + 1], cl ; retf 0x8b48
0x0000000000401474 : scasd eax, dword ptr [rdi] ; ret
0x00000000004105dc : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043e1ba : scasd eax, dword ptr [rdi] ; ret 0x72e9
0x0000000000420c48 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000401593 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000043e1a5 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000044fb10 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x000000000048833d : scasd eax, dword ptr [rdi] ; ret 0xf48
0x0000000000467e93 : scasd eax, dword ptr [rdi] ; retf
0x0000000000488341 : scasd eax, dword ptr [rdi] ; retf 0xc148
0x00000000004b94f4 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004b876f : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004427bc : setae al ; ret
0x000000000041693c : setne al ; neg eax ; ret
0x0000000000465ef5 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000497c5d : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a0877 : shl byte ptr [rdx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043d8bf : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000042151b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000043bc63 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000421495 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042fa7b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042fa92 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000465a96 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465aa7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042f971 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a3240 : shl byte ptr [rsi - 8], 1 ; push qword ptr [rax + 0x68] ; clc ; call qword ptr [rax]
0x00000000004c6a60 : shl ch, 1 ; cli ; jmp qword ptr [rdx]
0x00000000004af1d0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004b907d : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x00000000004b9368 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000043d8a2 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000042f9f6 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043d71b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x0000000000465a92 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000042151f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042faad : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fa96 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fa7f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e53b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042fa11 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425e0c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042f8d1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000444381 : shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000044437e : shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x0000000000478e9c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000478e27 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478df6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000042c821 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000478e9b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000478e26 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478df5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004b8924 : shr al, cl ; add al, 0x3d ; retf
0x00000000004a3568 : shr bl, 1 ; clc ; call rax
0x000000000046a9ef : shr bl, cl ; ret
0x0000000000445dbd : shr bl, cl ; ret 0x438b
0x0000000000400620 : shr byte ptr [rax + rax], 0xbf ; ret 0
0x000000000043ddc6 : shr byte ptr [rax], cl ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000042e4df : shr byte ptr [rcx], 0xc8 ; ret
0x00000000004674d6 : shr byte ptr [rcx], 1 ; rol dword ptr [rbp + 0x7418dc9], -0x77 ; retf 0xb70f
0x000000000044c978 : shr byte ptr [rcx], cl ; ret
0x0000000000468330 : shr byte ptr [rcx], cl ; ret 0x428d
0x00000000004261ab : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004ba727 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x00000000004c7280 : shr byte ptr [rdx], 1 ; sti ; call rsp
0x00000000004a3564 : shr cl, 1 ; clc ; call rax
0x000000000045ed87 : shr cl, cl ; ret
0x000000000041e043 : shr dword ptr [rdx], 1 ; add byte ptr [rax + 0x29], cl ; retf 0x8948
0x0000000000426c39 : shr dword ptr [rdx], cl ; add dword ptr [rax], eax ; ret
0x000000000043e3ca : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043e3a9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000478fac : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000478f31 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000478f00 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464db3 : shr edx, 2 ; sub eax, edx ; ret
0x0000000000478fab : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000478f30 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000478eff : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464db2 : shr rdx, 2 ; sub eax, edx ; ret
0x00000000004ae3a9 : sldt word ptr [rax] ; ret
0x0000000000445e4c : stc ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041a6e2 : stc ; add eax, 0xf6410000 ; ret 0xf01
0x00000000004a38ce : stc ; call qword ptr [rax + 0x20fff91c]
0x00000000004a36b6 : stc ; call qword ptr [rax + 0x20fff91f]
0x00000000004a36d6 : stc ; call qword ptr [rax]
0x00000000004a37a2 : stc ; call qword ptr [rdx + 0x22fff91a]
0x00000000004a3782 : stc ; call qword ptr [rdx]
0x00000000004a36fe : stc ; call qword ptr [rsi + 0x26fff91e]
0x00000000004a371e : stc ; call qword ptr [rsi]
0x00000000004a36c6 : stc ; call rax
0x00000000004670c9 : stc ; call rbx
0x00000000004c44ca : stc ; call rdi
0x00000000004a3772 : stc ; call rdx
0x00000000004a370e : stc ; call rsi
0x00000000004a383a : stc ; call rsp
0x000000000047a9e2 : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000487907 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485bba : stc ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004a38da : stc ; inc dword ptr [rax + 0x1b] ; stc ; call rax
0x00000000004a36c2 : stc ; inc dword ptr [rax + 0x1e] ; stc ; call rax
0x00000000004a3aea : stc ; inc dword ptr [rax + 0xf] ; stc ; call rax
0x00000000004a36b2 : stc ; inc dword ptr [rax] ; and cl, bh ; call qword ptr [rax + 0x20fff91f]
0x00000000004a3c0a : stc ; inc dword ptr [rax] ; ja 0x4a3c0d ; call qword ptr [rax]
0x00000000004a3c62 : stc ; inc dword ptr [rax] ; jns 0x4a3c65 ; jmp qword ptr [rax]
0x00000000004a3c42 : stc ; inc dword ptr [rax] ; js 0x4a3c45 ; jmp qword ptr [rax]
0x00000000004a38ca : stc ; inc dword ptr [rax] ; sbb eax, 0x1c90fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a3a5e : stc ; inc dword ptr [rcx + rdx] ; stc ; push qword ptr [rax + rdx - 7] ; jmp rsp
0x00000000004a3836 : stc ; inc dword ptr [rdi + rbx - 7] ; call rsp
0x00000000004a379e : stc ; inc dword ptr [rdx] ; sbb edi, ecx ; call qword ptr [rdx + 0x22fff91a]
0x00000000004a370a : stc ; inc dword ptr [rsi + 0x1d] ; stc ; call rsi
0x00000000004a3c36 : stc ; inc eax ; ja 0x4a3c39 ; call rax
0x00000000004a3bfa : stc ; inc eax ; jbe 0x4a3bfd ; call rax
0x00000000004a3c8e : stc ; inc eax ; jl 0x4a3c91 ; call rax
0x00000000004a3c5a : stc ; inc eax ; js 0x4a3c5d ; jmp rax
0x000000000042ac92 : stc ; je 0x42ac5e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000496052 : stc ; je 0x49601e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004a392a : stc ; jmp qword ptr [rax + 0x16fff90f]
0x00000000004a36ba : stc ; jmp qword ptr [rax]
0x00000000004a399a : stc ; jmp qword ptr [rdx + 0x22fff911]
0x00000000004a3992 : stc ; jmp qword ptr [rdx + 0x22fff912]
0x00000000004a398a : stc ; jmp qword ptr [rdx + 0x22fff913]
0x00000000004a3982 : stc ; jmp qword ptr [rdx + 0x22fff914]
0x00000000004a397a : stc ; jmp qword ptr [rdx + 0x22fff915]
0x00000000004a37a6 : stc ; jmp qword ptr [rdx]
0x00000000004a3702 : stc ; jmp qword ptr [rsi]
0x00000000004a36ea : stc ; jmp rax
0x00000000004a3796 : stc ; jmp rdx
0x00000000004a36f2 : stc ; jmp rsi
0x00000000004a385e : stc ; jmp rsp
0x00000000004b91e4 : stc ; jnp 0x4b91a3 ; ret
0x0000000000432338 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046d897 : stc ; mov r15, rax ; jmp 0x46d865
0x00000000004a38d6 : stc ; push qword ptr [rax + 0x40fff91b] ; sbb edi, ecx ; call rax
0x00000000004a3a62 : stc ; push qword ptr [rax + rdx - 7] ; jmp rsp
0x00000000004a3c8a : stc ; push qword ptr [rax - 0x3f000684] ; jl 0x4a3c95 ; call rax
0x00000000004a3bf6 : stc ; push qword ptr [rax - 0x3f00068a] ; jbe 0x4a3c01 ; call rax
0x00000000004a3926 : stc ; push qword ptr [rax] ; adc cl, bh ; jmp qword ptr [rax + 0x16fff90f]
0x00000000004a3832 : stc ; push qword ptr [rdi + rbx + 0x1f44fff9] ; stc ; call rsp
0x00000000004a36ee : stc ; push qword ptr [rsi + 0x19] ; stc ; jmp rsi
0x00000000004a3af6 : stc ; push rax ; adc eax, 0x1560fff9 ; stc ; jmp rax
0x00000000004a3c06 : stc ; push rax ; jbe 0x4a3c0d ; inc dword ptr [rax] ; ja 0x4a3c11 ; call qword ptr [rax]
0x00000000004a3cba : stc ; push rax ; jge 0x4a3cbd ; call qword ptr [rax]
0x00000000004a3c96 : stc ; push rax ; jl 0x4a3c99 ; call qword ptr [rax]
0x00000000004a3cda : stc ; push rax ; jle 0x4a3cdd ; call qword ptr [rax]
0x00000000004655d3 : stc ; ret 0xfff9
0x000000000043dc1a : stc ; salc ; clc ; ret
0x0000000000441da3 : stc ; sar ebp, -1 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000040dd05 : stc ; syscall
0x0000000000435c64 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000041d062 : std ; add byte ptr [rax - 0x76b7ff94], ch ; retf 0xf4c
0x00000000004bdc62 : std ; call qword ptr [rax - 0x1f0002ac]
0x00000000004bdcb2 : std ; call qword ptr [rax - 0x2f000244]
0x00000000004bdca2 : std ; call qword ptr [rax - 0x2f00024d]
0x00000000004bdc92 : std ; call qword ptr [rax - 0x2f000256]
0x00000000004bdc82 : std ; call qword ptr [rax - 0x2f00025f]
0x00000000004bdc42 : std ; call qword ptr [rax]
0x00000000004c3c2a : std ; call qword ptr [rbx]
0x00000000004bdc72 : std ; call rax
0x00000000004c6f3a : std ; call rcx
0x00000000004bdd3a : std ; call rdx
0x00000000004be1fe : std ; call rsp
0x00000000004bddf6 : std ; dec dword ptr [rax + rbx*8] ; std ; jmp rsp
0x00000000004401ac : std ; dec dword ptr [rax - 0x75] ; jge 0x4401b8 ; call rbx
0x000000000044045f : std ; dec dword ptr [rax - 0x75] ; jge 0x44046b ; call rbx
0x0000000000441ff7 : std ; dec dword ptr [rax - 0x75] ; jge 0x442003 ; call rbx
0x000000000043fa3b : std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044006a : std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044046d : std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000440077 : std ; dec dword ptr [rcx - 0x75] ; jge 0x440083 ; call rbx
0x000000000044019e : std ; dec dword ptr [rcx - 0x75] ; jge 0x4401aa ; call rbx
0x00000000004402e1 : std ; dec dword ptr [rcx - 0x75] ; jge 0x4402ed ; call rbx
0x0000000000440451 : std ; dec dword ptr [rcx - 0x75] ; jge 0x44045d ; call rbx
0x0000000000441c6f : std ; dec dword ptr [rcx - 0x75] ; jge 0x441c7b ; call rbx
0x0000000000441d97 : std ; dec dword ptr [rcx - 0x75] ; jge 0x441da3 ; call rbx
0x0000000000441eda : std ; dec dword ptr [rcx - 0x75] ; jge 0x441ee6 ; call rbx
0x0000000000441fdb : std ; dec dword ptr [rcx - 0x75] ; jge 0x441fe7 ; call rbx
0x00000000004bdc5e : std ; inc dword ptr [rax + 0x52] ; std ; call qword ptr [rax - 0x1f0002ac]
0x00000000004bdbe6 : std ; inc dword ptr [rax + 0x79] ; std ; jmp qword ptr [rax]
0x00000000004bdc6e : std ; inc dword ptr [rax - 0x2f0002a5] ; pop rbp ; std ; jmp qword ptr [rax]
0x00000000004bdbee : std ; inc dword ptr [rax] ; jge 0x4bdbf5 ; jmp rax
0x00000000004bdbce : std ; inc dword ptr [rax] ; outsb dx, byte ptr [rsi] ; std ; jmp rax
0x000000000047365f : std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x00000000004bdcea : std ; inc eax ; ret 0xfffd
0x000000000047810e : std ; jbe 0x47811b ; ret
0x00000000004bdbca : std ; jmp qword ptr [rax]
0x00000000004c90f2 : std ; jmp qword ptr [rbx]
0x00000000004bdd0e : std ; jmp qword ptr [rdx - 0x1d00023a]
0x00000000004c2e12 : std ; jmp qword ptr [rdx]
0x00000000004bdbd2 : std ; jmp rax
0x00000000004bdd12 : std ; jmp rdx
0x00000000004bddfa : std ; jmp rsp
0x00000000004bdd4a : std ; lcall ptr [rax] ; retf
0x00000000004bdd42 : std ; lcall ptr [rdi - 0x4000236] ; retf
0x00000000004bdce6 : std ; ljmp ptr [rax - 0x3e] ; std ; inc eax ; ret 0xfffd
0x00000000004bdcd2 : std ; ljmp ptr [rax] ; ret
0x00000000004be1fa : std ; ljmp ptr [rbx + rbp*8] ; std ; call rsp
0x00000000004be1f6 : std ; ljmp ptr [rbx + rbp*8] ; std ; ljmp ptr [rbx + rbp*8] ; std ; call rsp
0x00000000004bddf2 : std ; ljmp ptr [rdi + rdx*8] ; std ; dec dword ptr [rax + rbx*8] ; std ; jmp rsp
0x000000000046a8d6 : std ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000041331c : std ; mov eax, 3 ; syscall
0x0000000000431b5b : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004bdcba : std ; push qword ptr [rax + 0x38fffd9d] ; ret 0xfffd
0x00000000004bdcca : std ; push qword ptr [rax + 0x38fffdc2] ; ret 0xfffd
0x00000000004bdd32 : std ; push rax ; enter -3, 0x60 ; leave ; std ; call rdx
0x000000000044f637 : std ; ret
0x00000000004ba11a : std ; retf
0x0000000000469caf : std ; retf 0xfffb
0x0000000000458b41 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000440cc0 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000426641 : sti ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x000000000048901b : sti ; add dword ptr [rax], 0x840f0000 ; retf
0x000000000046a4c4 : sti ; add r8b, bpl ; ret
0x00000000004c702a : sti ; call qword ptr [rax]
0x00000000004c7282 : sti ; call rsp
0x000000000046be37 : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000004748c4 : sti ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000046e449 : sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000466545 : sti ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000463ddd : sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x000000000044e4d6 : sti ; inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000045870e : sti ; inc dword ptr [rbx - 0x7af00008] ; retf 0xfffd
0x00000000004c6e22 : sti ; jmp qword ptr [rdx]
0x00000000004c6cb2 : sti ; jmp rsi
0x0000000000431f38 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043f583 : sti ; mov eax, 0x48 ; syscall
0x000000000046a651 : sti ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000044cc0b : sti ; mov eax, 3 ; syscall
0x00000000004b936a : sti ; ret
0x000000000048ed56 : sti ; ret 0xffbf
0x00000000004bdd48 : sti ; retf
0x000000000044f077 : sti ; test rax, rax ; je 0x44f085 ; call rax
0x0000000000469d79 : sti ; xor eax, 0x1480026 ; retf
0x000000000043ff10 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x000000000047aa6f : stosb byte ptr [rdi], al ; add byte ptr [r15 + 0x6cc9c0], r15b ; call rax
0x00000000004438e3 : stosb byte ptr [rdi], al ; add byte ptr [rdi - 0x76b6ff94], bl ; retf 0x34c
0x00000000004a339d : stosb byte ptr [rdi], al ; clc ; jmp qword ptr [rax]
0x00000000004b9844 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000049dfa2 : stosb byte ptr [rdi], al ; in eax, dx ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004092b2 : stosb byte ptr [rdi], al ; retf 0xffff
0x00000000004bdc95 : stosb byte ptr [rdi], al ; std ; call rax
0x0000000000468518 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000468519 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004ba94c : stosd dword ptr [rdi], eax ; ret
0x000000000041dbcd : stosd dword ptr [rdi], eax ; retf
0x00000000004ba84a : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x0000000000468517 : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004bad31 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004c0f35 : sub al, 0 ; add byte ptr [rax], ch ; sal ch, cl ; call rdx
0x0000000000400968 : sub al, 0 ; add ebx, esi ; ret
0x0000000000400709 : sub al, 0 ; pop rbp ; pop r12 ; ret
0x000000000040165e : sub al, 0 ; xor eax, eax ; ret
0x00000000004c2e0c : sub al, 0x4b ; add byte ptr [rax], al ; adc al, dl ; std ; jmp qword ptr [rdx]
0x0000000000442b8a : sub al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c7d0c : sub al, 0x9a ; add byte ptr [rax], al ; xor byte ptr [rcx], al ; cld ; jmp qword ptr [rax]
0x000000000042f0c3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004bddf4 : sub al, 0xd7 ; std ; dec dword ptr [rax + rbx*8] ; std ; jmp rsp
0x00000000004be1fc : sub al, 0xeb ; std ; call rsp
0x00000000004be1f8 : sub al, 0xeb ; std ; ljmp ptr [rbx + rbp*8] ; std ; call rsp
0x000000000041db8d : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041efb3 : sub al, byte ptr [rax] ; test rax, rax ; je 0x41efc3 ; call rax
0x0000000000480d81 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x000000000045fee3 : sub bh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000045f98a : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x0000000000463fac : sub bh, bh ; loopne 0x463f49 ; mov eax, 0xffffffff ; ret
0x00000000004c7281 : sub bh, bl ; call rsp
0x00000000004bdce0 : sub bl, al ; std ; call rax
0x00000000004bdcd4 : sub bl, al ; std ; ljmp ptr [rax] ; ret
0x000000000049e031 : sub bl, dh ; ret
0x000000000049e030 : sub bl, r14b ; ret
0x000000000041073e : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000046dcfa : sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046caf6 : sub byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000045d3c0 : sub byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000483b67 : sub byte ptr [rax + 0x48000000], 0x39 ; ret 0x820f
0x000000000041073f : sub byte ptr [rax + 1], cl ; ret 0x8949
0x0000000000466be0 : sub byte ptr [rax - 0x73], cl ; je 0x466c0f ; call rbx
0x000000000041c57b : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff9
0x000000000041ea74 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000040571f : sub byte ptr [rax - 0x77], cl ; ret
0x0000000000410495 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x0000000000462e7c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004255ed : sub byte ptr [rax - 0x77], cl ; retf
0x000000000040d589 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004820dc : sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000044270d : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004785c1 : sub byte ptr [rax], al ; jne 0x4785d8 ; add rsp, 0x38 ; ret
0x00000000004442ba : sub byte ptr [rax], al ; pop rbx ; ret
0x00000000004457e5 : sub byte ptr [rax], al ; ret
0x0000000000444294 : sub byte ptr [rax], al ; test eax, eax ; je 0x4442a6 ; ret
0x000000000043fd85 : sub byte ptr [rax], al ; test rax, rax ; je 0x43fd96 ; ret
0x000000000040dc6a : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000414820 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000444273 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000444272 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000004bf442 : sub byte ptr [rbx - 0x5ff1adfb], al ; add al, byte ptr [rdx] ; retf
0x000000000044d12a : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x000000000049ae21 : sub byte ptr [rcx - 0x77], cl ; xchg dword ptr [rax - 0x17000000], esp ; retf
0x00000000004c2618 : sub byte ptr [rcx], al ; clc ; call qword ptr [rdi]
0x0000000000487ef4 : sub byte ptr [rcx], cl ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000041eb8c : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047af5b : sub byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000044e4d4 : sub byte ptr [rsi - 5], dh ; inc dword ptr [rbx - 0x76be0008] ; ret
0x0000000000471d4e : sub cl, byte ptr [rax - 0x7d] ; ret
0x000000000046851a : sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000414005 : sub cl, ch ; ret 0xfffe
0x00000000004c4ac8 : sub dh, ch ; stc ; call qword ptr [rsi]
0x0000000000476e5a : sub dl, dh ; call r11
0x00000000004c0f38 : sub dl, dl ; cmc ; call rdx
0x00000000004b96ed : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x000000000041591b : sub dword ptr [rax + 0x39], ecx ; retf
0x00000000004c0cdd : sub dword ptr [rax], eax ; add byte ptr [rax - 0x41], dh ; cmc ; call qword ptr [rcx]
0x00000000004ba382 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x0000000000430187 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43019d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004302d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4302ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430427 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43043d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430577 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43058d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004306c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4306dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430817 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43082d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430967 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43097d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430ab7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430acd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430c1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430d6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430ea7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430ebd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430ff7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43100d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431147 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43115d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431297 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4312ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004313e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4313fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004300e3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004300df : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000043018d : sub dword ptr [rdi], esp ; jmp r9
0x000000000042f8a6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000004bac3a : sub dword ptr [rsi], 0x76 ; retf
0x0000000000469f4f : sub dword ptr [rsi], esp ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000469fc0 : sub dword ptr [rsi], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041eb69 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041ca02 : sub eax, 0x441f0f ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000045d491 : sub eax, 0x83000000 ; ret
0x00000000004b8386 : sub eax, 0xea4ca798 ; retf
0x000000000043ec1c : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044d594 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000043daf4 : sub eax, 1 ; ret
0x0000000000478366 : sub eax, dword ptr [0] ; ret
0x00000000004c0ded : sub eax, dword ptr [rax] ; add al, dl ; retf
0x00000000004168c9 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000416856 : sub eax, dword ptr [rax] ; add dword ptr [rip + 0x2b5d45], 1 ; ret
0x00000000004167c5 : sub eax, dword ptr [rax] ; ret
0x0000000000417d92 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x417da2 ; call rax
0x000000000040192f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000499e81 : sub eax, dword ptr [rcx + r8*4] ; je 0x499e67 ; ret
0x0000000000499e82 : sub eax, dword ptr [rcx + rax*4] ; je 0x499e66 ; ret
0x0000000000416ffe : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000043e51a : sub eax, dword ptr [rdx + rcx*4] ; je 0x43e506 ; ret
0x00000000004164b3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000041516d : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000466c1b : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000415be9 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000047a55d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000042290c : sub eax, ecx ; ret
0x00000000004239d9 : sub eax, edi ; ret
0x0000000000473945 : sub eax, edx ; mov rdi, rax ; call 0x400357
0x0000000000412b6e : sub eax, edx ; ret
0x000000000043dca7 : sub eax, edx ; vzeroupper ; ret
0x00000000004152ce : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004129c8 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004b95de : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004b8075 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000479545 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044437c : sub ecx, eax ; shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x00000000004164e0 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004164d5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000426034 : sub edx, eax ; jbe 0x426077 ; add rax, rdi ; ret
0x0000000000426044 : sub edx, eax ; jbe 0x426079 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000426054 : sub edx, eax ; jbe 0x426079 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000426064 : sub edx, eax ; jbe 0x426079 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000004420e1 : sub edx, esi ; mov eax, r12d ; syscall
0x0000000000410572 : sub edx, esi ; mov rdi, r15 ; call rax
0x0000000000412184 : sub edx, esi ; mov rdi, rbx ; call rax
0x0000000000474814 : sub esp, 0x1000 ; mov rsi, rsp ; syscall
0x000000000046ade2 : sub esp, 0x30 ; mov rdx, rsp ; syscall
0x0000000000415d14 : sub esp, 0x80 ; call 0x4427c8
0x0000000000415dab : sub esp, 0x80 ; call 0x4427f8
0x000000000046a51b : sub esp, 0x98 ; syscall
0x00000000004a0fe1 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000046ab06 : sub esp, 8 ; syscall
0x0000000000440373 : sub esp, ebx ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004be371 : sub esp, esi ; call rdi
0x0000000000415be8 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000043daf3 : sub rax, 1 ; ret
0x0000000000478365 : sub rax, qword ptr [0] ; ret
0x0000000000417d91 : sub rax, qword ptr [rax] ; test rax, rax ; je 0x417da3 ; call rax
0x0000000000417d90 : sub rax, qword ptr [rax] ; test rax, rax ; je 0x417da4 ; call rax
0x0000000000416ffd : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000478364 : sub rax, qword ptr fs:[0] ; ret
0x0000000000466c1a : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000004239d8 : sub rax, rdi ; ret
0x0000000000473944 : sub rax, rdx ; mov rdi, rax ; call 0x400358
0x0000000000412b6d : sub rax, rdx ; ret
0x000000000043dca6 : sub rax, rdx ; vzeroupper ; ret
0x0000000000426033 : sub rdx, rax ; jbe 0x426078 ; add rax, rdi ; ret
0x00000000004420e0 : sub rdx, rsi ; mov eax, r12d ; syscall
0x0000000000410571 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000412183 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000046ade1 : sub rsp, 0x30 ; mov rdx, rsp ; syscall
0x0000000000415d13 : sub rsp, 0x80 ; call 0x4427c9
0x0000000000415daa : sub rsp, 0x80 ; call 0x4427f9
0x000000000046a51a : sub rsp, 0x98 ; syscall
0x00000000004a0fe0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000046ab05 : sub rsp, 8 ; syscall
0x00000000004003da : syscall
0x000000000046d927 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000494c18 : test ah, dh ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495b18 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000494a38 : test ah, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495938 : test ah, dl ; add eax, 0x894d0000 ; retf
0x00000000004155e9 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049a073 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049c343 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000004be5f8 : test al, 0x3a ; hlt ; call qword ptr [rdx]
0x00000000004c0648 : test al, 0x69 ; cmc ; call qword ptr [rdx]
0x000000000041d606 : test al, 0x6c ; add byte ptr [rax + 0xf], cl ; retf 0x894c
0x000000000041d064 : test al, 0x6c ; add byte ptr [rax - 0x77], cl ; retf 0xf4c
0x000000000041da5d : test al, 0x6c ; add byte ptr [rbp - 0x42], dh ; ret
0x00000000004c45c8 : test al, 0x81 ; stc ; call rdx
0x00000000004b8937 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b831e : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x000000000047db6d : test al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000442357 : test al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004c3d28 : test al, 0xba ; clc ; jmp qword ptr [rsi]
0x0000000000476340 : test al, 0xe8 ; retf 0xfcc9
0x0000000000442419 : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004a3399 : test al, 0xf8 ; inc dword ptr [rax] ; stosb byte ptr [rdi], al ; clc ; jmp qword ptr [rax]
0x00000000004bdc91 : test al, 0xfd ; call qword ptr [rax - 0x2f000256]
0x000000000043f496 : test al, 2 ; cmove eax, edx ; ret
0x00000000004106b3 : test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000049315c : test al, ah ; or eax, 0x894d0000 ; retf
0x0000000000497c5c : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042e4da : test al, al ; jne 0x42e4c8 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000049855c : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049237c : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a328d : test al, bh ; inc eax ; test eax, edi ; call qword ptr [rax]
0x000000000041a610 : test al, dh ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000492a6c : test al, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000421296 : test ax, 1 ; ret
0x0000000000484209 : test bh, bl ; retf 0xffff
0x00000000004bb244 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000044674e : test bh, dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004190b4 : test bh, dl ; add al, 0 ; add dh, dh ; ret
0x00000000004b96f1 : test bh, dl ; retf 0xdf7f
0x000000000046b223 : test bl, bl ; je 0x46b216 ; ret
0x000000000045bdc3 : test bl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000475285 : test byte ptr [r8 - 0x77], r9b ; ret
0x000000000043f458 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x48 ; syscall
0x0000000000451ee6 : test byte ptr [rax + 0x63], cl ; retf 0x894c
0x000000000047c483 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000494688 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x000000000047ba59 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000046723e : test byte ptr [rax - 0x73], 0x54 ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x00000000004421ae : test byte ptr [rax - 0x75], 0x7c ; and al, 8 ; xor eax, eax ; syscall
0x0000000000440581 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000440cc4 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000475286 : test byte ptr [rax - 0x77], cl ; ret
0x000000000046fd81 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000498c1c : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c6745 : test byte ptr [rax], al ; add al, bl ; fdivr st(2) ; jmp rsi
0x00000000004c67cd : test byte ptr [rax], al ; add byte ptr [rax - 0x26], dh ; cli ; jmp rdi
0x000000000043be3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000043b27a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004167ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000411dba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000442d08 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004008ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004167aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043e37a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411b2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043bc7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000049951c : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049831c : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004662cc : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000492f0c : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004191cb : test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004662e4 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047a886 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x00000000004951b8 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000449466 : test byte ptr [rbp - 0x77000000], ch ; retf 0xe281
0x00000000004174c6 : test byte ptr [rbp - 0xa000000], ah ; ret
0x000000000047ac7a : test byte ptr [rbx + 0x251d433d], 0 ; jmp rax
0x0000000000495398 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041e0a7 : test byte ptr [rbx - 0xa000000], cl ; ret
0x000000000044954c : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000000004176ee : test byte ptr [rbx], dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x0000000000443ccf : test byte ptr [rcx + rax], ah ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000495578 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x0000000000450142 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x000000000049c8b2 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x00000000004670c3 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x00000000004c6464 : test byte ptr [rcx - 0x4fe80000], al ; cli ; call rdx
0x0000000000457baa : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x000000000043ff12 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x000000000047e86d : test byte ptr [rcx - 0x7d], 0xc5 ; add dword ptr [rax + 0x29], ecx ; retf 0x8d48
0x000000000047e50d : test byte ptr [rcx - 0x7d], 0xc7 ; add dword ptr [rax + 0x29], ecx ; retf 0x148
0x0000000000422c86 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c79b5 : test byte ptr [rcx], al ; ret
0x0000000000432c2c : test byte ptr [rcx], ch ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000495758 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x0000000000417f57 : test byte ptr [rdi - 0xa000000], cl ; ret
0x000000000049fa6e : test byte ptr [rdi], 0x84 ; ret
0x000000000044038a : test byte ptr [rdi], 0x84 ; ret 0
0x00000000004438d0 : test byte ptr [rdi], 0x84 ; retf 5
0x000000000045e15d : test byte ptr [rdi], 0x88 ; retf
0x000000000047bb37 : test byte ptr [rdi], 0x94 ; ret 0xd021
0x0000000000486add : test byte ptr [rdi], 0x9f ; ret 0xd629
0x0000000000465f0c : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000400603 : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000465ef4 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004114b4 : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004944a8 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000468521 : test byte ptr [rdx], dl ; jle 0x4684f3 ; add byte ptr [r8 - 0x77], cl ; ret
0x000000000047397e : test byte ptr [rip - 0x428], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000004657ad : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x000000000048b0c9 : test byte ptr [rsi + rax + 0x63480000], al ; retf 0x8348
0x0000000000494858 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x0000000000405b65 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004238bd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000049668e : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049638e : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x000000000049758e : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000496c8e : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000496f8e : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c3964 : test byte ptr [rsi], dl ; add byte ptr [rax - 0x64], bl ; clc ; jmp rbx
0x000000000044e6bd : test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004942c8 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c6744 : test byte ptr fs:[rax], al ; add al, bl ; fdivr st(2) ; jmp rsi
0x000000000043e392 : test ch, 0xf0 ; je 0x43e38b ; movzx eax, cl ; pop rbx ; ret
0x000000000044f1d6 : test ch, ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; retf 0x894c
0x000000000041dd9f : test ch, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049412b : test cl, ah ; sbb eax, 0x894d0000 ; retf
0x0000000000432c9a : test cl, al ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; retf 0x70e
0x0000000000445e4b : test cl, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041a6e1 : test cl, bh ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000423d26 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424026 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424f26 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424c26 : test cl, ch ; add eax, 0x894d0000 ; retf
0x0000000000424926 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424626 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043d77f : test cl, cl ; jne 0x43d774 ; ret
0x000000000043d82f : test cl, cl ; jne 0x43d824 ; ret
0x000000000043daef : test cl, cl ; jne 0x43dae8 ; sub rax, 1 ; ret
0x0000000000420716 : test cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x000000000043e3ba : test dh, 0xf0 ; je 0x43e38b ; movzx eax, dl ; pop rbx ; ret
0x00000000004688fd : test dh, cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044dd56 : test dh, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043bcc4 : test dl, 0x40 ; jne 0x43bc89 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043bcf2 : test dl, 4 ; jne 0x43bc89 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000041a665 : test dl, al ; add eax, 0xf6410000 ; ret 0xf01
0x000000000041d0c9 : test dl, cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000040dcb2 : test dl, dl ; jne 0x40dc94 ; ret
0x000000000043d99f : test dl, dl ; jne 0x43d998 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000426bf9 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x0000000000460c7b : test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x000000000047dc34 : test dword ptr [rax - 0x3f], 0x894803e0 ; ret 0x8948
0x00000000004c68c5 : test dword ptr [rax], eax ; add byte ptr [rax - 0x22], bl ; cli ; call rsi
0x000000000045c809 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000049b0bb : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000049b0ba : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042c56f : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000042f3a7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f7f6 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047eaa9 : test dword ptr [rbx - 0x16000002], esi ; ret
0x00000000004182f0 : test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000451e1b : test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000425faa : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x0000000000426910 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x0000000000410066 : test dword ptr [rcx + 0xf], 0x8948c046 ; ret 0x8949
0x000000000042f37d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f28d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f19d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045040e : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x000000000041b3ca : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047db1a : test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000426afa : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x000000000045f8b0 : test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000047cd23 : test dword ptr [rdi + rdi*8 - 1], ecx ; inc dword ptr [rcx - 0x77] ; ret
0x000000000044a02e : test dword ptr [rdi - 0x76fffff9], ebp ; retf 0x8b49
0x000000000045b3fc : test dword ptr [rdi - 0x7c00000c], esi ; ret
0x000000000042c385 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x000000000041f844 : test dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042f0c2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044674f : test dword ptr [rdx], 0x83480000 ; ret
0x0000000000440d2d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x000000000043d502 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c66e : test dword ptr [rsi - 0xc000005], esp ; ret
0x000000000042f5c8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004b97cd : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x000000000046be36 : test eax, 0x3948fffb ; ret
0x0000000000400708 : test eax, 0x415d002c ; pop rsp ; ret
0x00000000004ba620 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000432d36 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004426bb : test eax, eax ; cmove eax, edx ; ret
0x0000000000400958 : test eax, eax ; je 0x40096c ; mov edi, 0x4be2e0 ; call rax
0x00000000004009a6 : test eax, eax ; je 0x40099c ; call rax
0x0000000000402de2 : test eax, eax ; je 0x402df6 ; mov edi, 0x6cc060 ; call rax
0x0000000000403031 : test eax, eax ; je 0x40304f ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403225 : test eax, eax ; je 0x403243 ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403640 : test eax, eax ; je 0x403654 ; mov edi, 0x6cc0a0 ; call rax
0x0000000000403788 : test eax, eax ; je 0x40379c ; mov edi, 0x6cc0a0 ; call rax
0x0000000000417cb8 : test eax, eax ; je 0x417cc3 ; pop rbx ; ret
0x0000000000417d95 : test eax, eax ; je 0x417d9f ; call rax
0x000000000041efb6 : test eax, eax ; je 0x41efc0 ; call rax
0x0000000000423693 : test eax, eax ; je 0x42369f ; xchg eax, edx ; sub eax, edx ; ret
0x000000000043e606 : test eax, eax ; je 0x43e61a ; mov edi, 0x6cc720 ; call rax
0x000000000043e61e : test eax, eax ; je 0x43e632 ; mov edi, 0x6cc720 ; call rax
0x000000000043fd88 : test eax, eax ; je 0x43fd93 ; ret
0x000000000044410f : test eax, eax ; je 0x444123 ; mov edi, 0x6cb140 ; call rax
0x0000000000444296 : test eax, eax ; je 0x4442a4 ; ret
0x000000000044dace : test eax, eax ; je 0x44dae2 ; mov edi, 0x6cc720 ; call rax
0x000000000044dafd : test eax, eax ; je 0x44db19 ; mov edi, 0x6cc720 ; call rax
0x000000000044dbfe : test eax, eax ; je 0x44dc08 ; call rax
0x000000000044dc5d : test eax, eax ; je 0x44dc71 ; mov edi, 0x6cc720 ; call rax
0x000000000044ddd6 : test eax, eax ; je 0x44ddf1 ; mov edi, 0x6cc720 ; call rax
0x000000000044e0b6 : test eax, eax ; je 0x44e0ca ; mov edi, 0x6cc720 ; call rax
0x000000000044e1ba : test eax, eax ; je 0x44e1c4 ; call rax
0x000000000044f079 : test eax, eax ; je 0x44f083 ; call rax
0x0000000000470e82 : test eax, eax ; je 0x470e96 ; mov edi, 0x6cb100 ; call rax
0x0000000000474e76 : test eax, eax ; je 0x474e8a ; mov edi, 0x6cb140 ; call rax
0x0000000000474e9e : test eax, eax ; je 0x474eb2 ; mov edi, 0x6cb140 ; call rax
0x0000000000474f14 : test eax, eax ; je 0x474f28 ; mov edi, 0x6cb140 ; call rax
0x00000000004769e1 : test eax, eax ; je 0x476a59 ; mov edi, 0x6cb140 ; call rax
0x000000000047819c : test eax, eax ; je 0x47816b ; mov edi, 0x6cb140 ; call rax
0x00000000004782fa : test eax, eax ; je 0x47830e ; mov edi, 0x6cb140 ; call rax
0x000000000047b040 : test eax, eax ; je 0x47b058 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e716 : test eax, eax ; je 0x47e72a ; mov edi, 0x6cb140 ; call rax
0x000000000047e742 : test eax, eax ; je 0x47e756 ; mov edi, 0x6cb140 ; call rax
0x0000000000487ec0 : test eax, eax ; je 0x487ed4 ; mov edi, 0x6cb140 ; call rax
0x0000000000487f68 : test eax, eax ; je 0x487f7c ; mov edi, 0x6cb140 ; call rax
0x000000000049e8e8 : test eax, eax ; je 0x49e8fc ; mov edi, 0x6cb100 ; call rax
0x000000000049e9a9 : test eax, eax ; je 0x49e9bd ; mov edi, 0x6cb100 ; call rax
0x00000000004a064c : test eax, eax ; je 0x4a065b ; call rax
0x0000000000416494 : test eax, eax ; jne 0x41648d ; ret
0x0000000000425fe7 : test eax, eax ; jne 0x426047 ; xor rax, rax ; ret
0x00000000004427e0 : test eax, eax ; jne 0x4427db ; pop rdx ; pop r10 ; ret
0x000000000047415e : test eax, eax ; jne 0x474135 ; ret
0x000000000049e047 : test eax, eax ; jne 0x49e055 ; ret
0x000000000049e062 : test eax, eax ; jne 0x49e075 ; ret
0x000000000049e282 : test eax, eax ; jne 0x49e295 ; ret
0x0000000000471450 : test eax, eax ; js 0x47145d ; pop rbx ; ret
0x000000000047a69b : test eax, eax ; js 0x47a6ad ; ret
0x000000000046b212 : test eax, eax ; mov rax, r9 ; jne 0x46b270 ; ret
0x00000000004a3291 : test eax, edi ; call qword ptr [rax]
0x0000000000425f10 : test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004738d2 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000047a9be : test ebx, ebx ; jne 0x47a9d8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049ea70 : test ebx, ebx ; mov rdi, rbx ; jne 0x49ea68 ; pop rbx ; ret
0x000000000041a66f : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000043bcb2 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000466f89 : test ecx, ecx ; jne 0x466f48 ; mov rax, rdx ; ret
0x000000000046b261 : test ecx, ecx ; jne 0x46b217 ; xor eax, eax ; ret
0x000000000044734c : test edi, eax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x000000000041e554 : test edi, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000421240 : test edi, edi ; je 0x421259 ; mov eax, 0x16 ; ret
0x000000000042002c : test edi, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000423872 : test edx, edx ; je 0x423881 ; bsf eax, edx ; ret
0x000000000042391b : test edx, edx ; je 0x423938 ; bsf rax, rdx ; ret
0x000000000046581a : test edx, edx ; je 0x465848 ; bsf rax, rdx ; ret
0x00000000004133c3 : test edx, edx ; jne 0x4133d4 ; ret
0x0000000000414b3f : test edx, edx ; jne 0x414b35 ; ret
0x0000000000463b3f : test edx, edx ; jne 0x463b35 ; ret
0x0000000000466fca : test edx, edx ; jne 0x466fc5 ; ret
0x000000000040eeab : test edx, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041d0d3 : test edx, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000043bca5 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000040dce3 : test esi, esi ; jne 0x40dd21 ; mov eax, 0xba ; syscall
0x0000000000465711 : test esi, esi ; jne 0x465720 ; xor rax, rax ; ret
0x000000000043bcbf : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000046b222 : test r11b, r11b ; je 0x46b217 ; ret
0x000000000047415d : test r8, r8 ; jne 0x474136 ; ret
0x0000000000423692 : test r8d, r8d ; je 0x4236a0 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000046b211 : test r8d, r8d ; mov rax, r9 ; jne 0x46b271 ; ret
0x0000000000466f88 : test r9d, r9d ; jne 0x466f49 ; mov rax, rdx ; ret
0x00000000004009a5 : test rax, rax ; je 0x40099d ; call rax
0x0000000000417cb7 : test rax, rax ; je 0x417cc4 ; pop rbx ; ret
0x0000000000417d94 : test rax, rax ; je 0x417da0 ; call rax
0x000000000041efb5 : test rax, rax ; je 0x41efc1 ; call rax
0x000000000043fd87 : test rax, rax ; je 0x43fd94 ; ret
0x000000000044dbfd : test rax, rax ; je 0x44dc09 ; call rax
0x000000000044e1b9 : test rax, rax ; je 0x44e1c5 ; call rax
0x000000000044f078 : test rax, rax ; je 0x44f084 ; call rax
0x000000000047b03f : test rax, rax ; je 0x47b059 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a064b : test rax, rax ; je 0x4a065c ; call rax
0x0000000000416493 : test rax, rax ; jne 0x41648e ; ret
0x000000000047a9bd : test rbx, rbx ; jne 0x47a9d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049ea6f : test rbx, rbx ; mov rdi, rbx ; jne 0x49ea69 ; pop rbx ; ret
0x000000000042391a : test rdx, rdx ; je 0x423939 ; bsf rax, rdx ; ret
0x0000000000465819 : test rdx, rdx ; je 0x465849 ; bsf rax, rdx ; ret
0x00000000004133c2 : test rdx, rdx ; jne 0x4133d5 ; ret
0x0000000000414b3e : test rdx, rdx ; jne 0x414b36 ; ret
0x0000000000463b3e : test rdx, rdx ; jne 0x463b36 ; ret
0x0000000000465710 : test rsi, rsi ; jne 0x465721 ; xor rax, rax ; ret
0x00000000004135d5 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x00000000004357fa : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000432b1a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x0000000000432a50 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x0000000000432819 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000043dc00 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043295f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x0000000000432783 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00000000004327e6 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000043dbaa : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004357e6 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000004357cd : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000043dd7b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043dd7f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043dc15 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000043dc19 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000435b03 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000043599c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000043579e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000435762 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000435c65 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043df38 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000043de9b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000043dd3a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000042ac91 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004056c5 : vpsubsb xmm14, xmm15, xmmword ptr [rcx + 1] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000043dca9 : vzeroupper ; ret
0x0000000000467ff1 : wait ; add byte ptr es:[rax - 0x7d], cl ; ret
0x000000000049ebe1 : wait ; fldenv dword ptr [rdx] ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000004a3631 : xabort -1 ; retf 0xfff8
0x000000000047365d : xadd ebp, edi ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x00000000004a3460 : xchg ah, al ; clc ; call qword ptr [rsi]
0x000000000042349f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429f3f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042308f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000422b9b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000460a39 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004233ab : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bb8c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b3ac : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042b79c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042afbc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004977ed : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004423b7 : xchg bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x00000000004962f1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004974f1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496bf1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496ef1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004965e9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049a062 : xchg byte ptr [rax + 0x48000000], bh ; add esp, 8 ; ret
0x000000000049a072 : xchg byte ptr [rax + 0x48000000], ch ; add esp, 8 ; ret
0x000000000049a039 : xchg byte ptr [rax + 0x48000000], dh ; add esp, 8 ; ret
0x000000000042aa9f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a27f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000422e1f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429a5f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000042315f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x000000000042347b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b15b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042354b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a5bf : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429d9f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042957f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042a75f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00000000004232ff : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000422aef : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00000000004a371c : xchg byte ptr [rbx], bl ; stc ; call qword ptr [rsi]
0x000000000049b99c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x0000000000422eef : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000004b94f5 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000042b64c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ae6c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bf7c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000446e72 : xchg byte ptr [rdi], cl ; retf 0x1489
0x000000000049adb2 : xchg byte ptr [rdx + 1], dh ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004233cf : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000422bbf : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000004298bf : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422c61 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489560 : xchg byte ptr [rip + 0x394d0000], al ; retf
0x0000000000422fbf : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000496896 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004299f5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a6f5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497796 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496e96 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496b96 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000042a215 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b54d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049658e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042be7d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042322f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049561f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049543f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495e17 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494d37 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495c37 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043448f : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000042aa35 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429d35 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429855 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a555 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b69d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aebd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422c85 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049ae24 : xchg dword ptr [rax - 0x17000000], esp ; retf
0x000000000044572c : xchg dword ptr [rax - 0x39], ecx ; ret
0x00000000004c6a5d : xchg dword ptr [rax], eax ; add al, dl ; in eax, 0xfa ; jmp qword ptr [rdx]
0x0000000000470e46 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004b94f8 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000048f5df : xchg dword ptr [rax], esp ; add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x00000000004452c6 : xchg dword ptr [rbp + rcx*4 + 0x24], ecx ; ret
0x00000000004b907f : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x00000000004838cd : xchg dword ptr [rbp - 0x76ffffe7], edi ; retf 0x348
0x0000000000476a41 : xchg dword ptr [rbx + rax], edx ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x000000000045e07d : xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004848b5 : xchg dword ptr [rbx - 0x76fffffd], eax ; ret 0x348
0x000000000044e7c5 : xchg dword ptr [rbx - 0x7c000005], ecx ; ret 0x8901
0x00000000004b82ec : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004828eb : xchg dword ptr [rcx - 0x7d000000], ebx ; ret 0x8308
0x00000000004498d2 : xchg dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000049e53a : xchg dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; retf 0x1fc
0x0000000000482967 : xchg dword ptr [rdi - 0x76ffffd7], ebx ; retf 0x348
0x0000000000487823 : xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x00000000004427de : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x4427dd ; pop rdx ; pop r10 ; ret
0x000000000046e5a8 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x0000000000485639 : xchg dword ptr [rip - 0x76ffffff], eax ; ret 0x348
0x00000000004b848b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000494978 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000447cfb : xchg eax, ebp ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000464966 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000411462 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000453202 : xchg eax, ebp ; cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000004b87c9 : xchg eax, ebp ; jge 0x4b87ac ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000041ae8a : xchg eax, ebp ; ret
0x000000000047bc21 : xchg eax, ebp ; ret 0x3840
0x0000000000462dd7 : xchg eax, ebp ; ret 0x5389
0x000000000041c229 : xchg eax, ebp ; ret 0x8348
0x00000000004670de : xchg eax, ebp ; ret 0x8b4c
0x000000000048a665 : xchg eax, ebp ; ret 0x941
0x0000000000403a47 : xchg eax, ebp ; ret 0x953d
0x0000000000467dcb : xchg eax, ebp ; ret 0xb60f
0x0000000000467281 : xchg eax, ebp ; ret 0xb8e9
0x000000000046b84f : xchg eax, ebp ; ret 0xc084
0x000000000045b285 : xchg eax, ebp ; ret 0xc283
0x00000000004434f8 : xchg eax, ebp ; ret 0xc985
0x0000000000488f7a : xchg eax, ebp ; ret 0xd348
0x000000000046713c : xchg eax, ebp ; ret 0xd721
0x000000000040f9b4 : xchg eax, ebp ; ret 0xdaf7
0x00000000004442d1 : xchg eax, ebp ; ret 0xe1eb
0x0000000000466d70 : xchg eax, ebp ; ret 0xe883
0x000000000049b82d : xchg eax, ebp ; ret 0xf45
0x0000000000467d3f : xchg eax, ebp ; ret 0xf748
0x00000000004b9082 : xchg eax, ebp ; retf 0x33e6
0x000000000041693d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000485a49 : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000004ba4dc : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000415192 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x000000000046a270 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042e510 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004c85e9 : xchg eax, ebx ; cld ; call qword ptr [rax]
0x0000000000440109 : xchg eax, ebx ; fdivp st(5) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004bae6c : xchg eax, ebx ; in al, dx ; retf 0xae32
0x000000000043b13c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042fc92 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004ba383 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x4ba35d
0x000000000044fc00 : xchg eax, ebx ; ret 0x3948
0x000000000045075e : xchg eax, ebx ; ret 0x3949
0x000000000041123f : xchg eax, ebx ; ret 0x840
0x0000000000450c33 : xchg eax, ebx ; ret 0x8548
0x00000000004643d4 : xchg eax, ebx ; ret 0xd108
0x0000000000421027 : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000042ab41 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042926f : xchg eax, ecx ; sub eax, edx ; ret
0x00000000004b8835 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4b8803 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004b8a67 : xchg eax, edi ; jo 0x4b8ad4 ; salc ; retf
0x00000000004099c5 : xchg eax, edi ; ret
0x00000000004b919d : xchg eax, edi ; retf 0xe152
0x000000000044241b : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004ba4db : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004b8938 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000485a5f : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000004c752d : xchg eax, edx ; add byte ptr [rax], al ; nop ; nop ; jmp qword ptr [rsi]
0x0000000000467d3a : xchg eax, edx ; add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x00000000004177ea : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004ba1fd : xchg eax, edx ; jae 0x4ba1da ; push rsi ; pop rdx ; je 0x4ba1cf ; ret 0xacfc
0x00000000004b883c : xchg eax, edx ; pop rbx ; retf
0x00000000004a0f25 : xchg eax, edx ; ret 0x22
0x0000000000474ae9 : xchg eax, edx ; ret 0x8348
0x0000000000475356 : xchg eax, edx ; ret 0xb60f
0x000000000044241e : xchg eax, edx ; ret 0xd029
0x00000000004b82ef : xchg eax, edx ; ret 0xf869
0x00000000004a37a4 : xchg eax, edx ; sbb bh, cl ; jmp qword ptr [rdx]
0x0000000000423697 : xchg eax, edx ; sub eax, edx ; ret
0x000000000042e810 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000469936 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000434547 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000048c788 : xchg eax, esi ; add eax, 0x394d0000 ; retf
0x00000000004ba5e8 : xchg eax, esi ; jnp 0x4ba637 ; retf 0x99e0
0x000000000049abc9 : xchg eax, esi ; jo 0x49abd3 ; add byte ptr [rax], al ; jmp 0x49aba1
0x000000000042e8cd : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e82b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004bab8c : xchg eax, esi ; ret 0xcd11
0x000000000042e87c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004442c8 : xchg eax, esp ; imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x0000000000495579 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004bad9f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bad30 ; ret 0x48f
0x0000000000458b44 : xchg eax, esp ; ret
0x000000000046d917 : xchg eax, esp ; ret 0x1f0f
0x000000000047c26e : xchg eax, esp ; ret 0x3840
0x000000000047b9ac : xchg eax, esp ; ret 0x5438
0x000000000041b3b9 : xchg eax, esp ; ret 0x7ae9
0x0000000000461a15 : xchg eax, esp ; ret 0x7f3c
0x000000000043e07f : xchg eax, esp ; ret 0x8341
0x0000000000449e85 : xchg eax, esp ; ret 0x8348
0x000000000043e11f : xchg eax, esp ; ret 0x8444
0x000000000046f571 : xchg eax, esp ; ret 0x8545
0x000000000047acfe : xchg eax, esp ; ret 0x950f
0x0000000000455ba8 : xchg eax, esp ; ret 0x9522
0x0000000000402988 : xchg eax, esp ; ret 0xb60f
0x000000000046bcac : xchg eax, esp ; ret 0xc283
0x000000000047bb39 : xchg eax, esp ; ret 0xd021
0x0000000000485966 : xchg eax, esp ; ret 0xd309
0x000000000047b8ff : xchg eax, esp ; ret 0xda38
0x000000000047a740 : xchg eax, esp ; ret 0xdaf7
0x000000000049b7cc : xchg eax, esp ; ret 0xf45
0x0000000000459c68 : xchg eax, esp ; ret 0xfa80
0x000000000043e0a2 : xchg eax, esp ; ret 0xfe83
0x000000000046adbf : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000004b87c3 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x0000000000418d64 : xchg edi, esp ; add al, 0 ; add dh, dh ; ret
0x0000000000476137 : xchg edx, eax ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000043eb7f : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000411461 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000004c752c : xchg rax, rdx ; add byte ptr [rax], al ; nop ; nop ; jmp qword ptr [rsi]
0x00000000004190b5 : xlatb ; add al, 0 ; add dh, dh ; ret
0x0000000000469ef5 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b11f9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042fb6c : xlatb ; add r9, r11 ; jmp r9
0x000000000043e981 : xlatb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a369d : xlatb ; clc ; jmp qword ptr [rax]
0x00000000004a0837 : xlatb ; idiv edi ; ret
0x000000000046ae9f : xlatb ; ja 0x46aecc ; ret
0x00000000004b9363 : xlatb ; jo 0x4b93df ; mov ebp, 0xfb67d10d ; ret
0x00000000004522b2 : xlatb ; mov byte ptr [rsi], al ; jne 0x452298 ; mov rax, rsi ; ret
0x000000000040dcfd : xlatb ; mov eax, 0xea ; movsxd rdi, ecx ; syscall
0x000000000043e9e2 : xlatb ; mov eax, esi ; syscall
0x000000000043e9f2 : xlatb ; mov eax, r8d ; syscall
0x00000000004b8770 : xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004213e9 : xlatb ; ret
0x00000000004ba806 : xlatb ; ret 0x4e27
0x0000000000465af7 : xlatb ; ret 0x94c
0x0000000000425e0f : xlatb ; ret 0xc085
0x00000000004213e0 : xlatb ; ret 0xc148
0x0000000000423894 : xlatb ; ret 0xf66
0x000000000042147d : xlatb ; retf
0x000000000041fb59 : xlatb ; retf 0x2a
0x00000000004b87c4 : xlatb ; retf 0xa1eb
0x0000000000465bd4 : xlatb ; retf 0xc148
0x00000000004b96f2 : xlatb ; retf 0xdf7f
0x0000000000421640 : xlatb ; retf 0xead3
0x000000000042cd41 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000043bc66 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004228a6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000422766 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000422626 : xlatb ; sal bh, 1 ; ret 0xe000
0x00000000004224e6 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000004223a6 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000422266 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000422126 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000421fe6 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000421ea6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000421d66 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000421c26 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000421ae6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00000000004219a6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000421866 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000421726 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000043bc62 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000465a95 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465aa6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004bddf5 : xlatb ; std ; dec dword ptr [rax + rbx*8] ; std ; jmp rsp
0x0000000000469635 : xlatb ; xor ah, byte ptr [rsi] ; add byte ptr [rax + 0xf], cl ; retf 0x8948
0x00000000004a3558 : xor ah, ah ; clc ; call qword ptr [rax]
0x0000000000469636 : xor ah, byte ptr [rsi] ; add byte ptr [rax + 0xf], cl ; retf 0x8948
0x00000000004c1fd0 : xor al, 0 ; add byte ptr [rax], al ; hlt ; cmp al, 0 ; add byte ptr [rax], ch ; retf
0x00000000004bf714 : xor al, 0x14 ; add byte ptr [rax], al ; pop rax ; cmc ; call qword ptr [rax]
0x00000000004b82ea : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004c2614 : xor al, 0x43 ; add byte ptr [rax], al ; sub byte ptr [rcx], al ; clc ; call qword ptr [rdi]
0x00000000004ba386 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x000000000040564d : xor al, 0x89 ; ret 0x5525
0x00000000004c8014 : xor al, 0x9d ; add byte ptr [rax], al ; cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x00000000004c8614 : xor al, 0xa3 ; add byte ptr [rax], al ; fdiv st(2) ; cld ; call qword ptr [rax]
0x0000000000462237 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000048ccf6 : xor al, 0xc5 ; enter 0x4b7d, 0 ; call 0x478fc8
0x00000000004b94ca : xor al, 0xd8 ; ret
0x0000000000440068 : xor al, 0xdf ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004a3590 : xor al, ah ; clc ; push rax ; loope 0x4a3596 ; call rax
0x00000000004a3520 : xor al, ch ; clc ; jmp qword ptr [rax]
0x000000000046be33 : xor al, ch ; ja 0x46bde8 ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000004c2eb9 : xor bh, al ; jmp rsp
0x00000000004a3610 : xor bh, bl ; clc ; jmp rax
0x00000000004a34d8 : xor bl, al ; clc ; inc eax ; ret
0x000000000042606c : xor bl, al ; nop ; xor rax, rax ; ret
0x0000000000425f2d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000426761 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000049e824 : xor byte ptr [rax + 0x39], cl ; ret
0x00000000004212f1 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000467c1d : xor byte ptr [rax - 0x39], cl ; ret
0x0000000000449c6b : xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000042379f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000046ddc3 : xor byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000464aa2 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000426762 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000410c0d : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004c13a5 : xor byte ptr [rax], al ; add byte ptr [rax - 0xc], ch ; cmc ; call qword ptr [rdx]
0x000000000040eb22 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040eada : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000043e45c : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004649ea : xor byte ptr [rax], al ; je 0x4649f4 ; ret
0x00000000004a3928 : xor byte ptr [rax], dl ; stc ; jmp qword ptr [rax + 0x16fff90f]
0x0000000000415850 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000403683 : xor byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000049fa6b : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000000004a323c : xor byte ptr [rbp - 8], ah ; call rax
0x000000000049e37e : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004c0c17 : xor byte ptr [rbx + 0xaea0206], al ; ret
0x0000000000426b5b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000415b9e : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000004453ca : xor byte ptr [rbx], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x00000000004c6cb0 : xor byte ptr [rbx], cl ; sti ; jmp rsi
0x000000000041fcc1 : xor byte ptr [rcx + 0x39], cl ; retf 0x850f
0x0000000000420908 : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041ab8c : xor byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, r8d ; syscall
0x0000000000458b77 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004b87ce : xor byte ptr [rcx], ah ; retf
0x0000000000410c0e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040faa5 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004c7d10 : xor byte ptr [rcx], al ; cld ; jmp qword ptr [rax]
0x00000000004c7fd0 : xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x000000000047055f : xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x000000000046a9b4 : xor byte ptr [rdi], cl ; mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf 0x8348
0x0000000000463c00 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000458b42 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000040165c : xor byte ptr [rdx - 0x3fceffd4], cl ; ret
0x00000000004a325c : xor byte ptr [rdx - 8], dh ; call rax
0x00000000004c14ff : xor byte ptr [rdx], al ; ret
0x00000000004a31e4 : xor byte ptr [rip + 0x1eb0fff8], bl ; clc ; jmp rax
0x000000000042e5bf : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000465a5c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000425f2e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000040e1aa : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00000000004ba4de : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004a35dc : xor ch, ah ; clc ; call qword ptr [rax]
0x00000000004a35f4 : xor cl, ah ; clc ; inc dword ptr [rax] ; jrcxz 0x4a35fa ; jmp rax
0x00000000004660db : xor cl, byte ptr [rax + 0x39] ; ret
0x0000000000412bb5 : xor cl, byte ptr [rax + 0x63] ; jg 0x412c31 ; xor eax, eax ; syscall
0x0000000000473276 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000047d4bf : xor cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000440e52 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004a353c : xor dh, ah ; clc ; call qword ptr [rax]
0x00000000004a3978 : xor dl, byte ptr [rsi] ; stc ; jmp qword ptr [rdx + 0x22fff915]
0x0000000000476e2e : xor dl, dh ; jmp r11
0x0000000000476f40 : xor dl, dh ; ret
0x000000000040dce6 : xor dword ptr [rax + 0xba], edi ; syscall
0x0000000000420c45 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000045a4cd : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x00000000004b9776 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000041de3a : xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000043f35b : xor dword ptr [rax], 0x51 ; add byte ptr [rax], al ; ret
0x00000000004560da : xor dword ptr [rbx], ecx ; jmp rax
0x00000000004412f3 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000469d7a : xor eax, 0x1480026 ; retf
0x000000000045d63a : xor eax, 0x1f0f004b ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000049e0f9 : xor eax, 0x22ec52 ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000049dfa1 : xor eax, 0x22edaa ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004172b9 : xor eax, 0x3948002b ; ret
0x000000000048e4a9 : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040eb1f : xor eax, dword ptr [0x30] ; call rax
0x00000000004c16c5 : xor eax, dword ptr [rax] ; add byte ptr [rax + 0x40], bh ; idiv bh ; ret
0x000000000049cded : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000478667 : xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047873f : xor eax, eax ; add rsp, 0x68 ; ret
0x000000000047498a : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000451cd9 : xor eax, eax ; add rsp, 8 ; ret
0x0000000000465287 : xor eax, eax ; call rbx
0x000000000046ae9b : xor eax, eax ; cmp rdi, rdx ; ja 0x46aed0 ; ret
0x00000000004427b7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000004429b5 : xor eax, eax ; leave ; ret
0x000000000046bce8 : xor eax, eax ; mov edx, 1 ; jmp 0x46bcc4
0x00000000004631c9 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044082b : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000044292f : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041eb8d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b448 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000040ed2d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042382c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004123cc : xor eax, eax ; pop rbx ; ret
0x0000000000401660 : xor eax, eax ; ret
0x000000000042e4de : xor eax, eax ; sub eax, ecx ; ret
0x0000000000412bba : xor eax, eax ; syscall
0x000000000046b220 : xor eax, eax ; test r11b, r11b ; je 0x46b219 ; ret
0x00000000004133c0 : xor eax, eax ; test rdx, rdx ; jne 0x4133d7 ; ret
0x00000000004a3424 : xor ebp, eax ; clc ; call rcx
0x0000000000467b53 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000474228 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044046b : xor ebx, ebx ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000040e234 : xor ecx, dword ptr [rax + 0x29] ; retf 0xc148
0x000000000046a9cd : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x00000000004480f1 : xor ecx, dword ptr [rax - 0x77] ; ret
0x00000000004258e9 : xor ecx, dword ptr [rax - 0x77] ; retf 0x8948
0x0000000000466565 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000044f1b2 : xor ecx, eax ; ret 0x4809
0x0000000000400c50 : xor edi, edi ; mov eax, edx ; syscall
0x000000000040ead7 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000444b33 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000045a523 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x000000000047a9e9 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a9ee : xor edx, edx ; jmp 0x46a9b8
0x0000000000473f94 : xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004154b9 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000041789c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000004880e3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000440cc1 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000043eb3c : xor esi, esi ; mov eax, 2 ; syscall
0x0000000000403939 : xor esi, esi ; mov eax, ecx ; syscall
0x000000000044cb8e : xor esi, esi ; mov edi, 0x4a5fa8 ; mov eax, ecx ; syscall
0x0000000000401775 : xor esi, esi ; mov edi, 1 ; call rax
0x000000000047ac79 : xor esi, esi ; mov edi, dword ptr [rip + 0x251d43] ; jmp rax
0x000000000043ff11 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000440cc3 : xor esi, esi ; mov rbx, rax ; call rax
0x0000000000440ce8 : xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000440d0d : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440d31 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440d51 : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000465286 : xor r8d, r8d ; call rbx
0x000000000040eb1e : xor rax, qword ptr [0x30] ; call rax
0x000000000040eb1d : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000425faf : xor rax, rax ; ret
0x000000000040ead6 : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040ead5 : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 10841
